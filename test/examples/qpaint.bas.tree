(program 
  (declare_statement DECLARE SUB 
    (untyped_id endscreen) 
    ( )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id savecheck) 
    ( )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id noload) 
    ( )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id clearscreen) 
    ( )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id changecolor) 
    ( 
      (declare_parameter_list 
        (declare_parameter change)) )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id erasesub) 
    ( 
      (declare_parameter_list 
        (declare_parameter change!) , 
        (declare_parameter erasetype!)) )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id getpic) 
    ( 
      (declare_parameter_list 
        (declare_parameter ok)) )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id linechoose) 
    ( 
      (declare_parameter_list 
        (declare_parameter linetype!) , 
        (declare_parameter change!)) )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id loadsub) 
    ( 
      (declare_parameter_list 
        (declare_parameter listbeg) , 
        (declare_parameter scrolposy) , 
        (declare_parameter scrolpos) , 
        (declare_parameter gfxlistmax) , 
        (declare_parameter change)) )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id restoremenu) 
    ( )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id savesub) 
    ( )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id setup) 
    ( )) \n \n 
  (statement 
    (key_statement KEY 
      (expr 
        (literal 15)) , 
      (expr 
        (expr 
          (variable_or_function_call CHR$ 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 160)))) ))) + 
        (expr 
          (literal "K"))))) \n 
  (statement 
    (key_statement KEY 
      (expr 
        (literal 16)) , 
      (expr 
        (expr 
          (variable_or_function_call CHR$ 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 160)))) ))) + 
        (expr 
          (literal "M"))))) \n 
  (statement 
    (key_statement KEY 
      (expr 
        (literal 17)) , 
      (expr 
        (expr 
          (variable_or_function_call CHR$ 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 160)))) ))) + 
        (expr 
          (literal "P"))))) \n 
  (statement 
    (key_statement KEY 
      (expr 
        (literal 18)) , 
      (expr 
        (expr 
          (variable_or_function_call CHR$ 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 160)))) ))) + 
        (expr 
          (literal "H"))))) \n 
  (statement 
    (key_statement KEY 
      (expr 
        (literal 19)) , 
      (expr 
        (expr 
          (variable_or_function_call CHR$ 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 161)))) ))) + 
        (expr 
          (literal "K"))))) \n 
  (statement 
    (key_statement KEY 
      (expr 
        (literal 20)) , 
      (expr 
        (expr 
          (variable_or_function_call CHR$ 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 161)))) ))) + 
        (expr 
          (literal "M"))))) \n 
  (statement 
    (key_statement KEY 
      (expr 
        (literal 21)) , 
      (expr 
        (expr 
          (variable_or_function_call CHR$ 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 161)))) ))) + 
        (expr 
          (literal "P"))))) \n 
  (statement 
    (key_statement KEY 
      (expr 
        (literal 22)) , 
      (expr 
        (expr 
          (variable_or_function_call CHR$ 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 161)))) ))) + 
        (expr 
          (literal "H"))))) \n \n 
  (statement 
    (on_event_gosub_statement ON KEY 
      ( 
        (expr 
          (literal 1)) ) GOSUB 
      (target 
        (text_label 
          (untyped_id savefile))))) \n 
  (statement 
    (on_event_gosub_statement ON KEY 
      ( 
        (expr 
          (literal 2)) ) GOSUB 
      (target 
        (text_label 
          (untyped_id loadfile))))) \n 
  (statement 
    (on_event_gosub_statement ON KEY 
      ( 
        (expr 
          (literal 3)) ) GOSUB 
      (target 
        (text_label 
          (untyped_id getimage))))) \n 
  (statement 
    (on_event_gosub_statement ON KEY 
      ( 
        (expr 
          (literal 15)) ) GOSUB 
      (target 
        (text_label 
          (untyped_id moveleft))))) \n 
  (statement 
    (on_event_gosub_statement ON KEY 
      ( 
        (expr 
          (literal 16)) ) GOSUB 
      (target 
        (text_label 
          (untyped_id moveright))))) \n 
  (statement 
    (on_event_gosub_statement ON KEY 
      ( 
        (expr 
          (literal 17)) ) GOSUB 
      (target 
        (text_label 
          (untyped_id movedown))))) \n 
  (statement 
    (on_event_gosub_statement ON KEY 
      ( 
        (expr 
          (literal 18)) ) GOSUB 
      (target 
        (text_label 
          (untyped_id moveup))))) \n 
  (statement 
    (on_event_gosub_statement ON KEY 
      ( 
        (expr 
          (literal 19)) ) GOSUB 
      (target 
        (text_label 
          (untyped_id drawleft))))) \n 
  (statement 
    (on_event_gosub_statement ON KEY 
      ( 
        (expr 
          (literal 20)) ) GOSUB 
      (target 
        (text_label 
          (untyped_id drawright))))) \n 
  (statement 
    (on_event_gosub_statement ON KEY 
      ( 
        (expr 
          (literal 21)) ) GOSUB 
      (target 
        (text_label 
          (untyped_id drawdown))))) \n 
  (statement 
    (on_event_gosub_statement ON KEY 
      ( 
        (expr 
          (literal 22)) ) GOSUB 
      (target 
        (text_label 
          (untyped_id drawup))))) \n \n 
  (statement 
    (dim_statement DIM SHARED 
      (dim_variable coltabx) , 
      (dim_variable coltaby))) \n 
  (statement 
    (dim_statement DIM SHARED 
      (dim_variable xpos) , 
      (dim_variable ypos))) \n 
  (statement 
    (dim_statement DIM SHARED 
      (dim_variable col) , 
      (dim_variable under1) , 
      (dim_variable under2) , 
      (dim_variable under3))) \n 
  (statement 
    (dim_statement DIM SHARED 
      (dim_variable cleartxt 
        (dim_array_bounds 
          ( 
            (dim_subscript 
              (expr 
                (literal 1000))) ))))) \n 
  (statement 
    (dim_statement DIM SHARED 
      (dim_variable overflag))) \n \n 
  (statement 
    (const_statement CONST 
      (const_assignment false = 
        (const_expr 
          (expr 
            (literal 0)))) , 
      (const_assignment true = 
        (const_expr 
          (expr 
            (literal 1)))))) \n \n 
  (statement 
    (screen_statement SCREEN 
      (expr 
        (literal 13)))) \n 
  (statement 
    (call_statement 
      (untyped_id setup))) \n \n 
  (statement 
    (event_control_statement KEY 
      ( 
        (expr 
          (literal 1)) ) ON)) \n 
  (statement 
    (event_control_statement KEY 
      ( 
        (expr 
          (literal 2)) ) ON)) \n 
  (statement 
    (event_control_statement KEY 
      ( 
        (expr 
          (literal 3)) ) ON)) \n 
  (statement 
    (event_control_statement KEY 
      ( 
        (expr 
          (literal 15)) ) ON)) \n 
  (statement 
    (event_control_statement KEY 
      ( 
        (expr 
          (literal 16)) ) ON)) \n 
  (statement 
    (event_control_statement KEY 
      ( 
        (expr 
          (literal 17)) ) ON)) \n 
  (statement 
    (event_control_statement KEY 
      ( 
        (expr 
          (literal 18)) ) ON)) \n 
  (statement 
    (event_control_statement KEY 
      ( 
        (expr 
          (literal 19)) ) ON)) \n 
  (statement 
    (event_control_statement KEY 
      ( 
        (expr 
          (literal 20)) ) ON)) \n 
  (statement 
    (event_control_statement KEY 
      ( 
        (expr 
          (literal 21)) ) ON)) \n 
  (statement 
    (event_control_statement KEY 
      ( 
        (expr 
          (literal 22)) ) ON)) \n \n 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call xpos) = 
      (expr 
        (literal 171)))) \n 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call ypos) = 
      (expr 
        (literal 2)))) \n 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call under1) = 
      (expr 
        (literal 255)))) \n 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call under2) = 
      (expr 
        (literal 255)))) \n 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call under3) = 
      (expr 
        (literal 255)))) \n 
  (statement 
    (pset_statement PSET 
      ( 
        (expr 
          (variable_or_function_call xpos)) , 
        (expr 
          (variable_or_function_call ypos)) ) , 
      (expr 
        (literal 0)))) \n 
  (statement 
    (pset_statement PSET 
      ( 
        (expr 
          (expr 
            (variable_or_function_call xpos)) + 
          (expr 
            (literal 1))) , 
        (expr 
          (variable_or_function_call ypos)) ) , 
      (expr 
        (literal 0)))) \n 
  (statement 
    (pset_statement PSET 
      ( 
        (expr 
          (variable_or_function_call xpos)) , 
        (expr 
          (expr 
            (variable_or_function_call ypos)) + 
          (expr 
            (literal 1))) ) , 
      (expr 
        (literal 0)))) \n \n 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call col) = 
      (expr 
        (literal 1)))) \n 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call prevcol) = 
      (expr 
        (literal 255)))) \n 
  (statement 
    (line_statement LINE 
      ( 
        (expr 
          (literal 81)) , 
        (expr 
          (literal 184)) ) - 
      ( 
        (expr 
          (literal 151)) , 
        (expr 
          (literal 193)) ) , 
      (expr 
        (variable_or_function_call col)) , 
      (box_style BF))) \n 
  (statement 
    (line_statement LINE 
      ( 
        (expr 
          (literal 81)) , 
        (expr 
          (literal 184)) ) - 
      ( 
        (expr 
          (literal 151)) , 
        (expr 
          (literal 193)) ) , 
      (expr 
        (literal 10)) , 
      (box_style B))) \n \n 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call drawflag) = 
      (expr 
        (variable_or_function_call true)))) \n \n 
  (statement 
    (do_loop_statement DO 
      (block \n \n 
        (statement 
          (assignment_statement LET 
            (variable_or_function_call keyb$) = 
            (expr 
              (variable_or_function_call INKEY$)))) \n \n 
        (if_block_statement IF 
          (expr 
            (expr 
              (variable_or_function_call LCASE$ 
                ( 
                  (argument_list 
                    (argument 
                      (expr 
                        (variable_or_function_call keyb$)))) ))) = 
            (expr 
              (literal "c"))) THEN \n 
          (then_block 
            (if_block_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call eraseflag)) = 
                (expr 
                  (variable_or_function_call false))) THEN \n 
              (then_block 
                (statement 
                  (call_statement CALL 
                    (untyped_id changecolor) 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call change)))) ))) \n 
                (statement 
                  (call_statement CALL 
                    (untyped_id restoremenu))) \n) 
              (end_if_statement END IF)) \n) 
          (end_if_statement END IF)) \n \n 
        (if_block_statement IF 
          (expr 
            (expr 
              (variable_or_function_call LCASE$ 
                ( 
                  (argument_list 
                    (argument 
                      (expr 
                        (variable_or_function_call keyb$)))) ))) = 
            (expr 
              (literal "e"))) THEN \n 
          (then_block 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call lineflag)) = 
                  (expr 
                    (literal 2))) THEN 
                (if_inline_action 
                  (statement 
                    (pset_statement PSET 
                      ( 
                        (expr 
                          (variable_or_function_call lineunderx)) , 
                        (expr 
                          (variable_or_function_call lineundery)) ) , 
                      (expr 
                        (variable_or_function_call lineunder))))))) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call lineflag) = 
                (expr 
                  (variable_or_function_call false)))) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call drawflag) = 
                (expr 
                  (variable_or_function_call false)))) \n 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call eraseflag)) = 
                  (expr 
                    (variable_or_function_call false))) THEN 
                (if_inline_action 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call prevcol) = 
                      (expr 
                        (variable_or_function_call col))))))) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call col) = 
                (expr 
                  (literal 255)))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 81)) , 
                  (expr 
                    (literal 184)) ) - 
                ( 
                  (expr 
                    (literal 151)) , 
                  (expr 
                    (literal 193)) ) , 
                (expr 
                  (variable_or_function_call col)) , 
                (box_style BF))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 81)) , 
                  (expr 
                    (literal 184)) ) - 
                ( 
                  (expr 
                    (literal 151)) , 
                  (expr 
                    (literal 193)) ) , 
                (expr 
                  (literal 10)) , 
                (box_style B))) \n 
            (statement 
              (call_statement CALL 
                (untyped_id erasesub) 
                ( 
                  (argument_list 
                    (argument 
                      (expr 
                        (variable_or_function_call change))) , 
                    (argument 
                      (expr 
                        (variable_or_function_call erasetype)))) ))) \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call erasetype)) = 
                (expr 
                  (literal 1))) THEN \n 
              (then_block 
                (statement 
                  (if_inline_statement IF 
                    (expr 
                      (expr 
                        (variable_or_function_call eraseflag)) = 
                      (expr 
                        (literal 2))) THEN 
                    (if_inline_action 
                      (statement 
                        (pset_statement PSET 
                          ( 
                            (expr 
                              (variable_or_function_call lineunderx)) , 
                            (expr 
                              (variable_or_function_call lineundery)) ) , 
                          (expr 
                            (variable_or_function_call lineunder))))))) \n) 
              (end_if_statement END IF)) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call eraseflag) = 
                (expr 
                  (variable_or_function_call true)))) \n 
            (statement 
              (call_statement CALL 
                (untyped_id restoremenu))) \n) 
          (end_if_statement END IF)) \n \n 
        (if_block_statement IF 
          (expr 
            (expr 
              (variable_or_function_call LCASE$ 
                ( 
                  (argument_list 
                    (argument 
                      (expr 
                        (variable_or_function_call keyb$)))) ))) = 
            (expr 
              (literal "d"))) THEN \n 
          (then_block 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call lineflag)) = 
                  (expr 
                    (literal 2))) THEN 
                (if_inline_action 
                  (statement 
                    (pset_statement PSET 
                      ( 
                        (expr 
                          (variable_or_function_call lineunderx)) , 
                        (expr 
                          (variable_or_function_call lineundery)) ) , 
                      (expr 
                        (variable_or_function_call lineunder))))))) \n 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call eraseflag)) = 
                  (expr 
                    (literal 2))) THEN 
                (if_inline_action 
                  (statement 
                    (pset_statement PSET 
                      ( 
                        (expr 
                          (variable_or_function_call lineunderx)) , 
                        (expr 
                          (variable_or_function_call lineundery)) ) , 
                      (expr 
                        (variable_or_function_call lineunder))))))) \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call eraseflag)) > 
                (expr 
                  (literal 0))) THEN \n 
              (then_block 
                (statement 
                  (assignment_statement LET 
                    (variable_or_function_call col) = 
                    (expr 
                      (variable_or_function_call prevcol)))) \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 81)) , 
                      (expr 
                        (literal 184)) ) - 
                    ( 
                      (expr 
                        (literal 151)) , 
                      (expr 
                        (literal 193)) ) , 
                    (expr 
                      (variable_or_function_call col)) , 
                    (box_style BF))) \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 81)) , 
                      (expr 
                        (literal 184)) ) - 
                    ( 
                      (expr 
                        (literal 151)) , 
                      (expr 
                        (literal 193)) ) , 
                    (expr 
                      (literal 10)) , 
                    (box_style B))) \n) 
              (end_if_statement END IF)) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call lineflag) = 
                (expr 
                  (variable_or_function_call false)))) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call eraseflag) = 
                (expr 
                  (variable_or_function_call false)))) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call drawflag) = 
                (expr 
                  (variable_or_function_call true)))) \n 
            (statement 
              (event_control_statement KEY 
                ( 
                  (expr 
                    (literal 19)) ) ON)) \n 
            (statement 
              (event_control_statement KEY 
                ( 
                  (expr 
                    (literal 20)) ) ON)) \n 
            (statement 
              (event_control_statement KEY 
                ( 
                  (expr 
                    (literal 21)) ) ON)) \n 
            (statement 
              (event_control_statement KEY 
                ( 
                  (expr 
                    (literal 22)) ) ON)) \n) 
          (end_if_statement END IF)) \n \n 
        (if_block_statement IF 
          (expr 
            (expr 
              (variable_or_function_call LCASE$ 
                ( 
                  (argument_list 
                    (argument 
                      (expr 
                        (variable_or_function_call keyb$)))) ))) = 
            (expr 
              (literal "l"))) THEN \n 
          (then_block 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call eraseflag)) = 
                  (expr 
                    (literal 2))) THEN 
                (if_inline_action 
                  (statement 
                    (pset_statement PSET 
                      ( 
                        (expr 
                          (variable_or_function_call lineunderx)) , 
                        (expr 
                          (variable_or_function_call lineundery)) ) , 
                      (expr 
                        (variable_or_function_call lineunder))))))) \n 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call lineflag)) = 
                  (expr 
                    (variable_or_function_call false))) THEN 
                (if_inline_action 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call lineflag) = 
                      (expr 
                        (variable_or_function_call true))))))) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call drawflag) = 
                (expr 
                  (variable_or_function_call false)))) \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call eraseflag)) > 
                (expr 
                  (literal 0))) THEN \n 
              (then_block 
                (statement 
                  (assignment_statement LET 
                    (variable_or_function_call col) = 
                    (expr 
                      (variable_or_function_call prevcol)))) \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 81)) , 
                      (expr 
                        (literal 184)) ) - 
                    ( 
                      (expr 
                        (literal 151)) , 
                      (expr 
                        (literal 193)) ) , 
                    (expr 
                      (variable_or_function_call col)) , 
                    (box_style BF))) \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 81)) , 
                      (expr 
                        (literal 184)) ) - 
                    ( 
                      (expr 
                        (literal 151)) , 
                      (expr 
                        (literal 193)) ) , 
                    (expr 
                      (literal 10)) , 
                    (box_style B))) \n) 
              (end_if_statement END IF)) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call eraseflag) = 
                (expr 
                  (variable_or_function_call false)))) \n 
            (statement 
              (event_control_statement KEY 
                ( 
                  (expr 
                    (literal 19)) ) OFF)) \n 
            (statement 
              (event_control_statement KEY 
                ( 
                  (expr 
                    (literal 20)) ) OFF)) \n 
            (statement 
              (event_control_statement KEY 
                ( 
                  (expr 
                    (literal 21)) ) OFF)) \n 
            (statement 
              (event_control_statement KEY 
                ( 
                  (expr 
                    (literal 22)) ) OFF)) \n 
            (statement 
              (call_statement CALL 
                (untyped_id linechoose) 
                ( 
                  (argument_list 
                    (argument 
                      (expr 
                        (variable_or_function_call linetype))) , 
                    (argument 
                      (expr 
                        (variable_or_function_call change)))) ))) \n 
            (statement 
              (call_statement CALL 
                (untyped_id restoremenu))) \n) 
          (end_if_statement END IF)) \n \n 
        (if_block_statement IF 
          (expr 
            (expr 
              (variable_or_function_call LCASE$ 
                ( 
                  (argument_list 
                    (argument 
                      (expr 
                        (variable_or_function_call keyb$)))) ))) = 
            (expr 
              (literal "p"))) THEN \n 
          (then_block 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call lineflag)) = 
                  (expr 
                    (literal 2))) THEN 
                (if_inline_action 
                  (statement 
                    (pset_statement PSET 
                      ( 
                        (expr 
                          (variable_or_function_call lineunderx)) , 
                        (expr 
                          (variable_or_function_call lineundery)) ) , 
                      (expr 
                        (variable_or_function_call lineunder))))))) \n 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call eraseflag)) = 
                  (expr 
                    (literal 2))) THEN 
                (if_inline_action 
                  (statement 
                    (pset_statement PSET 
                      ( 
                        (expr 
                          (variable_or_function_call lineunderx)) , 
                        (expr 
                          (variable_or_function_call lineundery)) ) , 
                      (expr 
                        (variable_or_function_call lineunder))))))) \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call eraseflag)) > 
                (expr 
                  (literal 0))) THEN \n 
              (then_block 
                (statement 
                  (assignment_statement LET 
                    (variable_or_function_call col) = 
                    (expr 
                      (variable_or_function_call prevcol)))) \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 81)) , 
                      (expr 
                        (literal 184)) ) - 
                    ( 
                      (expr 
                        (literal 151)) , 
                      (expr 
                        (literal 193)) ) , 
                    (expr 
                      (variable_or_function_call col)) , 
                    (box_style BF))) \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 81)) , 
                      (expr 
                        (literal 184)) ) - 
                    ( 
                      (expr 
                        (literal 151)) , 
                      (expr 
                        (literal 193)) ) , 
                    (expr 
                      (literal 10)) , 
                    (box_style B))) \n) 
              (end_if_statement END IF)) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call lineflag) = 
                (expr 
                  (variable_or_function_call false)))) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call eraseflag) = 
                (expr 
                  (variable_or_function_call false)))) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call drawflag) = 
                (expr 
                  (variable_or_function_call false)))) \n 
            (statement 
              (event_control_statement KEY 
                ( 
                  (expr 
                    (literal 19)) ) OFF)) \n 
            (statement 
              (event_control_statement KEY 
                ( 
                  (expr 
                    (literal 20)) ) OFF)) \n 
            (statement 
              (event_control_statement KEY 
                ( 
                  (expr 
                    (literal 21)) ) OFF)) \n 
            (statement 
              (event_control_statement KEY 
                ( 
                  (expr 
                    (literal 22)) ) OFF)) \n) 
          (end_if_statement END IF)) \n \n 
        (if_block_statement IF 
          (expr 
            (expr 
              (variable_or_function_call lineflag)) > 
            (expr 
              (literal 0))) THEN \n 
          (then_block 
            (if_block_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call keyb$)) = 
                (expr 
                  (literal " "))) THEN \n 
              (then_block 
                (statement 
                  (assignment_statement LET 
                    (variable_or_function_call lineflag) = 
                    (expr 
                      (expr 
                        (variable_or_function_call lineflag)) + 
                      (expr 
                        (literal 1))))) \n 
                (if_block_statement IF 
                  (expr 
                    (expr 
                      (variable_or_function_call lineflag)) = 
                    (expr 
                      (literal 2))) THEN \n 
                  (then_block 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call line1x) = 
                        (expr 
                          (variable_or_function_call xpos)))) \n 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call line1y) = 
                        (expr 
                          (variable_or_function_call ypos)))) \n 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call lineunder) = 
                        (expr 
                          (variable_or_function_call under1)))) \n 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call lineunderx) = 
                        (expr 
                          (variable_or_function_call xpos)))) \n 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call lineundery) = 
                        (expr 
                          (variable_or_function_call ypos)))) \n 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call under1) = 
                        (expr 
                          (literal 0)))) \n) 
                  (elseif_block_statement ELSEIF 
                    (expr 
                      (expr 
                        (variable_or_function_call lineflag)) = 
                      (expr 
                        (literal 3))) THEN 
                    (else_block \n 
                      (statement 
                        (assignment_statement LET 
                          (variable_or_function_call line2x) = 
                          (expr 
                            (variable_or_function_call xpos)))) \n 
                      (statement 
                        (assignment_statement LET 
                          (variable_or_function_call line2y) = 
                          (expr 
                            (variable_or_function_call ypos)))) \n 
                      (statement 
                        (if_inline_statement IF 
                          (expr 
                            (expr 
                              (variable_or_function_call linetype)) = 
                            (expr 
                              (literal 1))) THEN 
                          (if_inline_action 
                            (statement 
                              (line_statement LINE 
                                ( 
                                  (expr 
                                    (variable_or_function_call line1x)) , 
                                  (expr 
                                    (variable_or_function_call line1y)) ) - 
                                ( 
                                  (expr 
                                    (variable_or_function_call line2x)) , 
                                  (expr 
                                    (variable_or_function_call line2y)) ) , 
                                (expr 
                                  (variable_or_function_call col))))))) \n 
                      (statement 
                        (if_inline_statement IF 
                          (expr 
                            (expr 
                              (variable_or_function_call linetype)) = 
                            (expr 
                              (literal 2))) THEN 
                          (if_inline_action 
                            (statement 
                              (line_statement LINE 
                                ( 
                                  (expr 
                                    (variable_or_function_call line1x)) , 
                                  (expr 
                                    (variable_or_function_call line1y)) ) - 
                                ( 
                                  (expr 
                                    (variable_or_function_call line2x)) , 
                                  (expr 
                                    (variable_or_function_call line2y)) ) , 
                                (expr 
                                  (variable_or_function_call col)) , 
                                (box_style B)))))) \n 
                      (statement 
                        (if_inline_statement IF 
                          (expr 
                            (expr 
                              (variable_or_function_call linetype)) = 
                            (expr 
                              (literal 3))) THEN 
                          (if_inline_action 
                            (statement 
                              (line_statement LINE 
                                ( 
                                  (expr 
                                    (variable_or_function_call line1x)) , 
                                  (expr 
                                    (variable_or_function_call line1y)) ) - 
                                ( 
                                  (expr 
                                    (variable_or_function_call line2x)) , 
                                  (expr 
                                    (variable_or_function_call line2y)) ) , 
                                (expr 
                                  (variable_or_function_call col)) , 
                                (box_style BF)))))) \n 
                      (statement 
                        (assignment_statement LET 
                          (variable_or_function_call lineflag) = 
                          (expr 
                            (literal 1)))) \n 
                      (statement 
                        (assignment_statement LET 
                          (variable_or_function_call under1) = 
                          (expr 
                            (variable_or_function_call col)))) \n 
                      (if_block_statement IF 
                        (expr 
                          (expr 
                            (expr 
                              (variable_or_function_call linetype)) = 
                            (expr 
                              (literal 2))) OR 
                          (expr 
                            (expr 
                              (variable_or_function_call linetype)) = 
                            (expr 
                              (literal 3)))) THEN \n 
                        (then_block 
                          (statement 
                            (if_inline_statement IF 
                              (expr 
                                (expr 
                                  (variable_or_function_call line1x)) > 
                                (expr 
                                  (variable_or_function_call line2x))) THEN 
                              (if_inline_action 
                                (statement 
                                  (call_statement 
                                    (untyped_id SWAP) 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call line1x))) , 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call line2x))))))))) \n 
                          (statement 
                            (if_inline_statement IF 
                              (expr 
                                (expr 
                                  (variable_or_function_call line1y)) > 
                                (expr 
                                  (variable_or_function_call line2y))) THEN 
                              (if_inline_action 
                                (statement 
                                  (call_statement 
                                    (untyped_id SWAP) 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call line1y))) , 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call line2y))))))))) \n 
                          (if_block_statement IF 
                            (expr 
                              (expr 
                                (variable_or_function_call line1x)) = 
                              (expr 
                                (variable_or_function_call line2x))) THEN \n 
                            (then_block 
                              (statement 
                                (if_inline_statement IF 
                                  (expr 
                                    (expr 
                                      (variable_or_function_call ypos)) = 
                                    (expr 
                                      (variable_or_function_call line1y))) THEN 
                                  (if_inline_action 
                                    (statement 
                                      (assignment_statement LET 
                                        (variable_or_function_call under3) = 
                                        (expr 
                                          (variable_or_function_call col))))))) \n) 
                            (elseif_block_statement ELSEIF 
                              (expr 
                                (expr 
                                  (variable_or_function_call line1y)) = 
                                (expr 
                                  (variable_or_function_call line2y))) THEN 
                              (else_block \n 
                                (statement 
                                  (if_inline_statement IF 
                                    (expr 
                                      (expr 
                                        (variable_or_function_call xpos)) = 
                                      (expr 
                                        (variable_or_function_call line1x))) THEN 
                                    (if_inline_action 
                                      (statement 
                                        (assignment_statement LET 
                                          (variable_or_function_call under2) = 
                                          (expr 
                                            (variable_or_function_call col))))))) \n)) 
                            (else_block_statement ELSE 
                              (else_block \n 
                                (if_block_statement IF 
                                  (expr 
                                    (expr 
                                      (expr 
                                        (variable_or_function_call xpos)) = 
                                      (expr 
                                        (variable_or_function_call line1x))) AND 
                                    (expr 
                                      (expr 
                                        (variable_or_function_call ypos)) = 
                                      (expr 
                                        (variable_or_function_call line1y)))) THEN \n 
                                  (then_block 
                                    (statement 
                                      (assignment_statement LET 
                                        (variable_or_function_call under2) = 
                                        (expr 
                                          (variable_or_function_call col)))) : 
                                    (statement 
                                      (assignment_statement LET 
                                        (variable_or_function_call under3) = 
                                        (expr 
                                          (variable_or_function_call col)))) \n) 
                                  (elseif_block_statement ELSEIF 
                                    (expr 
                                      (expr 
                                        (expr 
                                          (variable_or_function_call xpos)) = 
                                        (expr 
                                          (variable_or_function_call line1x))) AND 
                                      (expr 
                                        (expr 
                                          (variable_or_function_call ypos)) = 
                                        (expr 
                                          (variable_or_function_call line2y)))) THEN 
                                    (else_block \n 
                                      (statement 
                                        (assignment_statement LET 
                                          (variable_or_function_call under2) = 
                                          (expr 
                                            (variable_or_function_call col)))) \n)) 
                                  (elseif_block_statement ELSEIF 
                                    (expr 
                                      (expr 
                                        (expr 
                                          (variable_or_function_call ypos)) = 
                                        (expr 
                                          (variable_or_function_call line1y))) AND 
                                      (expr 
                                        (expr 
                                          (variable_or_function_call xpos)) = 
                                        (expr 
                                          (variable_or_function_call line2x)))) THEN 
                                    (else_block \n 
                                      (statement 
                                        (assignment_statement LET 
                                          (variable_or_function_call under3) = 
                                          (expr 
                                            (variable_or_function_call col)))) \n)) 
                                  (end_if_statement END IF)) \n)) 
                            (end_if_statement END IF)) \n) 
                        (end_if_statement END IF)) \n 
                      (statement 
                        (pset_statement PSET 
                          ( 
                            (expr 
                              (variable_or_function_call xpos)) , 
                            (expr 
                              (variable_or_function_call ypos)) ) , 
                          (expr 
                            (literal 0)))) \n)) 
                  (end_if_statement END IF)) \n) 
              (end_if_statement END IF)) \n) 
          (elseif_block_statement ELSEIF 
            (expr 
              (expr 
                (expr 
                  (variable_or_function_call drawflag)) = 
                (expr 
                  (variable_or_function_call true))) OR 
              (expr 
                ( 
                  (expr 
                    (expr 
                      (expr 
                        (variable_or_function_call eraseflag)) = 
                      (expr 
                        (variable_or_function_call true))) AND 
                    (expr 
                      (expr 
                        (variable_or_function_call erasetype)) = 
                      (expr 
                        (literal 1)))) ))) THEN 
            (else_block \n 
              (statement 
                (if_inline_statement IF 
                  (expr 
                    (expr 
                      (variable_or_function_call keyb$)) = 
                    (expr 
                      (literal " "))) THEN 
                  (if_inline_action 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call under1) = 
                        (expr 
                          (variable_or_function_call col))))))) \n)) 
          (elseif_block_statement ELSEIF 
            (expr 
              (expr 
                (variable_or_function_call eraseflag)) > 
              (expr 
                (literal 0))) THEN 
            (else_block \n 
              (if_block_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call keyb$)) = 
                  (expr 
                    (literal " "))) THEN \n 
                (then_block 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call eraseflag) = 
                      (expr 
                        (expr 
                          (variable_or_function_call eraseflag)) + 
                        (expr 
                          (literal 1))))) \n 
                  (if_block_statement IF 
                    (expr 
                      (expr 
                        (variable_or_function_call eraseflag)) = 
                      (expr 
                        (literal 2))) THEN \n 
                    (then_block 
                      (statement 
                        (assignment_statement LET 
                          (variable_or_function_call line1x) = 
                          (expr 
                            (variable_or_function_call xpos)))) \n 
                      (statement 
                        (assignment_statement LET 
                          (variable_or_function_call line1y) = 
                          (expr 
                            (variable_or_function_call ypos)))) \n 
                      (statement 
                        (assignment_statement LET 
                          (variable_or_function_call lineunder) = 
                          (expr 
                            (variable_or_function_call under1)))) \n 
                      (statement 
                        (assignment_statement LET 
                          (variable_or_function_call lineunderx) = 
                          (expr 
                            (variable_or_function_call xpos)))) \n 
                      (statement 
                        (assignment_statement LET 
                          (variable_or_function_call lineundery) = 
                          (expr 
                            (variable_or_function_call ypos)))) \n 
                      (statement 
                        (assignment_statement LET 
                          (variable_or_function_call under1) = 
                          (expr 
                            (literal 0)))) \n) 
                    (elseif_block_statement ELSEIF 
                      (expr 
                        (expr 
                          (variable_or_function_call eraseflag)) = 
                        (expr 
                          (literal 3))) THEN 
                      (else_block \n 
                        (statement 
                          (assignment_statement LET 
                            (variable_or_function_call line2x) = 
                            (expr 
                              (variable_or_function_call xpos)))) \n 
                        (statement 
                          (assignment_statement LET 
                            (variable_or_function_call line2y) = 
                            (expr 
                              (variable_or_function_call ypos)))) \n 
                        (statement 
                          (line_statement LINE 
                            ( 
                              (expr 
                                (variable_or_function_call line1x)) , 
                              (expr 
                                (variable_or_function_call line1y)) ) - 
                            ( 
                              (expr 
                                (variable_or_function_call line2x)) , 
                              (expr 
                                (variable_or_function_call line2y)) ) , 
                            (expr 
                              (variable_or_function_call col)) , 
                            (box_style BF))) \n 
                        (statement 
                          (assignment_statement LET 
                            (variable_or_function_call eraseflag) = 
                            (expr 
                              (literal 1)))) \n 
                        (statement 
                          (assignment_statement LET 
                            (variable_or_function_call under1) = 
                            (expr 
                              (variable_or_function_call col)))) \n 
                        (statement 
                          (if_inline_statement IF 
                            (expr 
                              (expr 
                                (variable_or_function_call line1x)) > 
                              (expr 
                                (variable_or_function_call line2x))) THEN 
                            (if_inline_action 
                              (statement 
                                (call_statement 
                                  (untyped_id SWAP) 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call line1x))) , 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call line2x))))))))) \n 
                        (statement 
                          (if_inline_statement IF 
                            (expr 
                              (expr 
                                (variable_or_function_call line1y)) > 
                              (expr 
                                (variable_or_function_call line2y))) THEN 
                            (if_inline_action 
                              (statement 
                                (call_statement 
                                  (untyped_id SWAP) 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call line1y))) , 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call line2y))))))))) \n 
                        (if_block_statement IF 
                          (expr 
                            (expr 
                              (variable_or_function_call line1x)) = 
                            (expr 
                              (variable_or_function_call line2x))) THEN \n 
                          (then_block 
                            (statement 
                              (if_inline_statement IF 
                                (expr 
                                  (expr 
                                    (variable_or_function_call ypos)) = 
                                  (expr 
                                    (variable_or_function_call line1y))) THEN 
                                (if_inline_action 
                                  (statement 
                                    (assignment_statement LET 
                                      (variable_or_function_call under3) = 
                                      (expr 
                                        (variable_or_function_call col))))))) \n) 
                          (elseif_block_statement ELSEIF 
                            (expr 
                              (expr 
                                (variable_or_function_call line1y)) = 
                              (expr 
                                (variable_or_function_call line2y))) THEN 
                            (else_block \n 
                              (statement 
                                (if_inline_statement IF 
                                  (expr 
                                    (expr 
                                      (variable_or_function_call xpos)) = 
                                    (expr 
                                      (variable_or_function_call line1x))) THEN 
                                  (if_inline_action 
                                    (statement 
                                      (assignment_statement LET 
                                        (variable_or_function_call under2) = 
                                        (expr 
                                          (variable_or_function_call col))))))) \n)) 
                          (else_block_statement ELSE 
                            (else_block \n 
                              (if_block_statement IF 
                                (expr 
                                  (expr 
                                    (expr 
                                      (variable_or_function_call xpos)) = 
                                    (expr 
                                      (variable_or_function_call line1x))) AND 
                                  (expr 
                                    (expr 
                                      (variable_or_function_call ypos)) = 
                                    (expr 
                                      (variable_or_function_call line1y)))) THEN \n 
                                (then_block 
                                  (statement 
                                    (assignment_statement LET 
                                      (variable_or_function_call under2) = 
                                      (expr 
                                        (variable_or_function_call col)))) : 
                                  (statement 
                                    (assignment_statement LET 
                                      (variable_or_function_call under3) = 
                                      (expr 
                                        (variable_or_function_call col)))) \n) 
                                (elseif_block_statement ELSEIF 
                                  (expr 
                                    (expr 
                                      (expr 
                                        (variable_or_function_call xpos)) = 
                                      (expr 
                                        (variable_or_function_call line1x))) AND 
                                    (expr 
                                      (expr 
                                        (variable_or_function_call ypos)) = 
                                      (expr 
                                        (variable_or_function_call line2y)))) THEN 
                                  (else_block \n 
                                    (statement 
                                      (assignment_statement LET 
                                        (variable_or_function_call under2) = 
                                        (expr 
                                          (variable_or_function_call col)))) \n)) 
                                (elseif_block_statement ELSEIF 
                                  (expr 
                                    (expr 
                                      (expr 
                                        (variable_or_function_call ypos)) = 
                                      (expr 
                                        (variable_or_function_call line1y))) AND 
                                    (expr 
                                      (expr 
                                        (variable_or_function_call xpos)) = 
                                      (expr 
                                        (variable_or_function_call line2x)))) THEN 
                                  (else_block \n 
                                    (statement 
                                      (assignment_statement LET 
                                        (variable_or_function_call under3) = 
                                        (expr 
                                          (variable_or_function_call col)))) \n)) 
                                (end_if_statement END IF)) \n)) 
                          (end_if_statement END IF)) \n 
                        (statement 
                          (pset_statement PSET 
                            ( 
                              (expr 
                                (variable_or_function_call xpos)) , 
                              (expr 
                                (variable_or_function_call ypos)) ) , 
                            (expr 
                              (literal 0)))) \n)) 
                    (end_if_statement END IF)) \n) 
                (end_if_statement END IF)) \n)) 
          (end_if_statement END IF)) \n \n 
        (if_block_statement IF 
          (expr 
            (expr 
              (variable_or_function_call keyb$)) = 
            (expr 
              (variable_or_function_call CHR$ 
                ( 
                  (argument_list 
                    (argument 
                      (expr 
                        (literal 27)))) )))) THEN \n 
          (then_block 
            (statement 
              (call_statement CALL 
                (untyped_id clearscreen))) \n 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call lineflag)) > 
                  (expr 
                    (literal 0))) THEN 
                (if_inline_action 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call lineflag) = 
                      (expr 
                        (literal 1))))))) \n 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call eraseflag)) > 
                  (expr 
                    (literal 0))) THEN 
                (if_inline_action 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call eraseflag) = 
                      (expr 
                        (literal 1))))))) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call under1) = 
                (expr 
                  (literal 255)))) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call under2) = 
                (expr 
                  (literal 255)))) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call under3) = 
                (expr 
                  (literal 255)))) \n) 
          (end_if_statement END IF)) \n \n) LOOP 
      (loop_condition UNTIL 
        (expr 
          (expr 
            (variable_or_function_call LCASE$ 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call keyb$)))) ))) = 
          (expr 
            (literal "q")))))) \n \n 
  (statement 
    (call_statement 
      (untyped_id savecheck))) \n 
  (statement 
    (call_statement 
      (untyped_id endscreen))) \n 
  (statement 
    (call_statement 
      (untyped_id SYSTEM))) \n \n REM \n \n 
  (label 
    (text_label 
      (untyped_id moveleft)) :) \n 
  (if_block_statement IF 
    (expr 
      (expr 
        (variable_or_function_call xpos)) > 
      (expr 
        (literal 171))) THEN \n 
    (then_block 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under1)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under2)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (variable_or_function_call under3)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call xpos) = 
          (expr 
            (expr 
              (variable_or_function_call xpos)) - 
            (expr 
              (literal 1))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under1) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call xpos))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call ypos)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under2) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call xpos)) + 
                      (expr 
                        (literal 1)))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call ypos)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under3) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call xpos))) , 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call ypos)) + 
                      (expr 
                        (literal 1))))) ))))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (literal 0)))) \n) 
    (end_if_statement END IF)) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id moveright)) :) \n 
  (if_block_statement IF 
    (expr 
      (expr 
        (variable_or_function_call xpos)) < 
      (expr 
        (literal 314))) THEN \n 
    (then_block 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under1)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under2)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (variable_or_function_call under3)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call xpos) = 
          (expr 
            (expr 
              (variable_or_function_call xpos)) + 
            (expr 
              (literal 1))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under1) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call xpos))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call ypos)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under2) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call xpos)) + 
                      (expr 
                        (literal 1)))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call ypos)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under3) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call xpos))) , 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call ypos)) + 
                      (expr 
                        (literal 1))))) ))))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (literal 0)))) \n) 
    (end_if_statement END IF)) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id movedown)) :) \n 
  (if_block_statement IF 
    (expr 
      (expr 
        (variable_or_function_call ypos)) < 
      (expr 
        (literal 89))) THEN \n 
    (then_block 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under1)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under2)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (variable_or_function_call under3)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call ypos) = 
          (expr 
            (expr 
              (variable_or_function_call ypos)) + 
            (expr 
              (literal 1))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under1) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call xpos))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call ypos)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under2) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call xpos)) + 
                      (expr 
                        (literal 1)))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call ypos)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under3) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call xpos))) , 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call ypos)) + 
                      (expr 
                        (literal 1))))) ))))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (literal 0)))) \n) 
    (end_if_statement END IF)) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id moveup)) :) \n 
  (if_block_statement IF 
    (expr 
      (expr 
        (variable_or_function_call ypos)) > 
      (expr 
        (literal 2))) THEN \n 
    (then_block 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under1)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under2)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (variable_or_function_call under3)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call ypos) = 
          (expr 
            (expr 
              (variable_or_function_call ypos)) - 
            (expr 
              (literal 1))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under1) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call xpos))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call ypos)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under2) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call xpos)) + 
                      (expr 
                        (literal 1)))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call ypos)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under3) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call xpos))) , 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call ypos)) + 
                      (expr 
                        (literal 1))))) ))))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (literal 0)))) \n) 
    (end_if_statement END IF)) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id colorleft)) :) \n 
  (if_block_statement IF 
    (expr 
      (expr 
        (variable_or_function_call coltabx)) > 
      (expr 
        (literal 0))) THEN \n 
    (then_block 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltabx))) , 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltaby))) ) - 
          ( 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltabx))) + 
              (expr 
                (literal 8))) , 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltaby))) + 
              (expr 
                (literal 8))) ) , 
          (expr 
            (literal 7)) , 
          (box_style B))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call coltabx) = 
          (expr 
            (expr 
              (variable_or_function_call coltabx)) - 
            (expr 
              (literal 8))))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltabx))) , 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltaby))) ) - 
          ( 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltabx))) + 
              (expr 
                (literal 8))) , 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltaby))) + 
              (expr 
                (literal 8))) ) , 
          (expr 
            (literal 0)) , 
          (box_style B))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call col) = 
          (expr 
            (expr 
              (variable_or_function_call col)) - 
            (expr 
              (literal 1))))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 81)) , 
            (expr 
              (literal 184)) ) - 
          ( 
            (expr 
              (literal 151)) , 
            (expr 
              (literal 193)) ) , 
          (expr 
            (variable_or_function_call col)) , 
          (box_style BF))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 81)) , 
            (expr 
              (literal 184)) ) - 
          ( 
            (expr 
              (literal 151)) , 
            (expr 
              (literal 193)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call change) = 
          (expr 
            (variable_or_function_call true)))) \n) 
    (end_if_statement END IF)) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id colorright)) :) \n 
  (if_block_statement IF 
    (expr 
      (expr 
        (variable_or_function_call coltabx)) < 
      (expr 
        (literal 112))) THEN \n 
    (then_block 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltabx))) , 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltaby))) ) - 
          ( 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltabx))) + 
              (expr 
                (literal 8))) , 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltaby))) + 
              (expr 
                (literal 8))) ) , 
          (expr 
            (literal 7)) , 
          (box_style B))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call coltabx) = 
          (expr 
            (expr 
              (variable_or_function_call coltabx)) + 
            (expr 
              (literal 8))))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltabx))) , 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltaby))) ) - 
          ( 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltabx))) + 
              (expr 
                (literal 8))) , 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltaby))) + 
              (expr 
                (literal 8))) ) , 
          (expr 
            (literal 0)) , 
          (box_style B))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call col) = 
          (expr 
            (expr 
              (variable_or_function_call col)) + 
            (expr 
              (literal 1))))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 81)) , 
            (expr 
              (literal 184)) ) - 
          ( 
            (expr 
              (literal 151)) , 
            (expr 
              (literal 193)) ) , 
          (expr 
            (variable_or_function_call col)) , 
          (box_style BF))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 81)) , 
            (expr 
              (literal 184)) ) - 
          ( 
            (expr 
              (literal 151)) , 
            (expr 
              (literal 193)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call change) = 
          (expr 
            (variable_or_function_call true)))) \n) 
    (end_if_statement END IF)) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id colorup)) :) \n 
  (if_block_statement IF 
    (expr 
      (expr 
        (variable_or_function_call coltaby)) > 
      (expr 
        (literal 0))) THEN \n 
    (then_block 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltabx))) , 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltaby))) ) - 
          ( 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltabx))) + 
              (expr 
                (literal 8))) , 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltaby))) + 
              (expr 
                (literal 8))) ) , 
          (expr 
            (literal 7)) , 
          (box_style B))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call coltaby) = 
          (expr 
            (expr 
              (variable_or_function_call coltaby)) - 
            (expr 
              (literal 8))))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltabx))) , 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltaby))) ) - 
          ( 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltabx))) + 
              (expr 
                (literal 8))) , 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltaby))) + 
              (expr 
                (literal 8))) ) , 
          (expr 
            (literal 0)) , 
          (box_style B))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call col) = 
          (expr 
            (expr 
              (variable_or_function_call col)) - 
            (expr 
              (literal 15))))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 81)) , 
            (expr 
              (literal 184)) ) - 
          ( 
            (expr 
              (literal 151)) , 
            (expr 
              (literal 193)) ) , 
          (expr 
            (variable_or_function_call col)) , 
          (box_style BF))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 81)) , 
            (expr 
              (literal 184)) ) - 
          ( 
            (expr 
              (literal 151)) , 
            (expr 
              (literal 193)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call change) = 
          (expr 
            (variable_or_function_call true)))) \n) 
    (end_if_statement END IF)) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id colordown)) :) \n 
  (if_block_statement IF 
    (expr 
      (expr 
        (variable_or_function_call coltaby)) < 
      (expr 
        (literal 128))) THEN \n 
    (then_block 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltabx))) , 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltaby))) ) - 
          ( 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltabx))) + 
              (expr 
                (literal 8))) , 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltaby))) + 
              (expr 
                (literal 8))) ) , 
          (expr 
            (literal 7)) , 
          (box_style B))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call coltaby) = 
          (expr 
            (expr 
              (variable_or_function_call coltaby)) + 
            (expr 
              (literal 8))))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltabx))) , 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltaby))) ) - 
          ( 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltabx))) + 
              (expr 
                (literal 8))) , 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltaby))) + 
              (expr 
                (literal 8))) ) , 
          (expr 
            (literal 0)) , 
          (box_style B))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call col) = 
          (expr 
            (expr 
              (variable_or_function_call col)) + 
            (expr 
              (literal 15))))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 81)) , 
            (expr 
              (literal 184)) ) - 
          ( 
            (expr 
              (literal 151)) , 
            (expr 
              (literal 193)) ) , 
          (expr 
            (variable_or_function_call col)) , 
          (box_style BF))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 81)) , 
            (expr 
              (literal 184)) ) - 
          ( 
            (expr 
              (literal 151)) , 
            (expr 
              (literal 193)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call change) = 
          (expr 
            (variable_or_function_call true)))) \n) 
    (end_if_statement END IF)) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id drawleft)) :) \n 
  (if_block_statement IF 
    (expr 
      (expr 
        (variable_or_function_call xpos)) > 
      (expr 
        (literal 171))) THEN \n 
    (then_block 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under1) = 
          (expr 
            (variable_or_function_call col)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under1)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under2)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (variable_or_function_call under3)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call xpos) = 
          (expr 
            (expr 
              (variable_or_function_call xpos)) - 
            (expr 
              (literal 1))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under1) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call xpos))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call ypos)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under2) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call xpos)) + 
                      (expr 
                        (literal 1)))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call ypos)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under3) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call xpos))) , 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call ypos)) + 
                      (expr 
                        (literal 1))))) ))))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under1) = 
          (expr 
            (variable_or_function_call col)))) \n) 
    (end_if_statement END IF)) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id drawright)) :) \n 
  (if_block_statement IF 
    (expr 
      (expr 
        (variable_or_function_call xpos)) < 
      (expr 
        (literal 314))) THEN \n 
    (then_block 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under1) = 
          (expr 
            (variable_or_function_call col)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under1)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under2)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (variable_or_function_call under3)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call xpos) = 
          (expr 
            (expr 
              (variable_or_function_call xpos)) + 
            (expr 
              (literal 1))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under1) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call xpos))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call ypos)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under2) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call xpos)) + 
                      (expr 
                        (literal 1)))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call ypos)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under3) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call xpos))) , 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call ypos)) + 
                      (expr 
                        (literal 1))))) ))))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under1) = 
          (expr 
            (variable_or_function_call col)))) \n) 
    (end_if_statement END IF)) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id drawdown)) :) \n 
  (if_block_statement IF 
    (expr 
      (expr 
        (variable_or_function_call ypos)) < 
      (expr 
        (literal 89))) THEN \n 
    (then_block 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under1) = 
          (expr 
            (variable_or_function_call col)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under1)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under2)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (variable_or_function_call under3)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call ypos) = 
          (expr 
            (expr 
              (variable_or_function_call ypos)) + 
            (expr 
              (literal 1))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under1) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call xpos))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call ypos)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under2) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call xpos)) + 
                      (expr 
                        (literal 1)))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call ypos)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under3) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call xpos))) , 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call ypos)) + 
                      (expr 
                        (literal 1))))) ))))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under1) = 
          (expr 
            (variable_or_function_call col)))) \n) 
    (end_if_statement END IF)) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id drawup)) :) \n 
  (if_block_statement IF 
    (expr 
      (expr 
        (variable_or_function_call ypos)) > 
      (expr 
        (literal 2))) THEN \n 
    (then_block 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under1) = 
          (expr 
            (variable_or_function_call col)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under1)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under2)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (variable_or_function_call under3)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call ypos) = 
          (expr 
            (expr 
              (variable_or_function_call ypos)) - 
            (expr 
              (literal 1))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under1) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call xpos))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call ypos)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under2) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call xpos)) + 
                      (expr 
                        (literal 1)))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call ypos)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under3) = 
          (expr 
            (variable_or_function_call POINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call xpos))) , 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call ypos)) + 
                      (expr 
                        (literal 1))))) ))))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call under1) = 
          (expr 
            (variable_or_function_call col)))) \n) 
    (end_if_statement END IF)) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id lineup)) :) \n 
  (statement 
    (if_inline_statement IF 
      (expr 
        (expr 
          (variable_or_function_call linetype)) > 
        (expr 
          (literal 1))) THEN 
      (if_inline_action 
        (statement 
          (assignment_statement LET 
            (variable_or_function_call linetype) = 
            (expr 
              (expr 
                (variable_or_function_call linetype)) - 
              (expr 
                (literal 1)))))))) \n 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call change) = 
      (expr 
        (variable_or_function_call true)))) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id linedown)) :) \n 
  (statement 
    (if_inline_statement IF 
      (expr 
        (expr 
          (variable_or_function_call linetype)) < 
        (expr 
          (literal 3))) THEN 
      (if_inline_action 
        (statement 
          (assignment_statement LET 
            (variable_or_function_call linetype) = 
            (expr 
              (expr 
                (variable_or_function_call linetype)) + 
              (expr 
                (literal 1)))))))) \n 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call change) = 
      (expr 
        (variable_or_function_call true)))) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id eraserleft)) :) \n 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call change) = 
      (expr 
        (variable_or_function_call true)))) \n 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call erasetype) = 
      (expr 
        (literal 1)))) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id eraserright)) :) \n 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call change) = 
      (expr 
        (variable_or_function_call true)))) \n 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call erasetype) = 
      (expr 
        (literal 2)))) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id getimage)) :) \n 
  (statement 
    (if_inline_statement IF 
      (expr 
        (expr 
          (variable_or_function_call lineflag)) = 
        (expr 
          (literal 2))) THEN 
      (if_inline_action 
        (statement 
          (pset_statement PSET 
            ( 
              (expr 
                (variable_or_function_call lineunderx)) , 
              (expr 
                (variable_or_function_call lineundery)) ) , 
            (expr 
              (variable_or_function_call lineunder))))))) \n 
  (statement 
    (if_inline_statement IF 
      (expr 
        (expr 
          (variable_or_function_call eraseflag)) = 
        (expr 
          (literal 2))) THEN 
      (if_inline_action 
        (statement 
          (pset_statement PSET 
            ( 
              (expr 
                (variable_or_function_call lineunderx)) , 
              (expr 
                (variable_or_function_call lineundery)) ) , 
            (expr 
              (variable_or_function_call lineunder))))))) \n 
  (statement 
    (call_statement CALL 
      (untyped_id getpic) 
      ( 
        (argument_list 
          (argument 
            (expr 
              (variable_or_function_call ok)))) ))) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id picmenul)) :) 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call ok) = 
      (expr 
        (literal 1)))) : 
  (statement 
    (return_statement RETURN)) \n 
  (label 
    (text_label 
      (untyped_id picmenur)) :) 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call ok) = 
      (expr 
        (literal 2)))) : 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id filecheckF3)) :) \n 
  (statement 
    (assignment_statement LET 
      (variable_or_function_call overflag) = 
      (expr 
        (variable_or_function_call false)))) \n 
  (statement 
    (resume_statement RESUME NEXT)) \n ' \n \n 
  (label 
    (text_label 
      (untyped_id scrolup)) :) \n 
  (if_block_statement IF 
    (expr 
      (expr 
        (variable_or_function_call scrolposy)) > 
      (expr 
        (literal 135))) THEN \n 
    (then_block 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 182)) , 
            (expr 
              (variable_or_function_call scrolposy)) ) - 
          ( 
            (expr 
              (literal 291)) , 
            (expr 
              (expr 
                (variable_or_function_call scrolposy)) + 
              (expr 
                (literal 8))) ) , 
          (expr 
            (literal 0)) , 
          (box_style B))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call scrolpos) = 
          (expr 
            (expr 
              (variable_or_function_call scrolpos)) - 
            (expr 
              (literal 1))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call scrolposy) = 
          (expr 
            (expr 
              (variable_or_function_call scrolposy)) - 
            (expr 
              (literal 8))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call change) = 
          (expr 
            (variable_or_function_call true)))) \n) 
    (elseif_block_statement ELSEIF 
      (expr 
        (expr 
          (variable_or_function_call listbeg)) > 
        (expr 
          (literal 1))) THEN 
      (else_block \n 
        (statement 
          (assignment_statement LET 
            (variable_or_function_call listbeg) = 
            (expr 
              (expr 
                (variable_or_function_call listbeg)) - 
              (expr 
                (literal 1))))) \n 
        (statement 
          (assignment_statement LET 
            (variable_or_function_call change) = 
            (expr 
              (variable_or_function_call true)))) \n)) 
    (end_if_statement END IF)) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id scroldown)) :) \n 
  (if_block_statement IF 
    (expr 
      (expr 
        (expr 
          (variable_or_function_call scrolposy)) < 
        (expr 
          (literal 175))) AND 
      (expr 
        (expr 
          (variable_or_function_call scrolpos)) < 
        (expr 
          (expr 
            (variable_or_function_call gfxlistmax)) - 
          (expr 
            (literal 1))))) THEN \n 
    (then_block 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 182)) , 
            (expr 
              (variable_or_function_call scrolposy)) ) - 
          ( 
            (expr 
              (literal 291)) , 
            (expr 
              (expr 
                (variable_or_function_call scrolposy)) + 
              (expr 
                (literal 8))) ) , 
          (expr 
            (literal 0)) , 
          (box_style B))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call scrolpos) = 
          (expr 
            (expr 
              (variable_or_function_call scrolpos)) + 
            (expr 
              (literal 1))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call scrolposy) = 
          (expr 
            (expr 
              (variable_or_function_call scrolposy)) + 
            (expr 
              (literal 8))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call change) = 
          (expr 
            (variable_or_function_call true)))) \n) 
    (elseif_block_statement ELSEIF 
      (expr 
        (expr 
          (expr 
            (variable_or_function_call listbeg)) + 
          (expr 
            (literal 6))) < 
        (expr 
          (variable_or_function_call gfxlistmax))) THEN 
      (else_block \n 
        (statement 
          (assignment_statement LET 
            (variable_or_function_call listbeg) = 
            (expr 
              (expr 
                (variable_or_function_call listbeg)) + 
              (expr 
                (literal 1))))) \n 
        (statement 
          (assignment_statement LET 
            (variable_or_function_call change) = 
            (expr 
              (variable_or_function_call true)))) \n)) 
    (end_if_statement END IF)) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id loadfile)) :) \n 
  (statement 
    (call_statement CALL 
      (untyped_id loadsub) 
      ( 
        (argument_list 
          (argument 
            (expr 
              (variable_or_function_call listbeg))) , 
          (argument 
            (expr 
              (variable_or_function_call scrolposy))) , 
          (argument 
            (expr 
              (variable_or_function_call scrolpos))) , 
          (argument 
            (expr 
              (variable_or_function_call gfxlistmax))) , 
          (argument 
            (expr 
              (variable_or_function_call change)))) ))) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id savefile)) :) \n 
  (statement 
    (call_statement CALL 
      (untyped_id savesub))) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (sub_statement SUB 
    (untyped_id changecolor) 
    ( 
      (parameter_list 
        (parameter change)) ) 
    (block \n \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 15)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id colorleft))))) \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 16)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id colorright))))) \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 17)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id colordown))))) \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 18)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id colorup))))) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 1)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 2)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 3)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 15)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 16)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 17)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 18)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 19)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 20)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 21)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 22)) ) OFF)) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call change) = 
          (expr 
            (variable_or_function_call false)))) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 175)) , 
            (expr 
              (literal 112)) ) - 
          ( 
            (expr 
              (literal 309)) , 
            (expr 
              (literal 102)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 171)) , 
            (expr 
              (literal 113)) ) - 
          ( 
            (expr 
              (literal 314)) , 
            (expr 
              (literal 196)) ) , 
          (expr 
            (literal 0)) , 
          (box_style BF))) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call y) = 
          (expr 
            (literal 9)))) \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 10)) TO 
          (expr 
            (literal 130)) 
          (block \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call y) = 
                (expr 
                  (expr 
                    (variable_or_function_call y)) + 
                  (expr 
                    (literal 1))))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 177)) , 
                  (expr 
                    (literal 114)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 177)) + 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (expr 
                      (literal 114)) + 
                    (expr 
                      (variable_or_function_call y))) ) , 
                (expr 
                  (literal 0)) , 
                (box_style BF))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 177)) , 
                  (expr 
                    (literal 114)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 177)) + 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (expr 
                      (literal 114)) + 
                    (expr 
                      (variable_or_function_call y))) ) , 
                (expr 
                  (literal 10)) , 
                (box_style B))) \n 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call y)) > 
                  (expr 
                    (literal 60))) THEN 
                (if_inline_action 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call y) = 
                      (expr 
                        (literal 60))))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n) NEXT)) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltabx))) , 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltaby))) ) - 
          ( 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltabx))) + 
              (expr 
                (literal 8))) , 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltaby))) + 
              (expr 
                (literal 8))) ) , 
          (expr 
            (literal 0)) , 
          (box_style B))) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 185)) , 
            (expr 
              (literal 150)) ) - 
          ( 
            (expr 
              (literal 260)) , 
            (expr 
              (literal 164)) ) , 
          (expr 
            (variable_or_function_call col)) , 
          (box_style BF))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 185)) , 
            (expr 
              (literal 150)) ) - 
          ( 
            (expr 
              (literal 260)) , 
            (expr 
              (literal 164)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 185)) , 
            (expr 
              (literal 132)) ) - 
          ( 
            (expr 
              (literal 260)) , 
            (expr 
              (literal 146)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 15)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 16)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 17)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 18)) ) ON)) \n \n 
      (statement 
        (do_loop_statement DO 
          (block \n 
            (statement 
              (locate_statement LOCATE 
                (expr 
                  (literal 16)) , 
                (expr 
                  (literal 24)))) \n 
            (statement 
              (print_statement PRINT 
                (expr 
                  (literal "Current Color:")) ;)) \n 
            (statement 
              (locate_statement LOCATE 
                (expr 
                  (literal 18)) , 
                (expr 
                  (literal 26)))) \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (expr 
                    (variable_or_function_call col)) MOD 
                  (expr 
                    (literal 15))) <> 
                (expr 
                  (literal 0))) THEN \n 
              (then_block 
                (statement 
                  (print_statement PRINT 
                    (expr 
                      (variable_or_function_call RIGHT$ 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (variable_or_function_call STR$ 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (expr 
                                            (variable_or_function_call col)) MOD 
                                          (expr 
                                            (literal 15))))) )))) , 
                            (argument 
                              (expr 
                                (expr 
                                  (builtin_function LEN 
                                    ( 
                                      (expr 
                                        (variable_or_function_call STR$ 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (expr 
                                                    (variable_or_function_call col)) MOD 
                                                  (expr 
                                                    (literal 15))))) ))) ))) - 
                                (expr 
                                  (literal 1))))) ))) ;)) \n) 
              (else_block_statement ELSE 
                (else_block \n 
                  (statement 
                    (print_statement PRINT 
                      (expr 
                        (literal "15")) ;)) \n)) 
              (end_if_statement END IF)) \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (expr 
                    (variable_or_function_call col)) MOD 
                  (expr 
                    (literal 15))) = 
                (expr 
                  (literal 0))) THEN \n 
              (then_block 
                (statement 
                  (print_statement PRINT 
                    (expr 
                      (literal ",")) ; 
                    (expr 
                      (variable_or_function_call RIGHT$ 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (variable_or_function_call STR$ 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call INT 
                                            ( 
                                              (argument_list 
                                                (argument 
                                                  (expr 
                                                    (expr 
                                                      (variable_or_function_call col)) / 
                                                    (expr 
                                                      (literal 15))))) ))))) )))) , 
                            (argument 
                              (expr 
                                (expr 
                                  (builtin_function LEN 
                                    ( 
                                      (expr 
                                        (variable_or_function_call STR$ 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (variable_or_function_call INT 
                                                    ( 
                                                      (argument_list 
                                                        (argument 
                                                          (expr 
                                                            (expr 
                                                              (variable_or_function_call col)) / 
                                                            (expr 
                                                              (literal 15))))) ))))) ))) ))) - 
                                (expr 
                                  (literal 1))))) ))) ; 
                    (expr 
                      (literal "  ")))) \n) 
              (else_block_statement ELSE 
                (else_block \n 
                  (statement 
                    (print_statement PRINT 
                      (expr 
                        (literal ",")) ; 
                      (expr 
                        (variable_or_function_call RIGHT$ 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (variable_or_function_call STR$ 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (expr 
                                              (variable_or_function_call INT 
                                                ( 
                                                  (argument_list 
                                                    (argument 
                                                      (expr 
                                                        (expr 
                                                          (variable_or_function_call col)) / 
                                                        (expr 
                                                          (literal 15))))) ))) + 
                                            (expr 
                                              (literal 1))))) )))) , 
                              (argument 
                                (expr 
                                  (expr 
                                    (builtin_function LEN 
                                      ( 
                                        (expr 
                                          (variable_or_function_call STR$ 
                                            ( 
                                              (argument_list 
                                                (argument 
                                                  (expr 
                                                    (variable_or_function_call INT 
                                                      ( 
                                                        (argument_list 
                                                          (argument 
                                                            (expr 
                                                              (expr 
                                                                (expr 
                                                                  (variable_or_function_call col)) / 
                                                                (expr 
                                                                  (literal 15))) + 
                                                              (expr 
                                                                (literal 1))))) ))))) ))) ))) - 
                                  (expr 
                                    (literal 1))))) ))) ; 
                      (expr 
                        (literal "  ")))) \n)) 
              (end_if_statement END IF)) \n \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call change)) = 
                (expr 
                  (variable_or_function_call true))) THEN \n 
              (then_block 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 185)) , 
                      (expr 
                        (literal 150)) ) - 
                    ( 
                      (expr 
                        (literal 260)) , 
                      (expr 
                        (literal 164)) ) , 
                    (expr 
                      (variable_or_function_call col)) , 
                    (box_style BF))) \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 185)) , 
                      (expr 
                        (literal 150)) ) - 
                    ( 
                      (expr 
                        (literal 260)) , 
                      (expr 
                        (literal 164)) ) , 
                    (expr 
                      (literal 10)) , 
                    (box_style B))) \n 
                (statement 
                  (assignment_statement LET 
                    (variable_or_function_call change) = 
                    (expr 
                      (variable_or_function_call false)))) \n) 
              (end_if_statement END IF)) \n \n) LOOP 
          (loop_condition WHILE 
            (expr 
              (expr 
                (variable_or_function_call INKEY$)) <> 
              (expr 
                (variable_or_function_call CHR$ 
                  ( 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal 13)))) ))))))) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltabx))) , 
            (expr 
              (expr 
                (literal 8)) + 
              (expr 
                (variable_or_function_call coltaby))) ) - 
          ( 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltabx))) + 
              (expr 
                (literal 8))) , 
            (expr 
              (expr 
                (expr 
                  (literal 8)) + 
                (expr 
                  (variable_or_function_call coltaby))) + 
              (expr 
                (literal 8))) ) , 
          (expr 
            (literal 7)) , 
          (box_style B))) \n \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 15)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id moveleft))))) \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 16)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id moveright))))) \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 17)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id movedown))))) \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 18)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id moveup))))) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 1)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 2)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 3)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 19)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 20)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 21)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 22)) ) ON)) \n \n) 
    (end_sub_statement END SUB)) \n \n 
  (sub_statement SUB 
    (untyped_id clearscreen) 
    (block \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 171)) , 
            (expr 
              (literal 2)) ) - 
          ( 
            (expr 
              (literal 314)) , 
            (expr 
              (literal 89)) ) , 
          (expr 
            (literal 255)) , 
          (box_style BF))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call xpos) = 
          (expr 
            (literal 171)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call ypos) = 
          (expr 
            (literal 2)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (literal 0)))) \n) 
    (end_sub_statement END SUB)) \n \n 
  (sub_statement SUB 
    (untyped_id endscreen) 
    (block \n 
      (statement 
        (dim_statement DIM 
          (dim_variable temp 
            (dim_array_bounds 
              ( 
                (dim_subscript 
                  (expr 
                    (literal 2000))) ))))) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 80)) , 
            (expr 
              (literal 50)) ) - 
          ( 
            (expr 
              (literal 220)) , 
            (expr 
              (literal 150)) ) , 
          (expr 
            (literal 7)) , 
          (box_style BF))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 80)) , 
            (expr 
              (literal 50)) ) - 
          ( 
            (expr 
              (literal 220)) , 
            (expr 
              (literal 150)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 81)) , 
            (expr 
              (literal 150)) ) - 
          ( 
            (expr 
              (literal 220)) , 
            (expr 
              (literal 150)) ) , 
          (expr 
            (literal 120)))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 220)) , 
            (expr 
              (literal 51)) ) - 
          ( 
            (expr 
              (literal 220)) , 
            (expr 
              (literal 150)) ) , 
          (expr 
            (literal 120)))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 94)) , 
            (expr 
              (literal 52)) ) - 
          ( 
            (expr 
              (literal 200)) , 
            (expr 
              (literal 90)) ) , 
          (expr 
            (literal 0)) , 
          (box_style BF))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 9)) , 
          (expr 
            (literal 13)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal " Qpaint V.90 ")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 10)) , 
          (expr 
            (literal 13)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal " ----------- ")))) \n 
      (statement 
        (get_graphics_statement GET 
          ( 
            (expr 
              (literal 94)) , 
            (expr 
              (literal 62)) ) - 
          ( 
            (expr 
              (literal 200)) , 
            (expr 
              (literal 80)) ) , 
          (variable_or_function_call temp))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 81)) , 
            (expr 
              (literal 51)) ) - 
          ( 
            (expr 
              (literal 219)) , 
            (expr 
              (literal 149)) ) , 
          (expr 
            (literal 7)) , 
          (box_style BF))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 97)) , 
            (expr 
              (literal 57)) ) - 
          ( 
            (expr 
              (literal 203)) , 
            (expr 
              (literal 85)) ) , 
          (expr 
            (literal 0)) , 
          (box_style BF))) \n 
      (statement 
        (put_graphics_statement PUT 
          ( 
            (expr 
              (literal 97)) , 
            (expr 
              (literal 62)) ) , 
          (variable_or_function_call temp) , PSET)) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 97)) , 
            (expr 
              (literal 57)) ) - 
          ( 
            (expr 
              (literal 203)) , 
            (expr 
              (literal 85)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 98)) , 
            (expr 
              (literal 85)) ) - 
          ( 
            (expr 
              (literal 203)) , 
            (expr 
              (literal 85)) ) , 
          (expr 
            (literal 120)))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 203)) , 
            (expr 
              (literal 58)) ) - 
          ( 
            (expr 
              (literal 203)) , 
            (expr 
              (literal 85)) ) , 
          (expr 
            (literal 120)))) \n) 
    (end_sub_statement END SUB)) \n \n 
  (sub_statement SUB 
    (untyped_id erasesub) 
    ( 
      (parameter_list 
        (parameter change) , 
        (parameter erasetype)) ) 
    (block \n 
      (statement 
        (dim_statement DIM 
          (dim_variable txt 
            (dim_array_bounds 
              ( 
                (dim_subscript 
                  (expr 
                    (literal 1000))) ))))) \n \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 1)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 2)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 3)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 15)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 16)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 17)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 18)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 19)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 20)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 21)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 22)) ) OFF)) \n \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 15)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id eraserleft))))) \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 16)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id eraserright))))) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call erasetype) = 
          (expr 
            (literal 1)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call change) = 
          (expr 
            (variable_or_function_call true)))) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 175)) , 
            (expr 
              (literal 128)) ) - 
          ( 
            (expr 
              (literal 309)) , 
            (expr 
              (literal 118)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (get_graphics_statement GET 
          ( 
            (expr 
              (literal 175)) , 
            (expr 
              (literal 128)) ) - 
          ( 
            (expr 
              (literal 309)) , 
            (expr 
              (literal 118)) ) , 
          (variable_or_function_call txt))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 171)) , 
            (expr 
              (literal 101)) ) - 
          ( 
            (expr 
              (literal 314)) , 
            (expr 
              (literal 196)) ) , 
          (expr 
            (literal 0)) , 
          (box_style BF))) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call x) = 
          (expr 
            (literal 118)))) \n 
      (statement 
        (do_loop_statement DO 
          (do_condition UNTIL 
            (expr 
              (expr 
                (variable_or_function_call x)) = 
              (expr 
                (literal 102)))) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 171)) , 
                  (expr 
                    (literal 101)) ) - 
                ( 
                  (expr 
                    (literal 314)) , 
                  (expr 
                    (literal 196)) ) , 
                (expr 
                  (literal 0)) , 
                (box_style BF))) \n 
            (statement 
              (put_graphics_statement PUT 
                ( 
                  (expr 
                    (literal 175)) , 
                  (expr 
                    (variable_or_function_call x)) ) , 
                (variable_or_function_call txt) , PSET)) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call x) = 
                (expr 
                  (expr 
                    (variable_or_function_call x)) - 
                  (expr 
                    (literal 1))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n) LOOP)) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call y) = 
          (expr 
            (literal 9)))) \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 10)) TO 
          (expr 
            (literal 130)) 
          (block \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call y) = 
                (expr 
                  (expr 
                    (variable_or_function_call y)) + 
                  (expr 
                    (literal 1))))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 177)) , 
                  (expr 
                    (literal 116)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 177)) + 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (expr 
                      (literal 116)) + 
                    (expr 
                      (variable_or_function_call y))) ) , 
                (expr 
                  (literal 0)) , 
                (box_style BF))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 177)) , 
                  (expr 
                    (literal 116)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 177)) + 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (expr 
                      (literal 116)) + 
                    (expr 
                      (variable_or_function_call y))) ) , 
                (expr 
                  (literal 10)) , 
                (box_style B))) \n 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call y)) > 
                  (expr 
                    (literal 56))) THEN 
                (if_inline_action 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call y) = 
                      (expr 
                        (literal 56))))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n) NEXT)) \n \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 16)) , 
          (expr 
            (literal 24)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "Choose Eraser:")))) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 200)) , 
            (expr 
              (literal 143)) ) - 
          ( 
            (expr 
              (literal 220)) , 
            (expr 
              (literal 153)) ) , 
          (expr 
            (literal 7)) , 
          (box_style BF))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 200)) , 
            (expr 
              (literal 143)) ) - 
          ( 
            (expr 
              (literal 220)) , 
            (expr 
              (literal 153)) ) , 
          (expr 
            (literal 6)) , 
          (box_style B))) \n \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call dot) = 
          (expr 
            (literal 1)))) \n \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 0)) TO 
          (expr 
            (literal 20)) 
          (block \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call dot)) = 
                (expr 
                  (literal 3))) THEN \n 
              (then_block 
                (statement 
                  (pset_statement PSET 
                    ( 
                      (expr 
                        (expr 
                          (literal 260)) + 
                        (expr 
                          (variable_or_function_call x))) , 
                      (expr 
                        (literal 143)) ) , 
                    (expr 
                      (literal 0)))) \n 
                (statement 
                  (pset_statement PSET 
                    ( 
                      (expr 
                        (expr 
                          (literal 280)) - 
                        (expr 
                          (variable_or_function_call x))) , 
                      (expr 
                        (literal 153)) ) , 
                    (expr 
                      (literal 0)))) \n) 
              (else_block_statement ELSE 
                (else_block \n 
                  (statement 
                    (pset_statement PSET 
                      ( 
                        (expr 
                          (expr 
                            (literal 260)) + 
                          (expr 
                            (variable_or_function_call x))) , 
                        (expr 
                          (literal 143)) ) , 
                      (expr 
                        (literal 7)))) \n 
                  (statement 
                    (pset_statement PSET 
                      ( 
                        (expr 
                          (expr 
                            (literal 280)) - 
                          (expr 
                            (variable_or_function_call x))) , 
                        (expr 
                          (literal 153)) ) , 
                      (expr 
                        (literal 7)))) \n)) 
              (end_if_statement END IF)) \n 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call dot)) = 
                  (expr 
                    (literal 4))) THEN 
                (if_inline_action 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call dot) = 
                      (expr 
                        (literal 1))))))) \n 
            (statement 
              (assignment_statement 
                (variable_or_function_call dot) = 
                (expr 
                  (expr 
                    (variable_or_function_call dot)) + 
                  (expr 
                    (literal 1))))) \n) NEXT)) \n \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 0)) TO 
          (expr 
            (literal 10)) 
          (block \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call dot)) = 
                (expr 
                  (literal 3))) THEN \n 
              (then_block 
                (statement 
                  (pset_statement PSET 
                    ( 
                      (expr 
                        (literal 260)) , 
                      (expr 
                        (expr 
                          (literal 143)) + 
                        (expr 
                          (variable_or_function_call x))) ) , 
                    (expr 
                      (literal 0)))) \n 
                (statement 
                  (pset_statement PSET 
                    ( 
                      (expr 
                        (literal 280)) , 
                      (expr 
                        (expr 
                          (literal 153)) - 
                        (expr 
                          (variable_or_function_call x))) ) , 
                    (expr 
                      (literal 0)))) \n) 
              (else_block_statement ELSE 
                (else_block \n 
                  (statement 
                    (pset_statement PSET 
                      ( 
                        (expr 
                          (literal 260)) , 
                        (expr 
                          (expr 
                            (literal 143)) + 
                          (expr 
                            (variable_or_function_call x))) ) , 
                      (expr 
                        (literal 7)))) \n 
                  (statement 
                    (pset_statement PSET 
                      ( 
                        (expr 
                          (literal 280)) , 
                        (expr 
                          (expr 
                            (literal 153)) - 
                          (expr 
                            (variable_or_function_call x))) ) , 
                      (expr 
                        (literal 7)))) \n)) 
              (end_if_statement END IF)) \n 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call dot)) = 
                  (expr 
                    (literal 4))) THEN 
                (if_inline_action 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call dot) = 
                      (expr 
                        (literal 1))))))) \n 
            (statement 
              (assignment_statement 
                (variable_or_function_call dot) = 
                (expr 
                  (expr 
                    (variable_or_function_call dot)) + 
                  (expr 
                    (literal 1))))) \n) NEXT)) \n \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 15)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 16)) ) ON)) \n \n 
      (statement 
        (do_loop_statement DO 
          (block \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call change)) = 
                (expr 
                  (variable_or_function_call true))) THEN \n 
              (then_block 
                (if_block_statement IF 
                  (expr 
                    (expr 
                      (variable_or_function_call erasetype)) = 
                    (expr 
                      (literal 1))) THEN \n 
                  (then_block 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 195)) , 
                          (expr 
                            (literal 138)) ) - 
                        ( 
                          (expr 
                            (literal 225)) , 
                          (expr 
                            (literal 158)) ) , 
                        (expr 
                          (literal 15)) , 
                        (box_style B))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 255)) , 
                          (expr 
                            (literal 138)) ) - 
                        ( 
                          (expr 
                            (literal 285)) , 
                          (expr 
                            (literal 158)) ) , 
                        (expr 
                          (literal 0)) , 
                        (box_style B))) \n) 
                  (else_block_statement ELSE 
                    (else_block \n 
                      (statement 
                        (line_statement LINE 
                          ( 
                            (expr 
                              (literal 195)) , 
                            (expr 
                              (literal 138)) ) - 
                          ( 
                            (expr 
                              (literal 225)) , 
                            (expr 
                              (literal 158)) ) , 
                          (expr 
                            (literal 0)) , 
                          (box_style B))) \n 
                      (statement 
                        (line_statement LINE 
                          ( 
                            (expr 
                              (literal 255)) , 
                            (expr 
                              (literal 138)) ) - 
                          ( 
                            (expr 
                              (literal 285)) , 
                            (expr 
                              (literal 158)) ) , 
                          (expr 
                            (literal 15)) , 
                          (box_style B))) \n)) 
                  (end_if_statement END IF)) \n 
                (statement 
                  (assignment_statement LET 
                    (variable_or_function_call change) = 
                    (expr 
                      (variable_or_function_call false)))) \n) 
              (end_if_statement END IF)) \n) LOOP 
          (loop_condition UNTIL 
            (expr 
              (expr 
                (variable_or_function_call INKEY$)) = 
              (expr 
                (variable_or_function_call CHR$ 
                  ( 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal 13)))) ))))))) \n \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 15)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id moveleft))))) \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 16)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id moveright))))) \n \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 1)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 2)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 3)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 17)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 18)) ) ON)) \n \n 
      (if_block_statement IF 
        (expr 
          (expr 
            (variable_or_function_call erasetype)) = 
          (expr 
            (literal 1))) THEN \n 
        (then_block 
          (statement 
            (event_control_statement KEY 
              ( 
                (expr 
                  (literal 19)) ) ON)) \n 
          (statement 
            (event_control_statement KEY 
              ( 
                (expr 
                  (literal 20)) ) ON)) \n 
          (statement 
            (event_control_statement KEY 
              ( 
                (expr 
                  (literal 21)) ) ON)) \n 
          (statement 
            (event_control_statement KEY 
              ( 
                (expr 
                  (literal 22)) ) ON)) \n) 
        (end_if_statement END IF)) \n \n) 
    (end_sub_statement END SUB)) \n \n 
  (sub_statement SUB 
    (untyped_id getpic) 
    ( 
      (parameter_list 
        (parameter ok)) ) 
    (block \n \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 1)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 2)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 3)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 15)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 16)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 17)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 18)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 19)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 20)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 21)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 22)) ) OFF)) \n \n 
      (statement 
        (on_error_statement ON ERROR GOTO 
          (target 
            (text_label 
              (untyped_id filecheckF3))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call overflag) = 
          (expr 
            (variable_or_function_call true)))) \n \n 
      (statement 
        (dim_statement DIM 
          (dim_variable txt 
            (dim_array_bounds 
              ( 
                (dim_subscript 
                  (expr 
                    (literal 1000))) ))))) \n 
      (statement 
        (dim_statement DIM 
          (dim_variable text$ 
            (dim_array_bounds 
              ( 
                (dim_subscript 
                  (expr 
                    (literal 1)) TO 
                  (expr 
                    (literal 8))) ))))) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call ok) = 
          (expr 
            (literal 1)))) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call text$ 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 1)))) )) = 
          (expr 
            (literal "P")))) : 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call text$ 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 2)))) )) = 
          (expr 
            (literal "R")))) : 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call text$ 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 3)))) )) = 
          (expr 
            (literal "E")))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call text$ 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 4)))) )) = 
          (expr 
            (literal "V")))) : 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call text$ 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 5)))) )) = 
          (expr 
            (literal "I")))) : 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call text$ 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 6)))) )) = 
          (expr 
            (literal "E")))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call text$ 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 7)))) )) = 
          (expr 
            (literal "W")))) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 175)) , 
            (expr 
              (literal 158)) ) - 
          ( 
            (expr 
              (literal 309)) , 
            (expr 
              (literal 168)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (get_graphics_statement GET 
          ( 
            (expr 
              (literal 175)) , 
            (expr 
              (literal 158)) ) - 
          ( 
            (expr 
              (literal 309)) , 
            (expr 
              (literal 168)) ) , 
          (variable_or_function_call txt))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 171)) , 
            (expr 
              (literal 101)) ) - 
          ( 
            (expr 
              (literal 314)) , 
            (expr 
              (literal 196)) ) , 
          (expr 
            (literal 0)) , 
          (box_style BF))) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call x) = 
          (expr 
            (literal 158)))) \n \n 
      (statement 
        (do_loop_statement DO 
          (do_condition UNTIL 
            (expr 
              (expr 
                (variable_or_function_call x)) = 
              (expr 
                (literal 102)))) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 171)) , 
                  (expr 
                    (literal 101)) ) - 
                ( 
                  (expr 
                    (literal 314)) , 
                  (expr 
                    (literal 196)) ) , 
                (expr 
                  (literal 0)) , 
                (box_style BF))) \n 
            (statement 
              (put_graphics_statement PUT 
                ( 
                  (expr 
                    (literal 175)) , 
                  (expr 
                    (variable_or_function_call x)) ) , 
                (variable_or_function_call txt) , PSET)) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call x) = 
                (expr 
                  (expr 
                    (variable_or_function_call x)) - 
                  (expr 
                    (literal 1))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n) LOOP)) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call y) = 
          (expr 
            (literal 9)))) \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 10)) TO 
          (expr 
            (literal 130)) 
          (block \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call y) = 
                (expr 
                  (expr 
                    (variable_or_function_call y)) + 
                  (expr 
                    (literal 1))))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 177)) , 
                  (expr 
                    (literal 116)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 177)) + 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (expr 
                      (literal 116)) + 
                    (expr 
                      (variable_or_function_call y))) ) , 
                (expr 
                  (literal 0)) , 
                (box_style BF))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 177)) , 
                  (expr 
                    (literal 116)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 177)) + 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (expr 
                      (literal 116)) + 
                    (expr 
                      (variable_or_function_call y))) ) , 
                (expr 
                  (literal 10)) , 
                (box_style B))) \n 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call y)) > 
                  (expr 
                    (literal 70))) THEN 
                (if_inline_action 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call y) = 
                      (expr 
                        (literal 70))))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n) NEXT)) \n \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 17)) , 
          (expr 
            (literal 24)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "Select")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 18)) , 
          (expr 
            (literal 24)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "Coordinates")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 20)) , 
          (expr 
            (literal 24)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (100 X 80 MAX)")))) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 180)) , 
            (expr 
              (literal 118)) ) - 
          ( 
            (expr 
              (literal 304)) , 
            (expr 
              (literal 166)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 23)) , 
          (expr 
            (literal 24)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (ESC) to cancel")))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 180)) , 
            (expr 
              (literal 184)) ) - 
          ( 
            (expr 
              (literal 304)) , 
            (expr 
              (literal 174)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 15)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 16)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 17)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 18)) ) ON)) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call coord) = 
          (expr 
            (literal 1)))) \n \n 
      (statement 
        (do_loop_statement DO 
          (block \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call keyb$) = 
                (expr 
                  (variable_or_function_call INKEY$)))) \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call keyb$)) = 
                (expr 
                  (literal " "))) THEN \n 
              (then_block 
                (if_block_statement IF 
                  (expr 
                    (expr 
                      (variable_or_function_call coord)) < 
                    (expr 
                      (literal 2))) THEN \n 
                  (then_block 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call coord) = 
                        (expr 
                          (expr 
                            (variable_or_function_call coord)) + 
                          (expr 
                            (literal 1))))) \n) 
                  (else_block_statement ELSE 
                    (else_block \n 
                      (if_block_statement IF 
                        (expr 
                          (expr 
                            (expr 
                              (variable_or_function_call xpos)) <> 
                            (expr 
                              (variable_or_function_call line1x))) AND 
                          (expr 
                            (expr 
                              (variable_or_function_call ypos)) <> 
                            (expr 
                              (variable_or_function_call line1y)))) THEN \n 
                        (then_block 
                          (statement 
                            (assignment_statement LET 
                              (variable_or_function_call coord) = 
                              (expr 
                                (expr 
                                  (variable_or_function_call coord)) + 
                                (expr 
                                  (literal 1))))) \n) 
                        (else_block_statement ELSE 
                          (else_block \n 
                            (statement 
                              (goto_statement GOTO 
                                (target 
                                  (text_label 
                                    (untyped_id nopress))))) \n)) 
                        (end_if_statement END IF)) \n)) 
                  (end_if_statement END IF)) \n 
                (if_block_statement IF 
                  (expr 
                    (expr 
                      (variable_or_function_call coord)) = 
                    (expr 
                      (literal 2))) THEN \n 
                  (then_block 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call line1x) = 
                        (expr 
                          (variable_or_function_call xpos)))) \n 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call line1y) = 
                        (expr 
                          (variable_or_function_call ypos)))) \n 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call lineunder) = 
                        (expr 
                          (variable_or_function_call under1)))) \n 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call under1) = 
                        (expr 
                          (literal 0)))) \n) 
                  (elseif_block_statement ELSEIF 
                    (expr 
                      (expr 
                        (variable_or_function_call coord)) = 
                      (expr 
                        (literal 3))) THEN 
                    (else_block \n 
                      (statement 
                        (assignment_statement LET 
                          (variable_or_function_call line2x) = 
                          (expr 
                            (variable_or_function_call xpos)))) \n 
                      (statement 
                        (assignment_statement LET 
                          (variable_or_function_call line2y) = 
                          (expr 
                            (variable_or_function_call ypos)))) \n 
                      (statement 
                        (pset_statement PSET 
                          ( 
                            (expr 
                              (variable_or_function_call line1x)) , 
                            (expr 
                              (variable_or_function_call line1y)) ) , 
                          (expr 
                            (variable_or_function_call lineunder)))) \n 
                      (statement 
                        (pset_statement PSET 
                          ( 
                            (expr 
                              (variable_or_function_call xpos)) , 
                            (expr 
                              (variable_or_function_call ypos)) ) , 
                          (expr 
                            (variable_or_function_call under1)))) \n 
                      (statement 
                        (pset_statement PSET 
                          ( 
                            (expr 
                              (expr 
                                (variable_or_function_call xpos)) + 
                              (expr 
                                (literal 1))) , 
                            (expr 
                              (variable_or_function_call ypos)) ) , 
                          (expr 
                            (variable_or_function_call under2)))) \n 
                      (statement 
                        (pset_statement PSET 
                          ( 
                            (expr 
                              (variable_or_function_call xpos)) , 
                            (expr 
                              (expr 
                                (variable_or_function_call ypos)) + 
                              (expr 
                                (literal 1))) ) , 
                          (expr 
                            (variable_or_function_call under3)))) \n 
                      (statement 
                        (if_inline_statement IF 
                          (expr 
                            (expr 
                              (variable_or_function_call line1x)) > 
                            (expr 
                              (variable_or_function_call line2x))) THEN 
                          (if_inline_action 
                            (statement 
                              (call_statement 
                                (untyped_id SWAP) 
                                (argument_list 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call line1x))) , 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call line2x))))))))) \n 
                      (statement 
                        (if_inline_statement IF 
                          (expr 
                            (expr 
                              (variable_or_function_call line1y)) > 
                            (expr 
                              (variable_or_function_call line2y))) THEN 
                          (if_inline_action 
                            (statement 
                              (call_statement 
                                (untyped_id SWAP) 
                                (argument_list 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call line1y))) , 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call line2y))))))))) \n \n 
                      (statement 
                        (assignment_statement LET 
                          (variable_or_function_call xlength) = 
                          (expr 
                            (expr 
                              (expr 
                                (variable_or_function_call line2x)) - 
                              (expr 
                                (variable_or_function_call line1x))) + 
                            (expr 
                              (literal 1))))) \n 
                      (statement 
                        (assignment_statement LET 
                          (variable_or_function_call ylength) = 
                          (expr 
                            (expr 
                              (expr 
                                (variable_or_function_call line2y)) - 
                              (expr 
                                (variable_or_function_call line1y))) + 
                            (expr 
                              (literal 1))))) \n 
                      (statement 
                        (assignment_statement LET 
                          (variable_or_function_call arraylength) = 
                          (expr 
                            (expr 
                              (variable_or_function_call xlength)) * 
                            (expr 
                              (variable_or_function_call ylength))))) \n 
                      (statement 
                        (assignment_statement LET 
                          (variable_or_function_call arraylength) = 
                          (expr 
                            (expr 
                              (variable_or_function_call arraylength)) + 
                            (expr 
                              (literal 4))))) \n \n 
                      (statement 
                        (dim_statement DIM 
                          (dim_variable image 
                            (dim_array_bounds 
                              ( 
                                (dim_subscript 
                                  (expr 
                                    (variable_or_function_call arraylength))) ))))) \n 
                      (statement 
                        (get_graphics_statement GET 
                          ( 
                            (expr 
                              (variable_or_function_call line1x)) , 
                            (expr 
                              (variable_or_function_call line1y)) ) - 
                          ( 
                            (expr 
                              (variable_or_function_call line2x)) , 
                            (expr 
                              (variable_or_function_call line2y)) ) , 
                          (variable_or_function_call image))) \n 
                      (statement 
                        (line_statement LINE 
                          ( 
                            (expr 
                              (literal 171)) , 
                            (expr 
                              (literal 101)) ) - 
                          ( 
                            (expr 
                              (literal 314)) , 
                            (expr 
                              (literal 196)) ) , 
                          (expr 
                            (literal 0)) , 
                          (box_style BF))) \n 
                      (statement 
                        (put_graphics_statement PUT 
                          ( 
                            (expr 
                              (literal 171)) , 
                            (expr 
                              (literal 101)) ) , 
                          (variable_or_function_call image))) \n 
                      (statement 
                        (pset_statement PSET 
                          ( 
                            (expr 
                              (variable_or_function_call xpos)) , 
                            (expr 
                              (variable_or_function_call ypos)) ) , 
                          (expr 
                            (literal 0)))) \n 
                      (statement 
                        (pset_statement PSET 
                          ( 
                            (expr 
                              (expr 
                                (variable_or_function_call xpos)) + 
                              (expr 
                                (literal 1))) , 
                            (expr 
                              (variable_or_function_call ypos)) ) , 
                          (expr 
                            (literal 0)))) \n 
                      (statement 
                        (pset_statement PSET 
                          ( 
                            (expr 
                              (variable_or_function_call xpos)) , 
                            (expr 
                              (expr 
                                (variable_or_function_call ypos)) + 
                              (expr 
                                (literal 1))) ) , 
                          (expr 
                            (literal 0)))) \n)) 
                  (end_if_statement END IF)) \n) 
              (end_if_statement END IF)) \n \n 
            (label 
              (text_label 
                (untyped_id nopress)) :) \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call coord)) > 
                (expr 
                  (literal 1))) THEN \n 
              (then_block 
                (if_block_statement IF 
                  (expr 
                    (expr 
                      (variable_or_function_call ABS 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (expr 
                                  (variable_or_function_call xpos)) - 
                                (expr 
                                  (variable_or_function_call line1x))))) ))) > 
                    (expr 
                      (literal 98))) THEN \n 
                  (then_block 
                    (if_block_statement IF 
                      (expr 
                        (expr 
                          (variable_or_function_call SGN 
                            ( 
                              (argument_list 
                                (argument 
                                  (expr 
                                    (expr 
                                      (variable_or_function_call xpos)) - 
                                    (expr 
                                      (variable_or_function_call line1x))))) ))) = 
                        (expr - 
                          (expr 
                            (literal 1)))) THEN \n 
                      (then_block 
                        (statement 
                          (event_control_statement KEY 
                            ( 
                              (expr 
                                (literal 15)) ) OFF)) \n) 
                      (else_block_statement ELSE 
                        (else_block \n 
                          (statement 
                            (event_control_statement KEY 
                              ( 
                                (expr 
                                  (literal 16)) ) OFF)) \n)) 
                      (end_if_statement END IF)) \n) 
                  (else_block_statement ELSE 
                    (else_block \n 
                      (statement 
                        (event_control_statement KEY 
                          ( 
                            (expr 
                              (literal 15)) ) ON)) \n 
                      (statement 
                        (event_control_statement KEY 
                          ( 
                            (expr 
                              (literal 16)) ) ON)) \n)) 
                  (end_if_statement END IF)) \n 
                (if_block_statement IF 
                  (expr 
                    (expr 
                      (variable_or_function_call ABS 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (expr 
                                  (variable_or_function_call ypos)) - 
                                (expr 
                                  (variable_or_function_call line1y))))) ))) > 
                    (expr 
                      (literal 78))) THEN \n 
                  (then_block 
                    (if_block_statement IF 
                      (expr 
                        (expr 
                          (variable_or_function_call SGN 
                            ( 
                              (argument_list 
                                (argument 
                                  (expr 
                                    (expr 
                                      (variable_or_function_call ypos)) - 
                                    (expr 
                                      (variable_or_function_call line1y))))) ))) = 
                        (expr - 
                          (expr 
                            (literal 1)))) THEN \n 
                      (then_block 
                        (statement 
                          (event_control_statement KEY 
                            ( 
                              (expr 
                                (literal 18)) ) OFF)) \n) 
                      (else_block_statement ELSE 
                        (else_block \n 
                          (statement 
                            (event_control_statement KEY 
                              ( 
                                (expr 
                                  (literal 17)) ) OFF)) \n)) 
                      (end_if_statement END IF)) \n) 
                  (else_block_statement ELSE 
                    (else_block \n 
                      (statement 
                        (event_control_statement KEY 
                          ( 
                            (expr 
                              (literal 17)) ) ON)) \n 
                      (statement 
                        (event_control_statement KEY 
                          ( 
                            (expr 
                              (literal 18)) ) ON)) \n)) 
                  (end_if_statement END IF)) \n) 
              (end_if_statement END IF)) \n) LOOP 
          (loop_condition UNTIL 
            (expr 
              (expr 
                (expr 
                  (variable_or_function_call coord)) = 
                (expr 
                  (literal 3))) OR 
              (expr 
                (expr 
                  (variable_or_function_call keyb$)) = 
                (expr 
                  (variable_or_function_call CHR$ 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 27)))) )))))))) \n \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 15)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 16)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 17)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 18)) ) OFF)) \n \n 
      (if_block_statement IF 
        (expr 
          (expr 
            (variable_or_function_call coord)) = 
          (expr 
            (literal 3))) THEN \n 
        (then_block \n 
          (statement 
            (on_event_gosub_statement ON KEY 
              ( 
                (expr 
                  (literal 15)) ) GOSUB 
              (target 
                (text_label 
                  (untyped_id picmenul))))) \n 
          (statement 
            (on_event_gosub_statement ON KEY 
              ( 
                (expr 
                  (literal 16)) ) GOSUB 
              (target 
                (text_label 
                  (untyped_id picmenur))))) \n \n 
          (statement 
            (line_statement LINE 
              ( 
                (expr 
                  (literal 170)) , 
                (expr 
                  (literal 100)) ) - 
              ( 
                (expr 
                  (literal 271)) , 
                (expr 
                  (literal 181)) ) , 
              (expr 
                (literal 10)) , 
              (box_style B))) \n 
          (statement 
            (for_next_statement FOR x = 
              (expr 
                (literal 1)) TO 
              (expr 
                (literal 7)) 
              (block \n 
                (statement 
                  (locate_statement LOCATE 
                    (expr 
                      (expr 
                        (literal 14)) + 
                      (expr 
                        (variable_or_function_call x))) , 
                    (expr 
                      (literal 37)))) \n 
                (statement 
                  (print_statement PRINT 
                    (expr 
                      (variable_or_function_call text$ 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (variable_or_function_call x)))) ))))) \n) NEXT)) \n 
          (statement 
            (line_statement LINE 
              ( 
                (expr 
                  (literal 280)) , 
                (expr 
                  (literal 108)) ) - 
              ( 
                (expr 
                  (literal 302)) , 
                (expr 
                  (literal 170)) ) , 
              (expr 
                (literal 10)) , 
              (box_style B))) \n \n 
          (statement 
            (locate_statement LOCATE 
              (expr 
                (literal 23)) , 
              (expr 
                (literal 36)))) \n 
          (statement 
            (print_statement PRINT 
              (expr 
                (literal "OK!")))) \n 
          (statement 
            (line_statement LINE 
              ( 
                (expr 
                  (literal 275)) , 
                (expr 
                  (literal 173)) ) - 
              ( 
                (expr 
                  (literal 307)) , 
                (expr 
                  (literal 184)) ) , 
              (expr 
                (literal 10)) , 
              (box_style B))) \n 
          (statement 
            (get_graphics_statement GET 
              ( 
                (expr 
                  (literal 275)) , 
                (expr 
                  (literal 173)) ) - 
              ( 
                (expr 
                  (literal 307)) , 
                (expr 
                  (literal 184)) ) , 
              (variable_or_function_call txt))) \n 
          (statement 
            (assignment_statement LET 
              (variable_or_function_call y) = 
              (expr 
                (literal 0)))) \n 
          (statement 
            (do_loop_statement DO 
              (block \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 275)) , 
                      (expr 
                        (literal 173)) ) - 
                    ( 
                      (expr 
                        (literal 307)) , 
                      (expr 
                        (literal 195)) ) , 
                    (expr 
                      (literal 0)) , 
                    (box_style BF))) \n 
                (statement 
                  (assignment_statement LET 
                    (variable_or_function_call y) = 
                    (expr 
                      (expr 
                        (variable_or_function_call y)) + 
                      (expr 
                        (literal 1))))) \n 
                (statement 
                  (put_graphics_statement PUT 
                    ( 
                      (expr 
                        (literal 275)) , 
                      (expr 
                        (expr 
                          (literal 173)) + 
                        (expr 
                          (variable_or_function_call y))) ) , 
                    (variable_or_function_call txt) , PSET)) \n 
                (statement 
                  (call_statement 
                    (untyped_id WAIT) 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal &H3DA))) , 
                      (argument 
                        (expr 
                          (literal 8)))))) \n 
                (statement 
                  (call_statement 
                    (untyped_id WAIT) 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal &H3DA))) , 
                      (argument 
                        (expr 
                          (literal 8))) , 
                      (argument 
                        (expr 
                          (literal 8)))))) \n) LOOP 
              (loop_condition UNTIL 
                (expr 
                  (expr 
                    (variable_or_function_call y)) = 
                  (expr 
                    (literal 11)))))) \n 
          (statement 
            (assignment_statement LET 
              (variable_or_function_call x) = 
              (expr 
                (literal 275)))) \n 
          (statement 
            (do_loop_statement DO 
              (block \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 180)) , 
                      (expr 
                        (literal 184)) ) - 
                    ( 
                      (expr 
                        (literal 307)) , 
                      (expr 
                        (literal 195)) ) , 
                    (expr 
                      (literal 0)) , 
                    (box_style BF))) \n 
                (statement 
                  (assignment_statement LET 
                    (variable_or_function_call x) = 
                    (expr 
                      (expr 
                        (variable_or_function_call x)) - 
                      (expr 
                        (literal 1))))) \n 
                (statement 
                  (put_graphics_statement PUT 
                    ( 
                      (expr 
                        (variable_or_function_call x)) , 
                      (expr 
                        (literal 184)) ) , 
                    (variable_or_function_call txt) , PSET)) \n 
                (statement 
                  (call_statement 
                    (untyped_id WAIT) 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal &H3DA))) , 
                      (argument 
                        (expr 
                          (literal 8)))))) \n 
                (statement 
                  (call_statement 
                    (untyped_id WAIT) 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal &H3DA))) , 
                      (argument 
                        (expr 
                          (literal 8))) , 
                      (argument 
                        (expr 
                          (literal 8)))))) \n) LOOP 
              (loop_condition UNTIL 
                (expr 
                  (expr 
                    (variable_or_function_call x)) = 
                  (expr 
                    (literal 185)))))) \n \n 
          (statement 
            (locate_statement LOCATE 
              (expr 
                (literal 23)) , 
              (expr 
                (literal 36)))) \n 
          (statement 
            (print_statement PRINT 
              (expr 
                (literal "NO!")))) \n 
          (statement 
            (line_statement LINE 
              ( 
                (expr 
                  (literal 275)) , 
                (expr 
                  (literal 173)) ) - 
              ( 
                (expr 
                  (literal 307)) , 
                (expr 
                  (literal 184)) ) , 
              (expr 
                (literal 10)) , 
              (box_style B))) \n 
          (statement 
            (get_graphics_statement GET 
              ( 
                (expr 
                  (literal 275)) , 
                (expr 
                  (literal 173)) ) - 
              ( 
                (expr 
                  (literal 307)) , 
                (expr 
                  (literal 184)) ) , 
              (variable_or_function_call txt))) \n 
          (statement 
            (assignment_statement LET 
              (variable_or_function_call y) = 
              (expr 
                (literal 0)))) \n 
          (statement 
            (do_loop_statement DO 
              (block \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 275)) , 
                      (expr 
                        (literal 173)) ) - 
                    ( 
                      (expr 
                        (literal 307)) , 
                      (expr 
                        (literal 195)) ) , 
                    (expr 
                      (literal 0)) , 
                    (box_style BF))) \n 
                (statement 
                  (assignment_statement LET 
                    (variable_or_function_call y) = 
                    (expr 
                      (expr 
                        (variable_or_function_call y)) + 
                      (expr 
                        (literal 1))))) \n 
                (statement 
                  (put_graphics_statement PUT 
                    ( 
                      (expr 
                        (literal 275)) , 
                      (expr 
                        (expr 
                          (literal 173)) + 
                        (expr 
                          (variable_or_function_call y))) ) , 
                    (variable_or_function_call txt) , PSET)) \n 
                (statement 
                  (call_statement 
                    (untyped_id WAIT) 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal &H3DA))) , 
                      (argument 
                        (expr 
                          (literal 8)))))) \n 
                (statement 
                  (call_statement 
                    (untyped_id WAIT) 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal &H3DA))) , 
                      (argument 
                        (expr 
                          (literal 8))) , 
                      (argument 
                        (expr 
                          (literal 8)))))) \n) LOOP 
              (loop_condition UNTIL 
                (expr 
                  (expr 
                    (variable_or_function_call y)) = 
                  (expr 
                    (literal 11)))))) \n 
          (statement 
            (assignment_statement LET 
              (variable_or_function_call x) = 
              (expr 
                (literal 275)))) \n 
          (statement 
            (do_loop_statement DO 
              (block \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 225)) , 
                      (expr 
                        (literal 184)) ) - 
                    ( 
                      (expr 
                        (literal 307)) , 
                      (expr 
                        (literal 195)) ) , 
                    (expr 
                      (literal 0)) , 
                    (box_style BF))) \n 
                (statement 
                  (assignment_statement LET 
                    (variable_or_function_call x) = 
                    (expr 
                      (expr 
                        (variable_or_function_call x)) - 
                      (expr 
                        (literal 1))))) \n 
                (statement 
                  (put_graphics_statement PUT 
                    ( 
                      (expr 
                        (variable_or_function_call x)) , 
                      (expr 
                        (literal 184)) ) , 
                    (variable_or_function_call txt) , PSET)) \n 
                (statement 
                  (call_statement 
                    (untyped_id WAIT) 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal &H3DA))) , 
                      (argument 
                        (expr 
                          (literal 8)))))) \n 
                (statement 
                  (call_statement 
                    (untyped_id WAIT) 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal &H3DA))) , 
                      (argument 
                        (expr 
                          (literal 8))) , 
                      (argument 
                        (expr 
                          (literal 8)))))) \n) LOOP 
              (loop_condition UNTIL 
                (expr 
                  (expr 
                    (variable_or_function_call x)) = 
                  (expr 
                    (literal 225)))))) \n \n 
          (statement 
            (for_next_statement FOR x = 
              (expr 
                (literal 1)) TO 
              (expr 
                (literal 20)) 
              (block \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 291)) , 
                      (expr 
                        (literal 170)) ) - 
                    ( 
                      (expr 
                        (literal 291)) , 
                      (expr 
                        (expr 
                          (literal 170)) + 
                        (expr 
                          (variable_or_function_call x))) ) , 
                    (expr 
                      (literal 10)))) \n 
                (statement 
                  (for_next_statement FOR i = 
                    (expr 
                      (literal 1)) TO 
                    (expr 
                      (literal 750)) 
                    (block :) NEXT)) \n) NEXT)) \n 
          (statement 
            (for_next_statement FOR x = 
              (expr 
                (literal 1)) TO 
              (expr 
                (literal 34)) 
              (block \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 291)) , 
                      (expr 
                        (literal 190)) ) - 
                    ( 
                      (expr 
                        (expr 
                          (literal 291)) - 
                        (expr 
                          (variable_or_function_call x))) , 
                      (expr 
                        (literal 190)) ) , 
                    (expr 
                      (literal 10)))) \n 
                (statement 
                  (for_next_statement FOR i = 
                    (expr 
                      (literal 1)) TO 
                    (expr 
                      (literal 750)) 
                    (block :) NEXT)) \n) NEXT)) \n 
          (statement 
            (for_next_statement FOR x = 
              (expr 
                (literal 1)) TO 
              (expr 
                (literal 8)) 
              (block \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 225)) , 
                      (expr 
                        (literal 190)) ) - 
                    ( 
                      (expr 
                        (expr 
                          (literal 225)) - 
                        (expr 
                          (variable_or_function_call x))) , 
                      (expr 
                        (literal 190)) ) , 
                    (expr 
                      (literal 10)))) \n 
                (statement 
                  (for_next_statement FOR i = 
                    (expr 
                      (literal 1)) TO 
                    (expr 
                      (literal 750)) 
                    (block :) NEXT)) \n) NEXT)) \n \n 
          (statement 
            (event_control_statement KEY 
              ( 
                (expr 
                  (literal 15)) ) ON)) \n 
          (statement 
            (event_control_statement KEY 
              ( 
                (expr 
                  (literal 16)) ) ON)) \n \n 
          (statement 
            (do_loop_statement DO 
              (block \n 
                (if_block_statement IF 
                  (expr 
                    (expr 
                      (variable_or_function_call ok)) = 
                    (expr 
                      (literal 1))) THEN \n 
                  (then_block 
                    (statement 
                      (paint_statement PAINT 
                        ( 
                          (expr 
                            (literal 186)) , 
                          (expr 
                            (literal 185)) ) , 
                        (expr 
                          (literal 7)) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (paint_statement PAINT 
                        ( 
                          (expr 
                            (literal 226)) , 
                          (expr 
                            (literal 185)) ) , 
                        (expr 
                          (literal 8)) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (paint_statement PAINT 
                        ( 
                          (expr 
                            (literal 192)) , 
                          (expr 
                            (literal 189)) ) , 
                        (expr 
                          (literal 7)) , 
                        (expr 
                          (literal 10)))) ' \n 
                    (statement 
                      (paint_statement PAINT 
                        ( 
                          (expr 
                            (literal 241)) , 
                          (expr 
                            (literal 189)) ) , 
                        (expr 
                          (literal 8)) , 
                        (expr 
                          (literal 10)))) ' \n) 
                  (elseif_block_statement ELSEIF 
                    (expr 
                      (expr 
                        (variable_or_function_call ok)) = 
                      (expr 
                        (literal 2))) THEN 
                    (else_block \n 
                      (statement 
                        (paint_statement PAINT 
                          ( 
                            (expr 
                              (literal 186)) , 
                            (expr 
                              (literal 185)) ) , 
                          (expr 
                            (literal 8)) , 
                          (expr 
                            (literal 10)))) \n 
                      (statement 
                        (paint_statement PAINT 
                          ( 
                            (expr 
                              (literal 226)) , 
                            (expr 
                              (literal 185)) ) , 
                          (expr 
                            (literal 7)) , 
                          (expr 
                            (literal 10)))) \n 
                      (statement 
                        (paint_statement PAINT 
                          ( 
                            (expr 
                              (literal 192)) , 
                            (expr 
                              (literal 189)) ) , 
                          (expr 
                            (literal 8)) , 
                          (expr 
                            (literal 10)))) ' \n 
                      (statement 
                        (paint_statement PAINT 
                          ( 
                            (expr 
                              (literal 241)) , 
                            (expr 
                              (literal 189)) ) , 
                          (expr 
                            (literal 7)) , 
                          (expr 
                            (literal 10)))) ' \n)) 
                  (end_if_statement END IF)) \n) LOOP 
              (loop_condition UNTIL 
                (expr 
                  (expr 
                    (variable_or_function_call INKEY$)) = 
                  (expr 
                    (variable_or_function_call CHR$ 
                      ( 
                        (argument_list 
                          (argument 
                            (expr 
                              (literal 13)))) ))))))) \n \n 
          (statement 
            (on_event_gosub_statement ON KEY 
              ( 
                (expr 
                  (literal 15)) ) GOSUB 
              (target 
                (text_label 
                  (untyped_id moveleft))))) \n 
          (statement 
            (on_event_gosub_statement ON KEY 
              ( 
                (expr 
                  (literal 16)) ) GOSUB 
              (target 
                (text_label 
                  (untyped_id moveright))))) \n 
          (if_block_statement IF 
            (expr 
              (expr 
                (variable_or_function_call ok)) = 
              (expr 
                (literal 1))) THEN \n 
            (then_block 
              (statement 
                (for_next_statement FOR x = 
                  (expr 
                    (literal 1)) TO 
                  (expr 
                    (literal 97)) 
                  (block \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 170)) , 
                          (expr 
                            (literal 100)) ) - 
                        ( 
                          (expr 
                            (literal 315)) , 
                          (expr 
                            (expr 
                              (literal 100)) + 
                            (expr 
                              (variable_or_function_call x))) ) , 
                        (expr 
                          (literal 0)) , 
                        (box_style BF))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 170)) , 
                          (expr 
                            (literal 100)) ) - 
                        ( 
                          (expr 
                            (literal 315)) , 
                          (expr 
                            (expr 
                              (literal 100)) + 
                            (expr 
                              (variable_or_function_call x))) ) , 
                        (expr 
                          (literal 10)) , 
                        (box_style B))) \n 
                    (if_block_statement IF 
                      (expr 
                        (expr 
                          (expr 
                            (variable_or_function_call x)) / 
                          (expr 
                            (literal 2))) = 
                        (expr 
                          (variable_or_function_call INT 
                            ( 
                              (argument_list 
                                (argument 
                                  (expr 
                                    (expr 
                                      (variable_or_function_call x)) / 
                                    (expr 
                                      (literal 2))))) )))) THEN \n 
                      (then_block 
                        (statement 
                          (call_statement 
                            (untyped_id WAIT) 
                            (argument_list 
                              (argument 
                                (expr 
                                  (literal &H3DA))) , 
                              (argument 
                                (expr 
                                  (literal 8)))))) \n 
                        (statement 
                          (call_statement 
                            (untyped_id WAIT) 
                            (argument_list 
                              (argument 
                                (expr 
                                  (literal &H3DA))) , 
                              (argument 
                                (expr 
                                  (literal 8))) , 
                              (argument 
                                (expr 
                                  (literal 8)))))) \n) 
                      (end_if_statement END IF)) \n) NEXT)) \n \n 
              (statement 
                (locate_statement LOCATE 
                  (expr 
                    (literal 14)) , 
                  (expr 
                    (literal 24)))) \n 
              (statement 
                (print_statement PRINT 
                  (expr 
                    (literal "Dir: C:\qpaint\")))) \n 
              (statement 
                (line_statement LINE 
                  ( 
                    (expr 
                      (literal 175)) , 
                    (expr 
                      (literal 113)) ) - 
                  ( 
                    (expr 
                      (literal 309)) , 
                    (expr 
                      (literal 102)) ) , 
                  (expr 
                    (literal 10)) , 
                  (box_style B))) \n 
              (statement 
                (locate_statement LOCATE 
                  (expr 
                    (literal 17)) , 
                  (expr 
                    (literal 25)))) \n 
              (statement 
                (print_statement PRINT 
                  (expr 
                    (literal "File Name:")))) \n 
              (statement 
                (line_statement LINE 
                  ( 
                    (expr 
                      (literal 180)) , 
                    (expr 
                      (literal 137)) ) - 
                  ( 
                    (expr 
                      (literal 289)) , 
                    (expr 
                      (literal 126)) ) , 
                  (expr 
                    (literal 10)) , 
                  (box_style B))) \n 
              (statement 
                (locate_statement LOCATE 
                  (expr 
                    (literal 19)) , 
                  (expr 
                    (literal 26)))) \n 
              (statement 
                (print_statement PRINT 
                  (expr 
                    (literal "--------")))) \n 
              (statement 
                (line_statement LINE 
                  ( 
                    (expr 
                      (literal 180)) , 
                    (expr 
                      (literal 153)) ) - 
                  ( 
                    (expr 
                      (literal 289)) , 
                    (expr 
                      (literal 142)) ) , 
                  (expr 
                    (literal 10)) , 
                  (box_style B))) \n 
              (statement 
                (locate_statement LOCATE 
                  (expr 
                    (literal 21)) , 
                  (expr 
                    (literal 27)))) \n 
              (statement 
                (print_statement PRINT 
                  (expr 
                    (literal ".gfx")))) \n 
              (statement 
                (line_statement LINE 
                  ( 
                    (expr 
                      (literal 205)) , 
                    (expr 
                      (literal 169)) ) - 
                  ( 
                    (expr 
                      (literal 250)) , 
                    (expr 
                      (literal 158)) ) , 
                  (expr 
                    (literal 10)) , 
                  (box_style B))) \n \n 
              (statement 
                (for_next_statement FOR x = 
                  (expr 
                    (literal 1)) TO 
                  (expr 
                    (literal 5)) 
                  (block \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 300)) , 
                          (expr 
                            (literal 113)) ) - 
                        ( 
                          (expr 
                            (literal 300)) , 
                          (expr 
                            (expr 
                              (literal 113)) + 
                            (expr 
                              (variable_or_function_call x))) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (for_next_statement FOR i = 
                        (expr 
                          (literal 1)) TO 
                        (expr 
                          (literal 500)) 
                        (block :) NEXT)) \n) NEXT)) \n 
              (statement 
                (for_next_statement FOR x = 
                  (expr 
                    (literal 1)) TO 
                  (expr 
                    (literal 125)) 
                  (block \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 300)) , 
                          (expr 
                            (literal 118)) ) - 
                        ( 
                          (expr 
                            (expr 
                              (literal 300)) - 
                            (expr 
                              (variable_or_function_call x))) , 
                          (expr 
                            (literal 118)) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (for_next_statement FOR i = 
                        (expr 
                          (literal 1)) TO 
                        (expr 
                          (literal 500)) 
                        (block :) NEXT)) \n) NEXT)) \n 
              (statement 
                (for_next_statement FOR x = 
                  (expr 
                    (literal 1)) TO 
                  (expr 
                    (literal 13)) 
                  (block \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 175)) , 
                          (expr 
                            (literal 118)) ) - 
                        ( 
                          (expr 
                            (literal 175)) , 
                          (expr 
                            (expr 
                              (literal 118)) + 
                            (expr 
                              (variable_or_function_call x))) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (for_next_statement FOR i = 
                        (expr 
                          (literal 1)) TO 
                        (expr 
                          (literal 500)) 
                        (block :) NEXT)) \n) NEXT)) \n 
              (statement 
                (for_next_statement FOR x = 
                  (expr 
                    (literal 1)) TO 
                  (expr 
                    (literal 5)) 
                  (block \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 175)) , 
                          (expr 
                            (literal 131)) ) - 
                        ( 
                          (expr 
                            (expr 
                              (literal 175)) + 
                            (expr 
                              (variable_or_function_call x))) , 
                          (expr 
                            (literal 131)) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (for_next_statement FOR i = 
                        (expr 
                          (literal 1)) TO 
                        (expr 
                          (literal 500)) 
                        (block :) NEXT)) \n) NEXT)) \n \n 
              (statement 
                (for_next_statement FOR x = 
                  (expr 
                    (literal 1)) TO 
                  (expr 
                    (literal 11)) 
                  (block \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 289)) , 
                          (expr 
                            (literal 131)) ) - 
                        ( 
                          (expr 
                            (expr 
                              (literal 289)) + 
                            (expr 
                              (variable_or_function_call x))) , 
                          (expr 
                            (literal 131)) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (for_next_statement FOR i = 
                        (expr 
                          (literal 1)) TO 
                        (expr 
                          (literal 500)) 
                        (block :) NEXT)) \n) NEXT)) \n 
              (statement 
                (for_next_statement FOR x = 
                  (expr 
                    (literal 1)) TO 
                  (expr 
                    (literal 16)) 
                  (block \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 300)) , 
                          (expr 
                            (literal 131)) ) - 
                        ( 
                          (expr 
                            (literal 300)) , 
                          (expr 
                            (expr 
                              (literal 131)) + 
                            (expr 
                              (variable_or_function_call x))) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (for_next_statement FOR i = 
                        (expr 
                          (literal 1)) TO 
                        (expr 
                          (literal 500)) 
                        (block :) NEXT)) \n) NEXT)) \n 
              (statement 
                (for_next_statement FOR x = 
                  (expr 
                    (literal 1)) TO 
                  (expr 
                    (literal 11)) 
                  (block \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 300)) , 
                          (expr 
                            (literal 147)) ) - 
                        ( 
                          (expr 
                            (expr 
                              (literal 300)) - 
                            (expr 
                              (variable_or_function_call x))) , 
                          (expr 
                            (literal 147)) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (for_next_statement FOR i = 
                        (expr 
                          (literal 1)) TO 
                        (expr 
                          (literal 500)) 
                        (block :) NEXT)) \n) NEXT)) \n \n 
              (statement 
                (assignment_statement LET 
                  (variable_or_function_call name$) = 
                  (expr 
                    (literal "")))) \n 
              (statement 
                (do_loop_statement DO 
                  (block \n 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call temp$) = 
                        (expr 
                          (builtin_function INPUT$ 
                            ( 
                              (expr 
                                (literal 1)) ))))) \n 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call temp$) = 
                        (expr 
                          (variable_or_function_call UCASE$ 
                            ( 
                              (argument_list 
                                (argument 
                                  (expr 
                                    (variable_or_function_call temp$)))) ))))) \n 
                    (if_block_statement IF 
                      (expr 
                        (expr 
                          ( 
                            (expr 
                              (expr 
                                (expr 
                                  (variable_or_function_call ASC 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call temp$)))) ))) >= 
                                (expr 
                                  (literal 48))) AND 
                              (expr 
                                (expr 
                                  (variable_or_function_call ASC 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call temp$)))) ))) <= 
                                (expr 
                                  (literal 57)))) )) OR 
                        (expr 
                          ( 
                            (expr 
                              (expr 
                                (expr 
                                  (variable_or_function_call ASC 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call temp$)))) ))) >= 
                                (expr 
                                  (literal 65))) AND 
                              (expr 
                                (expr 
                                  (variable_or_function_call ASC 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call temp$)))) ))) <= 
                                (expr 
                                  (literal 90)))) ))) THEN \n 
                      (then_block 
                        (if_block_statement IF 
                          (expr 
                            (expr 
                              (builtin_function LEN 
                                ( 
                                  (expr 
                                    (variable_or_function_call name$)) ))) < 
                            (expr 
                              (literal 8))) THEN \n 
                          (then_block 
                            (statement 
                              (assignment_statement LET 
                                (variable_or_function_call name$) = 
                                (expr 
                                  (expr 
                                    (variable_or_function_call name$)) + 
                                  (expr 
                                    (variable_or_function_call temp$))))) \n 
                            (statement 
                              (locate_statement LOCATE 
                                (expr 
                                  (literal 19)) , 
                                (expr 
                                  (literal 26)))) \n 
                            (statement 
                              (print_statement PRINT 
                                (expr 
                                  (variable_or_function_call SPC 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 8)))) ))) ;)) \n 
                            (statement 
                              (locate_statement LOCATE 
                                (expr 
                                  (literal 19)) , 
                                (expr 
                                  (literal 26)))) \n 
                            (statement 
                              (print_statement PRINT 
                                (expr 
                                  (variable_or_function_call name$)))) \n) 
                          (end_if_statement END IF)) \n) 
                      (elseif_block_statement ELSEIF 
                        (expr 
                          (expr 
                            (expr 
                              (variable_or_function_call temp$)) = 
                            (expr 
                              (variable_or_function_call CHR$ 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 8)))) )))) AND 
                          (expr 
                            (expr 
                              (builtin_function LEN 
                                ( 
                                  (expr 
                                    (variable_or_function_call name$)) ))) > 
                            (expr 
                              (literal 0)))) THEN 
                        (else_block \n 
                          (statement 
                            (assignment_statement LET 
                              (variable_or_function_call name$) = 
                              (expr 
                                (variable_or_function_call LEFT$ 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call name$))) , 
                                      (argument 
                                        (expr 
                                          (expr 
                                            (builtin_function LEN 
                                              ( 
                                                (expr 
                                                  (variable_or_function_call name$)) ))) - 
                                          (expr 
                                            (literal 1))))) ))))) \n 
                          (statement 
                            (locate_statement LOCATE 
                              (expr 
                                (literal 19)) , 
                              (expr 
                                (literal 26)))) \n 
                          (statement 
                            (print_statement PRINT 
                              (expr 
                                (variable_or_function_call SPC 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (literal 8)))) ))) ;)) \n 
                          (statement 
                            (locate_statement LOCATE 
                              (expr 
                                (literal 19)) , 
                              (expr 
                                (literal 26)))) \n 
                          (statement 
                            (print_statement PRINT 
                              (expr 
                                (variable_or_function_call name$)))) \n)) 
                      (end_if_statement END IF)) \n) LOOP 
                  (loop_condition UNTIL 
                    (expr 
                      (expr 
                        (expr 
                          (variable_or_function_call temp$)) = 
                        (expr 
                          (variable_or_function_call CHR$ 
                            ( 
                              (argument_list 
                                (argument 
                                  (expr 
                                    (literal 13)))) )))) AND 
                      (expr 
                        (expr 
                          (builtin_function LEN 
                            ( 
                              (expr 
                                (variable_or_function_call name$)) ))) > 
                        (expr 
                          (literal 0))))))) \n \n 
              (statement 
                (for_next_statement FOR x = 
                  (expr 
                    (literal 1)) TO 
                  (expr 
                    (literal 7)) 
                  (block \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 180)) , 
                          (expr 
                            (literal 147)) ) - 
                        ( 
                          (expr 
                            (expr 
                              (literal 180)) - 
                            (expr 
                              (variable_or_function_call x))) , 
                          (expr 
                            (literal 147)) ))) \n 
                    (statement 
                      (for_next_statement FOR i = 
                        (expr 
                          (literal 1)) TO 
                        (expr 
                          (literal 500)) 
                        (block :) NEXT)) \n) NEXT)) \n 
              (statement 
                (for_next_statement FOR x = 
                  (expr 
                    (literal 1)) TO 
                  (expr 
                    (literal 16)) 
                  (block \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 173)) , 
                          (expr 
                            (literal 147)) ) - 
                        ( 
                          (expr 
                            (literal 173)) , 
                          (expr 
                            (expr 
                              (literal 147)) + 
                            (expr 
                              (variable_or_function_call x))) ))) \n 
                    (statement 
                      (for_next_statement FOR i = 
                        (expr 
                          (literal 1)) TO 
                        (expr 
                          (literal 500)) 
                        (block :) NEXT)) \n) NEXT)) \n 
              (statement 
                (for_next_statement FOR x = 
                  (expr 
                    (literal 1)) TO 
                  (expr 
                    (literal 32)) 
                  (block \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 173)) , 
                          (expr 
                            (literal 163)) ) - 
                        ( 
                          (expr 
                            (expr 
                              (literal 173)) + 
                            (expr 
                              (variable_or_function_call x))) , 
                          (expr 
                            (literal 163)) ))) \n 
                    (statement 
                      (for_next_statement FOR i = 
                        (expr 
                          (literal 1)) TO 
                        (expr 
                          (literal 500)) 
                        (block :) NEXT)) \n) NEXT)) \n \n 
              (statement 
                (assignment_statement LET 
                  (variable_or_function_call address$) = 
                  (expr 
                    (expr 
                      (expr 
                        (literal "c:\qpaint\")) + 
                      (expr 
                        (variable_or_function_call name$))) + 
                    (expr 
                      (literal ".gfx"))))) \n 
              (statement 
                (open_statement OPEN 
                  (expr 
                    (variable_or_function_call address$)) FOR 
                  (open_mode INPUT) AS 
                  (expr 
                    (literal 1)))) \n 
              (statement 
                (input_statement INPUT 
                  (file_number # 
                    (expr 
                      (literal 1))) , 
                  (variable_or_function_call a))) \n 
              (statement 
                (close_statement CLOSE)) \n \n 
              (if_block_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call overflag)) = 
                  (expr 
                    (variable_or_function_call true))) THEN \n 
                (then_block 
                  (statement 
                    (locate_statement LOCATE 
                      (expr 
                        (literal 23)) , 
                      (expr 
                        (literal 24)))) \n 
                  (statement 
                    (print_statement PRINT 
                      (expr 
                        (literal "Overwrite? Y/N")))) \n 
                  (statement 
                    (line_statement LINE 
                      ( 
                        (expr 
                          (literal 175)) , 
                        (expr 
                          (literal 185)) ) - 
                      ( 
                        (expr 
                          (literal 309)) , 
                        (expr 
                          (literal 174)) ) , 
                      (expr 
                        (literal 10)) , 
                      (box_style B))) \n \n 
                  (statement 
                    (for_next_statement FOR x = 
                      (expr 
                        (literal 1)) TO 
                      (expr 
                        (literal 15)) 
                      (block \n 
                        (statement 
                          (line_statement LINE 
                            ( 
                              (expr 
                                (literal 250)) , 
                              (expr 
                                (literal 163)) ) - 
                            ( 
                              (expr 
                                (expr 
                                  (literal 250)) + 
                                (expr 
                                  (variable_or_function_call x))) , 
                              (expr 
                                (literal 163)) ) , 
                            (expr 
                              (literal 10)))) \n 
                        (statement 
                          (for_next_statement FOR i = 
                            (expr 
                              (literal 1)) TO 
                            (expr 
                              (literal 1250)) 
                            (block :) NEXT)) \n) NEXT)) \n 
                  (statement 
                    (for_next_statement FOR x = 
                      (expr 
                        (literal 1)) TO 
                      (expr 
                        (literal 11)) 
                      (block \n 
                        (statement 
                          (line_statement LINE 
                            ( 
                              (expr 
                                (literal 265)) , 
                              (expr 
                                (literal 163)) ) - 
                            ( 
                              (expr 
                                (literal 265)) , 
                              (expr 
                                (expr 
                                  (literal 163)) + 
                                (expr 
                                  (variable_or_function_call x))) ) , 
                            (expr 
                              (literal 10)))) \n 
                        (statement 
                          (for_next_statement FOR i = 
                            (expr 
                              (literal 1)) TO 
                            (expr 
                              (literal 1250)) 
                            (block :) NEXT)) \n) NEXT)) \n \n 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call cont$) = 
                      (expr 
                        (literal "")))) \n 
                  (statement 
                    (do_loop_statement DO 
                      (do_condition UNTIL 
                        (expr 
                          (expr 
                            (expr 
                              (variable_or_function_call LCASE$ 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call cont$)))) ))) = 
                            (expr 
                              (literal "n"))) OR 
                          (expr 
                            (expr 
                              (variable_or_function_call LCASE$ 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call cont$)))) ))) = 
                            (expr 
                              (literal "y"))))) 
                      (block \n 
                        (statement 
                          (assignment_statement LET 
                            (variable_or_function_call cont$) = 
                            (expr 
                              (builtin_function INPUT$ 
                                ( 
                                  (expr 
                                    (literal 1)) ))))) \n) LOOP)) \n \n 
                  (statement 
                    (if_inline_statement IF 
                      (expr 
                        (expr 
                          (variable_or_function_call LCASE$ 
                            ( 
                              (argument_list 
                                (argument 
                                  (expr 
                                    (variable_or_function_call cont$)))) ))) = 
                        (expr 
                          (literal "n"))) THEN 
                      (if_inline_action 
                        (statement 
                          (goto_statement GOTO 
                            (target 
                              (text_label 
                                (untyped_id dontoverwrite)))))))) \n \n 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call x) = 
                      (expr 
                        (literal 175)))) \n 
                  (statement 
                    (do_loop_statement DO 
                      (do_condition UNTIL 
                        (expr 
                          (expr 
                            (variable_or_function_call x)) = 
                          (expr 
                            (literal 309)))) 
                      (block \n 
                        (statement 
                          (assignment_statement LET 
                            (variable_or_function_call x) = 
                            (expr 
                              (expr 
                                (variable_or_function_call x)) + 
                              (expr 
                                (literal 1))))) \n 
                        (statement 
                          (line_statement LINE 
                            ( 
                              (expr 
                                (literal 175)) , 
                              (expr 
                                (literal 185)) ) - 
                            ( 
                              (expr 
                                (variable_or_function_call x)) , 
                              (expr 
                                (literal 174)) ) , 
                            (expr 
                              (literal 0)) , 
                            (box_style BF))) \n 
                        (statement 
                          (line_statement LINE 
                            ( 
                              (expr 
                                (variable_or_function_call x)) , 
                              (expr 
                                (literal 185)) ) - 
                            ( 
                              (expr 
                                (variable_or_function_call x)) , 
                              (expr 
                                (literal 174)) ) , 
                            (expr 
                              (literal 10)))) \n 
                        (statement 
                          (line_statement LINE 
                            ( 
                              (expr 
                                (literal 175)) , 
                              (expr 
                                (literal 185)) ) - 
                            ( 
                              (expr 
                                (literal 309)) , 
                              (expr 
                                (literal 174)) ) , 
                            (expr 
                              (literal 10)) , 
                            (box_style B))) \n 
                        (statement 
                          (call_statement 
                            (untyped_id WAIT) 
                            (argument_list 
                              (argument 
                                (expr 
                                  (literal &H3DA))) , 
                              (argument 
                                (expr 
                                  (literal 8)))))) \n 
                        (statement 
                          (call_statement 
                            (untyped_id WAIT) 
                            (argument_list 
                              (argument 
                                (expr 
                                  (literal &H3DA))) , 
                              (argument 
                                (expr 
                                  (literal 8))) , 
                              (argument 
                                (expr 
                                  (literal 8)))))) \n) LOOP)) \n \n 
                  (statement 
                    (locate_statement LOCATE 
                      (expr 
                        (literal 23)) , 
                      (expr 
                        (literal 25)))) \n 
                  (statement 
                    (print_statement PRINT 
                      (expr 
                        (literal "Save Complete")))) \n 
                  (statement 
                    (line_statement LINE 
                      ( 
                        (expr 
                          (literal 175)) , 
                        (expr 
                          (literal 185)) ) - 
                      ( 
                        (expr 
                          (literal 309)) , 
                        (expr 
                          (literal 174)) ) , 
                      (expr 
                        (literal 10)) , 
                      (box_style B))) \n 
                  (statement 
                    (call_statement 
                      (untyped_id SLEEP) 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))))) \n \n 
                  (statement 
                    (goto_statement GOTO 
                      (target 
                        (text_label 
                          (untyped_id contsave))))) \n) 
                (else_block_statement ELSE 
                  (else_block \n \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 23)) , 
                        (expr 
                          (literal 25)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (literal "Save Complete")))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 175)) , 
                          (expr 
                            (literal 185)) ) - 
                        ( 
                          (expr 
                            (literal 309)) , 
                          (expr 
                            (literal 174)) ) , 
                        (expr 
                          (literal 10)) , 
                        (box_style B))) \n \n 
                    (statement 
                      (for_next_statement FOR x = 
                        (expr 
                          (literal 1)) TO 
                        (expr 
                          (literal 15)) 
                        (block \n 
                          (statement 
                            (line_statement LINE 
                              ( 
                                (expr 
                                  (literal 250)) , 
                                (expr 
                                  (literal 163)) ) - 
                              ( 
                                (expr 
                                  (expr 
                                    (literal 250)) + 
                                  (expr 
                                    (variable_or_function_call x))) , 
                                (expr 
                                  (literal 163)) ) , 
                              (expr 
                                (literal 10)))) \n 
                          (statement 
                            (for_next_statement FOR i = 
                              (expr 
                                (literal 1)) TO 
                              (expr 
                                (literal 1250)) 
                              (block :) NEXT)) \n) NEXT)) \n 
                    (statement 
                      (for_next_statement FOR x = 
                        (expr 
                          (literal 1)) TO 
                        (expr 
                          (literal 11)) 
                        (block \n 
                          (statement 
                            (line_statement LINE 
                              ( 
                                (expr 
                                  (literal 265)) , 
                                (expr 
                                  (literal 163)) ) - 
                              ( 
                                (expr 
                                  (literal 265)) , 
                                (expr 
                                  (expr 
                                    (literal 163)) + 
                                  (expr 
                                    (variable_or_function_call x))) ) , 
                              (expr 
                                (literal 10)))) \n 
                          (statement 
                            (for_next_statement FOR i = 
                              (expr 
                                (literal 1)) TO 
                              (expr 
                                (literal 1250)) 
                              (block :) NEXT)) \n) NEXT)) \n 
                    (statement 
                      (call_statement 
                        (untyped_id SLEEP) 
                        (argument_list 
                          (argument 
                            (expr 
                              (literal 2)))))) \n \n 
                    (label 
                      (text_label 
                        (untyped_id contsave)) :) \n 
                    (statement 
                      (def_seg_statement DEF SEG = 
                        (expr 
                          (variable_or_function_call VARSEG 
                            ( 
                              (argument_list 
                                (argument 
                                  (expr 
                                    (variable_or_function_call image 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (literal 0)))) ))))) ))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id BSAVE) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call address$))) , 
                          (argument 
                            (expr 
                              (literal 0))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call arraylength)))))) \n 
                    (statement 
                      (def_seg_statement DEF SEG)) \n \n 
                    (statement 
                      (for_next_statement FOR x = 
                        (expr 
                          (literal 1)) TO 
                        (expr 
                          (literal 97)) 
                        (block \n 
                          (statement 
                            (line_statement LINE 
                              ( 
                                (expr 
                                  (literal 170)) , 
                                (expr 
                                  (literal 100)) ) - 
                              ( 
                                (expr 
                                  (literal 315)) , 
                                (expr 
                                  (expr 
                                    (literal 100)) + 
                                  (expr 
                                    (variable_or_function_call x))) ) , 
                              (expr 
                                (literal 0)) , 
                              (box_style BF))) \n 
                          (statement 
                            (line_statement LINE 
                              ( 
                                (expr 
                                  (literal 170)) , 
                                (expr 
                                  (literal 100)) ) - 
                              ( 
                                (expr 
                                  (literal 315)) , 
                                (expr 
                                  (expr 
                                    (literal 100)) + 
                                  (expr 
                                    (variable_or_function_call x))) ) , 
                              (expr 
                                (literal 10)) , 
                              (box_style B))) \n 
                          (if_block_statement IF 
                            (expr 
                              (expr 
                                (expr 
                                  (variable_or_function_call x)) / 
                                (expr 
                                  (literal 2))) = 
                              (expr 
                                (variable_or_function_call INT 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (expr 
                                            (variable_or_function_call x)) / 
                                          (expr 
                                            (literal 2))))) )))) THEN \n 
                            (then_block 
                              (statement 
                                (call_statement 
                                  (untyped_id WAIT) 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal &H3DA))) , 
                                    (argument 
                                      (expr 
                                        (literal 8)))))) \n 
                              (statement 
                                (call_statement 
                                  (untyped_id WAIT) 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal &H3DA))) , 
                                    (argument 
                                      (expr 
                                        (literal 8))) , 
                                    (argument 
                                      (expr 
                                        (literal 8)))))) \n) 
                            (end_if_statement END IF)) \n) NEXT)) \n \n 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call text$ 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (literal 1)))) )) = 
                        (expr 
                          (literal "I")))) : 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call text$ 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (literal 2)))) )) = 
                        (expr 
                          (literal "M")))) : 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call text$ 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (literal 3)))) )) = 
                        (expr 
                          (literal "G")))) \n 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call text$ 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (literal 4)))) )) = 
                        (expr 
                          (literal " ")))) : 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call text$ 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (literal 5)))) )) = 
                        (expr 
                          (literal "D")))) : 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call text$ 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (literal 6)))) )) = 
                        (expr 
                          (literal "A")))) \n 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call text$ 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (literal 7)))) )) = 
                        (expr 
                          (literal "T")))) : 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call text$ 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (literal 8)))) )) = 
                        (expr 
                          (literal "A")))) \n \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 15)) , 
                        (expr 
                          (literal 24)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (literal "File: ")))) \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 17)) , 
                        (expr 
                          (literal 24)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (variable_or_function_call name$)) ; 
                        (expr 
                          (literal ".gfx")))) \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 19)) , 
                        (expr 
                          (literal 24)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (literal "Array Size:")))) \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 21)) , 
                        (expr 
                          (literal 24)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (variable_or_function_call RIGHT$ 
                            ( 
                              (argument_list 
                                (argument 
                                  (expr 
                                    (variable_or_function_call STR$ 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (variable_or_function_call arraylength)))) )))) , 
                                (argument 
                                  (expr 
                                    (expr 
                                      (builtin_function LEN 
                                        ( 
                                          (expr 
                                            (variable_or_function_call STR$ 
                                              ( 
                                                (argument_list 
                                                  (argument 
                                                    (expr 
                                                      (variable_or_function_call arraylength)))) ))) ))) - 
                                    (expr 
                                      (literal 1))))) ))))) \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 23)) , 
                        (expr 
                          (literal 24)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (literal "256 Colors")))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 180)) , 
                          (expr 
                            (literal 121)) ) - 
                        ( 
                          (expr 
                            (literal 289)) , 
                          (expr 
                            (literal 110)) ) , 
                        (expr 
                          (literal 10)) , 
                        (box_style B))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 180)) , 
                          (expr 
                            (literal 137)) ) - 
                        ( 
                          (expr 
                            (literal 289)) , 
                          (expr 
                            (literal 126)) ) , 
                        (expr 
                          (literal 10)) , 
                        (box_style B))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 180)) , 
                          (expr 
                            (literal 153)) ) - 
                        ( 
                          (expr 
                            (literal 289)) , 
                          (expr 
                            (literal 142)) ) , 
                        (expr 
                          (literal 10)) , 
                        (box_style B))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 180)) , 
                          (expr 
                            (literal 169)) ) - 
                        ( 
                          (expr 
                            (literal 289)) , 
                          (expr 
                            (literal 158)) ) , 
                        (expr 
                          (literal 10)) , 
                        (box_style B))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 180)) , 
                          (expr 
                            (literal 185)) ) - 
                        ( 
                          (expr 
                            (literal 289)) , 
                          (expr 
                            (literal 174)) ) , 
                        (expr 
                          (literal 10)) , 
                        (box_style B))) \n \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 296)) , 
                          (expr 
                            (literal 108)) ) - 
                        ( 
                          (expr 
                            (literal 317)) , 
                          (expr 
                            (literal 178)) ) , 
                        (expr 
                          (literal 0)) , 
                        (box_style BF))) \n 
                    (statement 
                      (for_next_statement FOR x = 
                        (expr 
                          (literal 1)) TO 
                        (expr 
                          (literal 8)) 
                        (block \n 
                          (statement 
                            (locate_statement LOCATE 
                              (expr 
                                (expr 
                                  (literal 14)) + 
                                (expr 
                                  (variable_or_function_call x))) , 
                              (expr 
                                (literal 39)))) \n 
                          (statement 
                            (print_statement PRINT 
                              (expr 
                                (variable_or_function_call text$ 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call x)))) ))))) \n) NEXT)) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 296)) , 
                          (expr 
                            (literal 108)) ) - 
                        ( 
                          (expr 
                            (literal 317)) , 
                          (expr 
                            (literal 178)) ) , 
                        (expr 
                          (literal 10)) , 
                        (box_style B))) \n \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 289)) , 
                          (expr 
                            (literal 115)) ) - 
                        ( 
                          (expr 
                            (literal 296)) , 
                          (expr 
                            (literal 115)) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 180)) , 
                          (expr 
                            (literal 115)) ) - 
                        ( 
                          (expr 
                            (literal 175)) , 
                          (expr 
                            (literal 115)) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 175)) , 
                          (expr 
                            (literal 115)) ) - 
                        ( 
                          (expr 
                            (literal 175)) , 
                          (expr 
                            (literal 131)) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 175)) , 
                          (expr 
                            (literal 131)) ) - 
                        ( 
                          (expr 
                            (literal 180)) , 
                          (expr 
                            (literal 131)) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 289)) , 
                          (expr 
                            (literal 131)) ) - 
                        ( 
                          (expr 
                            (literal 296)) , 
                          (expr 
                            (literal 131)) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 296)) , 
                          (expr 
                            (literal 147)) ) - 
                        ( 
                          (expr 
                            (literal 289)) , 
                          (expr 
                            (literal 147)) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 180)) , 
                          (expr 
                            (literal 147)) ) - 
                        ( 
                          (expr 
                            (literal 175)) , 
                          (expr 
                            (literal 147)) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 175)) , 
                          (expr 
                            (literal 147)) ) - 
                        ( 
                          (expr 
                            (literal 175)) , 
                          (expr 
                            (literal 163)) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 175)) , 
                          (expr 
                            (literal 163)) ) - 
                        ( 
                          (expr 
                            (literal 180)) , 
                          (expr 
                            (literal 163)) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 289)) , 
                          (expr 
                            (literal 163)) ) - 
                        ( 
                          (expr 
                            (literal 296)) , 
                          (expr 
                            (literal 163)) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 306)) , 
                          (expr 
                            (literal 178)) ) - 
                        ( 
                          (expr 
                            (literal 306)) , 
                          (expr 
                            (literal 180)) ) , 
                        (expr 
                          (literal 10)))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 289)) , 
                          (expr 
                            (literal 180)) ) - 
                        ( 
                          (expr 
                            (literal 306)) , 
                          (expr 
                            (literal 180)) ) , 
                        (expr 
                          (literal 10)))) \n \n 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call cont$) = 
                        (expr 
                          (builtin_function INPUT$ 
                            ( 
                              (expr 
                                (literal 1)) ))))) \n \n 
                    (statement 
                      (for_next_statement FOR x = 
                        (expr 
                          (literal 1)) TO 
                        (expr 
                          (literal 97)) 
                        (block \n 
                          (statement 
                            (line_statement LINE 
                              ( 
                                (expr 
                                  (literal 170)) , 
                                (expr 
                                  (literal 100)) ) - 
                              ( 
                                (expr 
                                  (literal 315)) , 
                                (expr 
                                  (expr 
                                    (literal 100)) + 
                                  (expr 
                                    (variable_or_function_call x))) ) , 
                              (expr 
                                (literal 0)) , 
                              (box_style BF))) \n 
                          (statement 
                            (line_statement LINE 
                              ( 
                                (expr 
                                  (literal 316)) , 
                                (expr 
                                  (literal 100)) ) - 
                              ( 
                                (expr 
                                  (literal 317)) , 
                                (expr 
                                  (expr 
                                    (literal 100)) + 
                                  (expr 
                                    (variable_or_function_call x))) ) , 
                              (expr 
                                (literal 7)) , 
                              (box_style BF))) \n 
                          (statement 
                            (line_statement LINE 
                              ( 
                                (expr 
                                  (literal 170)) , 
                                (expr 
                                  (literal 100)) ) - 
                              ( 
                                (expr 
                                  (literal 315)) , 
                                (expr 
                                  (expr 
                                    (literal 100)) + 
                                  (expr 
                                    (variable_or_function_call x))) ) , 
                              (expr 
                                (literal 10)) , 
                              (box_style B))) \n 
                          (if_block_statement IF 
                            (expr 
                              (expr 
                                (expr 
                                  (variable_or_function_call x)) / 
                                (expr 
                                  (literal 2))) = 
                              (expr 
                                (variable_or_function_call INT 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (expr 
                                            (variable_or_function_call x)) / 
                                          (expr 
                                            (literal 2))))) )))) THEN \n 
                            (then_block 
                              (statement 
                                (call_statement 
                                  (untyped_id WAIT) 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal &H3DA))) , 
                                    (argument 
                                      (expr 
                                        (literal 8)))))) \n 
                              (statement 
                                (call_statement 
                                  (untyped_id WAIT) 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal &H3DA))) , 
                                    (argument 
                                      (expr 
                                        (literal 8))) , 
                                    (argument 
                                      (expr 
                                        (literal 8)))))) \n) 
                            (end_if_statement END IF)) \n) NEXT)) \n \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 14)) , 
                        (expr 
                          (literal 23)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (literal "
                            (C)-Change Color")))) \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 15)) , 
                        (expr 
                          (literal 23)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (literal "
                            (D)-Draw")))) \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 16)) , 
                        (expr 
                          (literal 23)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (literal "
                            (E)-Erase")))) \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 17)) , 
                        (expr 
                          (literal 23)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (literal "
                            (L)-Line")))) \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 18)) , 
                        (expr 
                          (literal 23)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (literal "
                            (Q)-Quit")))) \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 19)) , 
                        (expr 
                          (literal 23)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (literal "
                            (F1)-Save")))) \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 20)) , 
                        (expr 
                          (literal 23)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (literal "
                            (F2)-Load")))) \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 21)) , 
                        (expr 
                          (literal 23)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (literal "
                            (F3)-Capture")))) \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 22)) , 
                        (expr 
                          (literal 23)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (literal "
                            (F4)-Export")))) \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 23)) , 
                        (expr 
                          (literal 23)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (literal "
                            (TAB)-Custom")))) \n 
                    (statement 
                      (put_graphics_statement PUT 
                        ( 
                          (expr 
                            (literal 176)) , 
                          (expr 
                            (literal 184)) ) , 
                        (variable_or_function_call cleartxt))) \n)) 
                (end_if_statement END IF)) \n) 
            (end_if_statement END IF)) \n) 
        (else_block_statement ELSE 
          (else_block \n 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call coord)) = 
                  (expr 
                    (literal 2))) THEN 
                (if_inline_action 
                  (statement 
                    (pset_statement PSET 
                      ( 
                        (expr 
                          (variable_or_function_call line1x)) , 
                        (expr 
                          (variable_or_function_call line1y)) ) , 
                      (expr 
                        (variable_or_function_call lineunder))))))) \n 
            (statement 
              (call_statement CALL 
                (untyped_id restoremenu))) \n)) 
        (end_if_statement END IF)) \n \n 
      (label 
        (text_label 
          (untyped_id dontoverwrite)) :) \n 
      (statement 
        (if_inline_statement IF 
          (expr 
            (expr 
              (expr 
                (variable_or_function_call cont$)) = 
              (expr 
                (literal "n"))) OR 
            (expr 
              (expr 
                (variable_or_function_call ok)) = 
              (expr 
                (literal 2)))) THEN 
          (if_inline_action 
            (statement 
              (call_statement CALL 
                (untyped_id restoremenu)))))) \n \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 1)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 2)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 3)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 15)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 16)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 17)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 18)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 19)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 20)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 21)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 22)) ) ON)) \n 
      (statement 
        (close_statement CLOSE)) \n \n) 
    (end_sub_statement END SUB)) \n \n 
  (sub_statement SUB 
    (untyped_id linechoose) 
    ( 
      (parameter_list 
        (parameter linetype) , 
        (parameter change)) ) 
    (block \n \n 
      (statement 
        (dim_statement DIM 
          (dim_variable txt 
            (dim_array_bounds 
              ( 
                (dim_subscript 
                  (expr 
                    (literal 1000))) ))))) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 1)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 2)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 3)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 15)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 16)) ) OFF)) \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 17)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id linedown))))) \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 18)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id lineup))))) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call linetype) = 
          (expr 
            (literal 1)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call change) = 
          (expr 
            (variable_or_function_call false)))) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 175)) , 
            (expr 
              (literal 136)) ) - 
          ( 
            (expr 
              (literal 309)) , 
            (expr 
              (literal 126)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (get_graphics_statement GET 
          ( 
            (expr 
              (literal 175)) , 
            (expr 
              (literal 136)) ) - 
          ( 
            (expr 
              (literal 309)) , 
            (expr 
              (literal 126)) ) , 
          (variable_or_function_call txt))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 171)) , 
            (expr 
              (literal 101)) ) - 
          ( 
            (expr 
              (literal 314)) , 
            (expr 
              (literal 196)) ) , 
          (expr 
            (literal 0)) , 
          (box_style BF))) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call x) = 
          (expr 
            (literal 126)))) \n \n 
      (statement 
        (do_loop_statement DO 
          (do_condition UNTIL 
            (expr 
              (expr 
                (variable_or_function_call x)) = 
              (expr 
                (literal 102)))) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 171)) , 
                  (expr 
                    (literal 101)) ) - 
                ( 
                  (expr 
                    (literal 314)) , 
                  (expr 
                    (literal 196)) ) , 
                (expr 
                  (literal 0)) , 
                (box_style BF))) \n 
            (statement 
              (put_graphics_statement PUT 
                ( 
                  (expr 
                    (literal 175)) , 
                  (expr 
                    (variable_or_function_call x)) ) , 
                (variable_or_function_call txt) , PSET)) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call x) = 
                (expr 
                  (expr 
                    (variable_or_function_call x)) - 
                  (expr 
                    (literal 1))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n) LOOP)) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call y) = 
          (expr 
            (literal 9)))) \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 10)) TO 
          (expr 
            (literal 110)) 
          (block \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call y) = 
                (expr 
                  (expr 
                    (variable_or_function_call y)) + 
                  (expr 
                    (literal 1))))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 177)) , 
                  (expr 
                    (literal 116)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 177)) + 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (expr 
                      (literal 116)) + 
                    (expr 
                      (variable_or_function_call y))) ) , 
                (expr 
                  (literal 0)) , 
                (box_style BF))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 177)) , 
                  (expr 
                    (literal 116)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 177)) + 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (expr 
                      (literal 116)) + 
                    (expr 
                      (variable_or_function_call y))) ) , 
                (expr 
                  (literal 10)) , 
                (box_style B))) \n 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call y)) > 
                  (expr 
                    (literal 46))) THEN 
                (if_inline_action 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call y) = 
                      (expr 
                        (literal 46))))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n) NEXT)) \n \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 187)) , 
            (expr 
              (literal 121)) ) - 
          ( 
            (expr 
              (literal 275)) , 
            (expr 
              (literal 131)) ) , 
          (expr 
            (literal 7)) , 
          (box_style B))) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 190)) , 
            (expr 
              (literal 126)) ) - 
          ( 
            (expr 
              (literal 272)) , 
            (expr 
              (literal 126)) ) , 
          (expr 
            (literal 10)))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 190)) , 
            (expr 
              (literal 138)) ) - 
          ( 
            (expr 
              (literal 272)) , 
            (expr 
              (literal 142)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 190)) , 
            (expr 
              (literal 152)) ) - 
          ( 
            (expr 
              (literal 272)) , 
            (expr 
              (literal 156)) ) , 
          (expr 
            (literal 10)) , 
          (box_style BF))) \n \n 
      (statement 
        (do_loop_statement DO 
          (block \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call change)) = 
                (expr 
                  (variable_or_function_call true))) THEN \n 
              (then_block 
                (statement 
                  (assignment_statement LET 
                    (variable_or_function_call change) = 
                    (expr 
                      (variable_or_function_call false)))) \n 
                (if_block_statement IF 
                  (expr 
                    (expr 
                      (variable_or_function_call linetype)) = 
                    (expr 
                      (literal 1))) THEN \n 
                  (then_block 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 187)) , 
                          (expr 
                            (literal 121)) ) - 
                        ( 
                          (expr 
                            (literal 275)) , 
                          (expr 
                            (literal 131)) ) , 
                        (expr 
                          (literal 7)) , 
                        (box_style B))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 187)) , 
                          (expr 
                            (literal 135)) ) - 
                        ( 
                          (expr 
                            (literal 275)) , 
                          (expr 
                            (literal 145)) ) , 
                        (expr 
                          (literal 0)) , 
                        (box_style B))) \n 
                    (statement 
                      (line_statement LINE 
                        ( 
                          (expr 
                            (literal 187)) , 
                          (expr 
                            (literal 149)) ) - 
                        ( 
                          (expr 
                            (literal 275)) , 
                          (expr 
                            (literal 159)) ) , 
                        (expr 
                          (literal 0)) , 
                        (box_style B))) \n) 
                  (elseif_block_statement ELSEIF 
                    (expr 
                      (expr 
                        (variable_or_function_call linetype)) = 
                      (expr 
                        (literal 2))) THEN 
                    (else_block \n 
                      (statement 
                        (line_statement LINE 
                          ( 
                            (expr 
                              (literal 187)) , 
                            (expr 
                              (literal 121)) ) - 
                          ( 
                            (expr 
                              (literal 275)) , 
                            (expr 
                              (literal 131)) ) , 
                          (expr 
                            (literal 0)) , 
                          (box_style B))) \n 
                      (statement 
                        (line_statement LINE 
                          ( 
                            (expr 
                              (literal 187)) , 
                            (expr 
                              (literal 135)) ) - 
                          ( 
                            (expr 
                              (literal 275)) , 
                            (expr 
                              (literal 145)) ) , 
                          (expr 
                            (literal 7)) , 
                          (box_style B))) \n 
                      (statement 
                        (line_statement LINE 
                          ( 
                            (expr 
                              (literal 187)) , 
                            (expr 
                              (literal 149)) ) - 
                          ( 
                            (expr 
                              (literal 275)) , 
                            (expr 
                              (literal 159)) ) , 
                          (expr 
                            (literal 0)) , 
                          (box_style B))) \n)) 
                  (elseif_block_statement ELSEIF 
                    (expr 
                      (expr 
                        (variable_or_function_call linetype)) = 
                      (expr 
                        (literal 3))) THEN 
                    (else_block \n 
                      (statement 
                        (line_statement LINE 
                          ( 
                            (expr 
                              (literal 187)) , 
                            (expr 
                              (literal 121)) ) - 
                          ( 
                            (expr 
                              (literal 275)) , 
                            (expr 
                              (literal 131)) ) , 
                          (expr 
                            (literal 0)) , 
                          (box_style B))) \n 
                      (statement 
                        (line_statement LINE 
                          ( 
                            (expr 
                              (literal 187)) , 
                            (expr 
                              (literal 135)) ) - 
                          ( 
                            (expr 
                              (literal 275)) , 
                            (expr 
                              (literal 145)) ) , 
                          (expr 
                            (literal 0)) , 
                          (box_style B))) \n 
                      (statement 
                        (line_statement LINE 
                          ( 
                            (expr 
                              (literal 187)) , 
                            (expr 
                              (literal 149)) ) - 
                          ( 
                            (expr 
                              (literal 275)) , 
                            (expr 
                              (literal 159)) ) , 
                          (expr 
                            (literal 7)) , 
                          (box_style B))) \n)) 
                  (end_if_statement END IF)) \n) 
              (end_if_statement END IF)) \n) LOOP 
          (loop_condition UNTIL 
            (expr 
              (expr 
                (variable_or_function_call INKEY$)) = 
              (expr 
                (variable_or_function_call CHR$ 
                  ( 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal 13)))) ))))))) \n \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 1)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 2)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 3)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 15)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 16)) ) ON)) \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 17)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id movedown))))) \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 18)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id moveup))))) \n \n) 
    (end_sub_statement END SUB)) \n \n 
  (sub_statement SUB 
    (untyped_id loadsub) 
    ( 
      (parameter_list 
        (parameter listbeg) , 
        (parameter scrolposy) , 
        (parameter scrolpos) , 
        (parameter gfxlistmax) , 
        (parameter change)) ) 
    (block \n \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 1)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 2)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 3)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 15)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 16)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 17)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 18)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 19)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 20)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 21)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 22)) ) OFF)) \n \n 
      (statement 
        (dim_statement DIM 
          (dim_variable txt 
            (dim_array_bounds 
              ( 
                (dim_subscript 
                  (expr 
                    (literal 1000))) ))))) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 175)) , 
            (expr 
              (literal 150)) ) - 
          ( 
            (expr 
              (literal 309)) , 
            (expr 
              (literal 160)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (get_graphics_statement GET 
          ( 
            (expr 
              (literal 175)) , 
            (expr 
              (literal 150)) ) - 
          ( 
            (expr 
              (literal 309)) , 
            (expr 
              (literal 160)) ) , 
          (variable_or_function_call txt))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 171)) , 
            (expr 
              (literal 101)) ) - 
          ( 
            (expr 
              (literal 314)) , 
            (expr 
              (literal 196)) ) , 
          (expr 
            (literal 0)) , 
          (box_style BF))) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call x) = 
          (expr 
            (literal 150)))) \n \n 
      (statement 
        (do_loop_statement DO 
          (do_condition UNTIL 
            (expr 
              (expr 
                (variable_or_function_call x)) = 
              (expr 
                (literal 102)))) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 171)) , 
                  (expr 
                    (literal 101)) ) - 
                ( 
                  (expr 
                    (literal 314)) , 
                  (expr 
                    (literal 196)) ) , 
                (expr 
                  (literal 0)) , 
                (box_style BF))) \n 
            (statement 
              (put_graphics_statement PUT 
                ( 
                  (expr 
                    (literal 175)) , 
                  (expr 
                    (variable_or_function_call x)) ) , 
                (variable_or_function_call txt) , PSET)) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call x) = 
                (expr 
                  (expr 
                    (variable_or_function_call x)) - 
                  (expr 
                    (literal 1))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n) LOOP)) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call y) = 
          (expr 
            (literal 9)))) \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 10)) TO 
          (expr 
            (literal 131)) 
          (block \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call y) = 
                (expr 
                  (expr 
                    (variable_or_function_call y)) + 
                  (expr 
                    (literal 1))))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 177)) , 
                  (expr 
                    (literal 116)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 177)) + 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (expr 
                      (literal 116)) + 
                    (expr 
                      (variable_or_function_call y))) ) , 
                (expr 
                  (literal 0)) , 
                (box_style BF))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 177)) , 
                  (expr 
                    (literal 116)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 177)) + 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (expr 
                      (literal 116)) + 
                    (expr 
                      (variable_or_function_call y))) ) , 
                (expr 
                  (literal 10)) , 
                (box_style B))) \n 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call y)) > 
                  (expr 
                    (literal 72))) THEN 
                (if_inline_action 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call y) = 
                      (expr 
                        (literal 72))))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n) NEXT)) \n \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 17)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id scroldown))))) \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 18)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id scrolup))))) \n \n 
      (statement 
        (dim_statement DIM 
          (dim_variable savefile 
            (dim_array_bounds 
              ( 
                (dim_subscript 
                  (expr 
                    (literal 13140))) ))))) \n 
      (statement 
        (dim_statement DIM 
          (dim_variable gfxlist$ 
            (dim_array_bounds 
              ( 
                (dim_subscript 
                  (expr 
                    (literal 0)) TO 
                  (expr 
                    (literal 640))) ))))) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call listbeg) = 
          (expr 
            (literal 1)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call scrolpos) = 
          (expr 
            (literal 1)))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call scrolposy) = 
          (expr 
            (literal 135)))) \n \n 
      (statement 
        (call_statement 
          (untyped_id SHELL) 
          (argument_list 
            (argument 
              (expr 
                (literal "dir c:\qpaint > c:\qpaint\dir.tem")))))) \n 
      (statement 
        (open_statement OPEN 
          (expr 
            (literal "c:\qpaint\dir.tem")) FOR 
          (open_mode INPUT) AS # 
          (expr 
            (literal 1)))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call file$) = 
          (expr 
            (builtin_function INPUT$ 
              ( 
                (expr 
                  (variable_or_function_call LOF 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ))) , 
                (expr 
                  (literal 1)) ))))) \n \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 1)) TO 
          (expr 
            (variable_or_function_call LOF 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 1)))) ))) 
          (block \n 
            (statement 
              (assignment_statement 
                (variable_or_function_call temp$) = 
                (expr 
                  (builtin_function MID$ 
                    ( 
                      (expr 
                        (variable_or_function_call file$)) , 
                      (expr 
                        (variable_or_function_call x)) , 
                      (expr 
                        (literal 4)) ))))) \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call temp$)) = 
                (expr 
                  (literal " PIC"))) THEN \n 
              (then_block 
                (statement 
                  (assignment_statement 
                    (variable_or_function_call gfxlist) = 
                    (expr 
                      (expr 
                        (variable_or_function_call gfxlist)) + 
                      (expr 
                        (literal 1))))) \n 
                (statement 
                  (assignment_statement 
                    (variable_or_function_call gfxlist$ 
                      ( 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call gfxlist)))) )) = 
                    (expr 
                      (builtin_function MID$ 
                        ( 
                          (expr 
                            (variable_or_function_call file$)) , 
                          (expr 
                            (expr 
                              (variable_or_function_call x)) - 
                            (expr 
                              (literal 8))) , 
                          (expr 
                            (literal 12)) ))))) \n) 
              (end_if_statement END IF)) \n) NEXT x)) \n \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 640)) 
          (block \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call gfxlist$ 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call x)))) ))) = 
                (expr 
                  (literal ""))) THEN \n 
              (then_block 
                (statement 
                  (assignment_statement 
                    (variable_or_function_call gfxlistmax) = 
                    (expr 
                      (variable_or_function_call x)))) \n 
                (statement 
                  (assignment_statement 
                    (variable_or_function_call x) = 
                    (expr 
                      (literal 640)))) \n) 
              (end_if_statement END IF)) \n) NEXT x)) \n 
      (statement 
        (if_inline_statement IF 
          (expr 
            (expr 
              (variable_or_function_call gfxlistmax)) = 
            (expr 
              (literal 0))) THEN 
          (if_inline_action 
            (statement 
              (call_statement CALL 
                (untyped_id noload))) : 
            (statement 
              (goto_statement GOTO 
                (target 
                  (text_label 
                    (untyped_id endsub)))))))) \n \n 
      (statement 
        (for_next_statement FOR z = 
          (expr 
            (literal 1)) TO 
          (expr 
            (variable_or_function_call gfxlistmax)) 
          (block \n 
            (statement 
              (for_next_statement FOR a = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (expr 
                    (expr 
                      (variable_or_function_call gfxlistmax)) - 
                    (expr 
                      (literal 1))) - 
                  (expr 
                    (variable_or_function_call z))) 
                (block \n 
                  (if_block_statement IF 
                    (expr 
                      (expr 
                        (variable_or_function_call gfxlist$ 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (variable_or_function_call a)))) ))) > 
                      (expr 
                        (variable_or_function_call gfxlist$ 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (expr 
                                    (variable_or_function_call a)) + 
                                  (expr 
                                    (literal 1))))) )))) THEN \n 
                    (then_block 
                      (statement 
                        (call_statement 
                          (untyped_id SWAP) 
                          (argument_list 
                            (argument 
                              (expr 
                                (variable_or_function_call gfxlist$ 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call a)))) )))) , 
                            (argument 
                              (expr 
                                (variable_or_function_call gfxlist$ 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (expr 
                                            (variable_or_function_call a)) + 
                                          (expr 
                                            (literal 1))))) ))))))) \n) 
                    (end_if_statement END IF)) \n) NEXT)) \n) NEXT)) \n \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 16)) , 
          (expr 
            (literal 25)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "ESC - Cancel")))) \n 
      (statement 
        (get_graphics_statement GET 
          ( 
            (expr 
              (literal 190)) , 
            (expr 
              (literal 120)) ) - 
          ( 
            (expr 
              (literal 294)) , 
            (expr 
              (literal 126)) ) , 
          (variable_or_function_call txt))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 190)) , 
            (expr 
              (literal 120)) ) - 
          ( 
            (expr 
              (literal 294)) , 
            (expr 
              (literal 126)) ) , 
          (expr 
            (literal 0)) , 
          (box_style BF))) \n \n 
      (statement 
        (put_graphics_statement PUT 
          ( 
            (expr 
              (literal 181)) , 
            (expr 
              (literal 122)) ) , 
          (variable_or_function_call txt))) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 180)) , 
            (expr 
              (literal 133)) ) - 
          ( 
            (expr 
              (literal 305)) , 
            (expr 
              (literal 187)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 293)) , 
            (expr 
              (literal 133)) ) - 
          ( 
            (expr 
              (literal 293)) , 
            (expr 
              (literal 187)) ) , 
          (expr 
            (literal 10)))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 293)) , 
            (expr 
              (literal 142)) ) - 
          ( 
            (expr 
              (literal 305)) , 
            (expr 
              (literal 178)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 296)) , 
            (expr 
              (literal 139)) ) - 
          ( 
            (expr 
              (literal 302)) , 
            (expr 
              (literal 139)) ) , 
          (expr 
            (literal 10)))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 296)) , 
            (expr 
              (literal 139)) ) - 
          ( 
            (expr 
              (literal 299)) , 
            (expr 
              (literal 136)) ) , 
          (expr 
            (literal 10)))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 302)) , 
            (expr 
              (literal 139)) ) - 
          ( 
            (expr 
              (literal 299)) , 
            (expr 
              (literal 136)) ) , 
          (expr 
            (literal 10)))) \n 
      (statement 
        (paint_statement PAINT 
          ( 
            (expr 
              (literal 299)) , 
            (expr 
              (literal 137)) ) , 
          (expr 
            (literal 10)) , 
          (expr 
            (literal 10)))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 296)) , 
            (expr 
              (literal 181)) ) - 
          ( 
            (expr 
              (literal 302)) , 
            (expr 
              (literal 181)) ) , 
          (expr 
            (literal 10)))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 296)) , 
            (expr 
              (literal 181)) ) - 
          ( 
            (expr 
              (literal 299)) , 
            (expr 
              (literal 184)) ) , 
          (expr 
            (literal 10)))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 302)) , 
            (expr 
              (literal 181)) ) - 
          ( 
            (expr 
              (literal 299)) , 
            (expr 
              (literal 184)) ) , 
          (expr 
            (literal 10)))) \n 
      (statement 
        (paint_statement PAINT 
          ( 
            (expr 
              (literal 299)) , 
            (expr 
              (literal 183)) ) , 
          (expr 
            (literal 10)) , 
          (expr 
            (literal 10)))) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call tabdown) = 
          (expr 
            (literal 18)))) \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (variable_or_function_call listbeg)) TO 
          (expr 
            (expr 
              (variable_or_function_call listbeg)) + 
            (expr 
              (literal 5))) 
          (block \n 
            (statement 
              (locate_statement LOCATE 
                (expr 
                  (variable_or_function_call tabdown)) , 
                (expr 
                  (literal 24)))) \n 
            (statement 
              (print_statement PRINT 
                (expr 
                  (variable_or_function_call gfxlist$ 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call x)))) ))))) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call tabdown) = 
                (expr 
                  (expr 
                    (variable_or_function_call tabdown)) + 
                  (expr 
                    (literal 1))))) \n) NEXT x)) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 182)) , 
            (expr 
              (variable_or_function_call scrolposy)) ) - 
          ( 
            (expr 
              (literal 291)) , 
            (expr 
              (expr 
                (variable_or_function_call scrolposy)) + 
              (expr 
                (literal 8))) ) , 
          (expr 
            (literal 1)) , 
          (box_style B))) \n \n 
      (statement 
        (do_loop_statement DO 
          (block \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call keyb$) = 
                (expr 
                  (variable_or_function_call INKEY$)))) \n 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call change)) = 
                  (expr 
                    (variable_or_function_call true))) THEN 
                (if_inline_action 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call change) = 
                      (expr 
                        (variable_or_function_call false)))) : 
                  (statement 
                    (gosub_statement GOSUB 
                      (target 
                        (text_label 
                          (untyped_id restoremenu)))))))) \n) LOOP 
          (loop_condition UNTIL 
            (expr 
              (expr 
                (expr 
                  (variable_or_function_call keyb$)) = 
                (expr 
                  (variable_or_function_call CHR$ 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 13)))) )))) OR 
              (expr 
                (expr 
                  (variable_or_function_call keyb$)) = 
                (expr 
                  (variable_or_function_call CHR$ 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 27)))) )))))))) \n 
      (statement 
        (if_inline_statement IF 
          (expr 
            (expr 
              (variable_or_function_call keyb$)) = 
            (expr 
              (variable_or_function_call CHR$ 
                ( 
                  (argument_list 
                    (argument 
                      (expr 
                        (literal 27)))) )))) THEN 
          (if_inline_action 
            (statement 
              (goto_statement GOTO 
                (target 
                  (text_label 
                    (untyped_id endsub)))))))) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call file$) = 
          (expr 
            (variable_or_function_call gfxlist$ 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (expr 
                        (expr 
                          (variable_or_function_call listbeg)) + 
                        (expr 
                          (variable_or_function_call scrolpos))) - 
                      (expr 
                        (literal 1))))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call file1$) = 
          (expr 
            (variable_or_function_call LEFT$ 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call file$))) , 
                  (argument 
                    (expr 
                      (expr 
                        (variable_or_function_call INSTR 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (variable_or_function_call file$))) , 
                              (argument 
                                (expr 
                                  (literal " ")))) ))) - 
                      (expr 
                        (literal 1))))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call file2$) = 
          (expr 
            (variable_or_function_call RIGHT$ 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call file$))) , 
                  (argument 
                    (expr 
                      (literal 3)))) ))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call file$) = 
          (expr 
            (expr 
              (expr 
                (expr 
                  (literal "c:\qpaint\")) + 
                (expr 
                  (variable_or_function_call file1$))) + 
              (expr 
                (literal "."))) + 
            (expr 
              (variable_or_function_call file2$))))) \n \n 
      (statement 
        (def_seg_statement DEF SEG = 
          (expr 
            (variable_or_function_call VARSEG 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call savefile 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (literal 0)))) ))))) ))))) \n 
      (statement 
        (call_statement 
          (untyped_id BLOAD) 
          (argument_list 
            (argument 
              (expr 
                (variable_or_function_call file$))) , 
            (argument 
              (expr 
                (literal 0)))))) \n 
      (statement 
        (def_seg_statement DEF SEG)) \n \n 
      (statement 
        (put_graphics_statement PUT 
          ( 
            (expr 
              (literal 171)) , 
            (expr 
              (literal 2)) ) , 
          (variable_or_function_call savefile) , PSET)) \n 
      (statement 
        (goto_statement GOTO 
          (target 
            (text_label 
              (untyped_id endsub))))) \n \n 
      (label 
        (text_label 
          (untyped_id restoremenu)) :) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call tabdown) = 
          (expr 
            (literal 18)))) \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (variable_or_function_call listbeg)) TO 
          (expr 
            (expr 
              (variable_or_function_call listbeg)) + 
            (expr 
              (literal 5))) 
          (block \n 
            (statement 
              (locate_statement LOCATE 
                (expr 
                  (variable_or_function_call tabdown)) , 
                (expr 
                  (literal 24)))) \n 
            (statement 
              (print_statement PRINT 
                (expr 
                  (variable_or_function_call gfxlist$ 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call x)))) ))))) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call tabdown) = 
                (expr 
                  (expr 
                    (variable_or_function_call tabdown)) + 
                  (expr 
                    (literal 1))))) \n) NEXT x)) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 182)) , 
            (expr 
              (variable_or_function_call scrolposy)) ) - 
          ( 
            (expr 
              (literal 291)) , 
            (expr 
              (expr 
                (variable_or_function_call scrolposy)) + 
              (expr 
                (literal 8))) ) , 
          (expr 
            (literal 1)) , 
          (box_style B))) \n 
      (statement 
        (call_statement 
          (untyped_id WAIT) 
          (argument_list 
            (argument 
              (expr 
                (literal &H3DA))) , 
            (argument 
              (expr 
                (literal 8)))))) \n 
      (statement 
        (call_statement 
          (untyped_id WAIT) 
          (argument_list 
            (argument 
              (expr 
                (literal &H3DA))) , 
            (argument 
              (expr 
                (literal 8))) , 
            (argument 
              (expr 
                (literal 8)))))) \n 
      (statement 
        (return_statement RETURN)) \n \n 
      (label 
        (text_label 
          (untyped_id endsub)) :) \n 
      (statement 
        (close_statement CLOSE)) \n \n 
      (statement 
        (call_statement 
          (untyped_id KILL) 
          (argument_list 
            (argument 
              (expr 
                (literal "c:\qpaint\dir.tem")))))) \n \n 
      (statement 
        (call_statement CALL 
          (untyped_id restoremenu))) \n \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 17)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id movedown))))) \n 
      (statement 
        (on_event_gosub_statement ON KEY 
          ( 
            (expr 
              (literal 18)) ) GOSUB 
          (target 
            (text_label 
              (untyped_id moveup))))) \n \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 1)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 2)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 3)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 15)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 16)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 17)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 18)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 19)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 20)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 21)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 22)) ) ON)) \n \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (literal 0)))) \n \n) 
    (end_sub_statement END SUB)) \n \n 
  (sub_statement SUB 
    (untyped_id noload) 
    (block \n \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 19)) , 
          (expr 
            (literal 26)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "No File to")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 20)) , 
          (expr 
            (literal 29)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "Load")))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 190)) , 
            (expr 
              (literal 137)) ) - 
          ( 
            (expr 
              (literal 289)) , 
            (expr 
              (literal 166)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (call_statement 
          (untyped_id SLEEP) 
          (argument_list 
            (argument 
              (expr 
                (literal 5)))))) \n \n) 
    (end_sub_statement END SUB)) \n \n 
  (sub_statement SUB 
    (untyped_id restoremenu) 
    (block \n \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 97)) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 170)) , 
                  (expr 
                    (literal 100)) ) - 
                ( 
                  (expr 
                    (literal 315)) , 
                  (expr 
                    (expr 
                      (literal 100)) + 
                    (expr 
                      (variable_or_function_call x))) ) , 
                (expr 
                  (literal 0)) , 
                (box_style BF))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 170)) , 
                  (expr 
                    (literal 100)) ) - 
                ( 
                  (expr 
                    (literal 315)) , 
                  (expr 
                    (expr 
                      (literal 100)) + 
                    (expr 
                      (variable_or_function_call x))) ) , 
                (expr 
                  (literal 10)) , 
                (box_style B))) \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (expr 
                    (variable_or_function_call x)) / 
                  (expr 
                    (literal 2))) = 
                (expr 
                  (variable_or_function_call INT 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (expr 
                              (variable_or_function_call x)) / 
                            (expr 
                              (literal 2))))) )))) THEN \n 
              (then_block 
                (statement 
                  (call_statement 
                    (untyped_id WAIT) 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal &H3DA))) , 
                      (argument 
                        (expr 
                          (literal 8)))))) \n 
                (statement 
                  (call_statement 
                    (untyped_id WAIT) 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal &H3DA))) , 
                      (argument 
                        (expr 
                          (literal 8))) , 
                      (argument 
                        (expr 
                          (literal 8)))))) \n) 
              (end_if_statement END IF)) \n) NEXT)) \n \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 14)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (C)-Change Color")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 15)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (D)-Draw")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 16)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (E)-Erase")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 17)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (L)-Line")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 18)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (Q)-Quit")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 19)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (F1)-Save")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 20)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (F2)-Load")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 21)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (F3)-Capture")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 22)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (F4)-Export")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 23)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (TAB)-Custom")))) \n 
      (statement 
        (put_graphics_statement PUT 
          ( 
            (expr 
              (literal 176)) , 
            (expr 
              (literal 184)) ) , 
          (variable_or_function_call cleartxt))) \n \n) 
    (end_sub_statement END SUB)) \n \n 
  (sub_statement SUB 
    (untyped_id savecheck) 
    (block \n 
      (statement 
        (dim_statement DIM 
          (dim_variable temp 
            (dim_array_bounds 
              ( 
                (dim_subscript 
                  (expr 
                    (literal 2000))) ))))) \n 
      (statement 
        (dim_statement DIM 
          (dim_variable temp2 
            (dim_array_bounds 
              ( 
                (dim_subscript 
                  (expr 
                    (literal 2000))) ))))) \n \n 
      (statement 
        (get_graphics_statement GET 
          ( 
            (expr 
              (literal 170)) , 
            (expr 
              (literal 50)) ) - 
          ( 
            (expr 
              (literal 220)) , 
            (expr 
              (literal 90)) ) , 
          (variable_or_function_call temp2))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 80)) , 
            (expr 
              (literal 50)) ) - 
          ( 
            (expr 
              (literal 220)) , 
            (expr 
              (literal 150)) ) , 
          (expr 
            (literal 7)) , 
          (box_style BF))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 80)) , 
            (expr 
              (literal 50)) ) - 
          ( 
            (expr 
              (literal 220)) , 
            (expr 
              (literal 150)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 81)) , 
            (expr 
              (literal 150)) ) - 
          ( 
            (expr 
              (literal 220)) , 
            (expr 
              (literal 150)) ) , 
          (expr 
            (literal 120)))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 220)) , 
            (expr 
              (literal 51)) ) - 
          ( 
            (expr 
              (literal 220)) , 
            (expr 
              (literal 150)) ) , 
          (expr 
            (literal 120)))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 94)) , 
            (expr 
              (literal 52)) ) - 
          ( 
            (expr 
              (literal 200)) , 
            (expr 
              (literal 90)) ) , 
          (expr 
            (literal 0)) , 
          (box_style BF))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 9)) , 
          (expr 
            (literal 13)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal " Save Before ")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 10)) , 
          (expr 
            (literal 13)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "  Quitting?  ")))) \n 
      (statement 
        (get_graphics_statement GET 
          ( 
            (expr 
              (literal 94)) , 
            (expr 
              (literal 62)) ) - 
          ( 
            (expr 
              (literal 200)) , 
            (expr 
              (literal 80)) ) , 
          (variable_or_function_call temp))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 81)) , 
            (expr 
              (literal 51)) ) - 
          ( 
            (expr 
              (literal 219)) , 
            (expr 
              (literal 149)) ) , 
          (expr 
            (literal 7)) , 
          (box_style BF))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 97)) , 
            (expr 
              (literal 57)) ) - 
          ( 
            (expr 
              (literal 203)) , 
            (expr 
              (literal 85)) ) , 
          (expr 
            (literal 0)) , 
          (box_style BF))) \n 
      (statement 
        (put_graphics_statement PUT 
          ( 
            (expr 
              (literal 97)) , 
            (expr 
              (literal 62)) ) , 
          (variable_or_function_call temp) , PSET)) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 97)) , 
            (expr 
              (literal 57)) ) - 
          ( 
            (expr 
              (literal 203)) , 
            (expr 
              (literal 85)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 98)) , 
            (expr 
              (literal 85)) ) - 
          ( 
            (expr 
              (literal 203)) , 
            (expr 
              (literal 85)) ) , 
          (expr 
            (literal 120)))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 203)) , 
            (expr 
              (literal 58)) ) - 
          ( 
            (expr 
              (literal 203)) , 
            (expr 
              (literal 85)) ) , 
          (expr 
            (literal 120)))) \n \n \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n \n 
      (label 
        (text_label 
          (untyped_id endit)) :) \n) 
    (end_sub_statement END SUB)) \n \n 
  (sub_statement SUB 
    (untyped_id savesub) 
    (block \n \n 
      (statement 
        (dim_statement DIM 
          (dim_variable savefile 
            (dim_array_bounds 
              ( 
                (dim_subscript 
                  (expr 
                    (literal 13140))) ))))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under1)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (variable_or_function_call under2)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (variable_or_function_call under3)))) \n 
      (statement 
        (get_graphics_statement GET 
          ( 
            (expr 
              (literal 171)) , 
            (expr 
              (literal 2)) ) - 
          ( 
            (expr 
              (literal 314)) , 
            (expr 
              (literal 89)) ) , 
          (variable_or_function_call savefile))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (literal 0)))) \n \n 
      (statement 
        (on_error_statement ON ERROR GOTO 
          (target 
            (text_label 
              (untyped_id filecheckF3))))) \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call overflag) = 
          (expr 
            (variable_or_function_call true)))) \n \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 1)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 2)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 3)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 15)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 16)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 17)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 18)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 19)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 20)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 21)) ) OFF)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 22)) ) OFF)) \n \n 
      (statement 
        (dim_statement DIM 
          (dim_variable txt 
            (dim_array_bounds 
              ( 
                (dim_subscript 
                  (expr 
                    (literal 1000))) ))))) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 175)) , 
            (expr 
              (literal 142)) ) - 
          ( 
            (expr 
              (literal 309)) , 
            (expr 
              (literal 152)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (get_graphics_statement GET 
          ( 
            (expr 
              (literal 175)) , 
            (expr 
              (literal 142)) ) - 
          ( 
            (expr 
              (literal 309)) , 
            (expr 
              (literal 152)) ) , 
          (variable_or_function_call txt))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 171)) , 
            (expr 
              (literal 101)) ) - 
          ( 
            (expr 
              (literal 314)) , 
            (expr 
              (literal 196)) ) , 
          (expr 
            (literal 0)) , 
          (box_style BF))) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call x) = 
          (expr 
            (literal 142)))) \n \n 
      (statement 
        (do_loop_statement DO 
          (do_condition UNTIL 
            (expr 
              (expr 
                (variable_or_function_call x)) = 
              (expr 
                (literal 102)))) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 171)) , 
                  (expr 
                    (literal 101)) ) - 
                ( 
                  (expr 
                    (literal 314)) , 
                  (expr 
                    (literal 196)) ) , 
                (expr 
                  (literal 0)) , 
                (box_style BF))) \n 
            (statement 
              (put_graphics_statement PUT 
                ( 
                  (expr 
                    (literal 175)) , 
                  (expr 
                    (variable_or_function_call x)) ) , 
                (variable_or_function_call txt) , PSET)) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call x) = 
                (expr 
                  (expr 
                    (variable_or_function_call x)) - 
                  (expr 
                    (literal 1))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n) LOOP)) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call y) = 
          (expr 
            (literal 9)))) \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 10)) TO 
          (expr 
            (literal 130)) 
          (block \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call y) = 
                (expr 
                  (expr 
                    (variable_or_function_call y)) + 
                  (expr 
                    (literal 1))))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 177)) , 
                  (expr 
                    (literal 116)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 177)) + 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (expr 
                      (literal 116)) + 
                    (expr 
                      (variable_or_function_call y))) ) , 
                (expr 
                  (literal 0)) , 
                (box_style BF))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 177)) , 
                  (expr 
                    (literal 116)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 177)) + 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (expr 
                      (literal 116)) + 
                    (expr 
                      (variable_or_function_call y))) ) , 
                (expr 
                  (literal 10)) , 
                (box_style B))) \n 
            (statement 
              (if_inline_statement IF 
                (expr 
                  (expr 
                    (variable_or_function_call y)) > 
                  (expr 
                    (literal 72))) THEN 
                (if_inline_action 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call y) = 
                      (expr 
                        (literal 72))))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n) NEXT)) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 193)) , 
            (expr 
              (literal 126)) ) - 
          ( 
            (expr 
              (literal 291)) , 
            (expr 
              (literal 136)) ) , 
          (expr 
            (literal 0)) , 
          (box_style BF))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 17)) , 
          (expr 
            (literal 27)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "Save File?")))) \n 
      (statement 
        (get_graphics_statement GET 
          ( 
            (expr 
              (literal 193)) , 
            (expr 
              (literal 126)) ) - 
          ( 
            (expr 
              (literal 291)) , 
            (expr 
              (literal 136)) ) , 
          (variable_or_function_call txt))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 193)) , 
            (expr 
              (literal 126)) ) - 
          ( 
            (expr 
              (literal 291)) , 
            (expr 
              (literal 136)) ) , 
          (expr 
            (literal 0)) , 
          (box_style BF))) \n 
      (statement 
        (put_graphics_statement PUT 
          ( 
            (expr 
              (literal 186)) , 
            (expr 
              (literal 126)) ) , 
          (variable_or_function_call txt))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 190)) , 
            (expr 
              (literal 126)) ) - 
          ( 
            (expr 
              (literal 291)) , 
            (expr 
              (literal 136)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 19)) , 
          (expr 
            (literal 29)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "Y/N")))) \n 
      (statement 
        (get_graphics_statement GET 
          ( 
            (expr 
              (literal 210)) , 
            (expr 
              (literal 142)) ) - 
          ( 
            (expr 
              (literal 271)) , 
            (expr 
              (literal 152)) ) , 
          (variable_or_function_call txt))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 210)) , 
            (expr 
              (literal 142)) ) - 
          ( 
            (expr 
              (literal 271)) , 
            (expr 
              (literal 152)) ) , 
          (expr 
            (literal 0)) , 
          (box_style BF))) \n 
      (statement 
        (put_graphics_statement PUT 
          ( 
            (expr 
              (literal 213)) , 
            (expr 
              (literal 142)) ) , 
          (variable_or_function_call txt))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 210)) , 
            (expr 
              (literal 142)) ) - 
          ( 
            (expr 
              (literal 271)) , 
            (expr 
              (literal 152)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 240)) , 
            (expr 
              (literal 142)) ) - 
          ( 
            (expr 
              (literal 240)) , 
            (expr 
              (literal 136)) ) , 
          (expr 
            (literal 10)))) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call cont$) = 
          (expr 
            (literal "")))) \n 
      (statement 
        (do_loop_statement DO 
          (do_condition UNTIL 
            (expr 
              (expr 
                (expr 
                  (variable_or_function_call LCASE$ 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call cont$)))) ))) = 
                (expr 
                  (literal "y"))) OR 
              (expr 
                (expr 
                  (variable_or_function_call LCASE$ 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call cont$)))) ))) = 
                (expr 
                  (literal "n"))))) 
          (block \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call cont$) = 
                (expr 
                  (builtin_function INPUT$ 
                    ( 
                      (expr 
                        (literal 1)) ))))) \n) LOOP)) \n 
      (statement 
        (if_inline_statement IF 
          (expr 
            (expr 
              (variable_or_function_call LCASE$ 
                ( 
                  (argument_list 
                    (argument 
                      (expr 
                        (variable_or_function_call cont$)))) ))) = 
            (expr 
              (literal "n"))) THEN 
          (if_inline_action 
            (statement 
              (goto_statement GOTO 
                (target 
                  (text_label 
                    (untyped_id endsave)))))))) \n \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 97)) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 170)) , 
                  (expr 
                    (literal 100)) ) - 
                ( 
                  (expr 
                    (literal 315)) , 
                  (expr 
                    (expr 
                      (literal 100)) + 
                    (expr 
                      (variable_or_function_call x))) ) , 
                (expr 
                  (literal 0)) , 
                (box_style BF))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 170)) , 
                  (expr 
                    (literal 100)) ) - 
                ( 
                  (expr 
                    (literal 315)) , 
                  (expr 
                    (expr 
                      (literal 100)) + 
                    (expr 
                      (variable_or_function_call x))) ) , 
                (expr 
                  (literal 10)) , 
                (box_style B))) \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (expr 
                    (variable_or_function_call x)) / 
                  (expr 
                    (literal 2))) = 
                (expr 
                  (variable_or_function_call INT 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (expr 
                              (variable_or_function_call x)) / 
                            (expr 
                              (literal 2))))) )))) THEN \n 
              (then_block 
                (statement 
                  (call_statement 
                    (untyped_id WAIT) 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal &H3DA))) , 
                      (argument 
                        (expr 
                          (literal 8)))))) \n 
                (statement 
                  (call_statement 
                    (untyped_id WAIT) 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal &H3DA))) , 
                      (argument 
                        (expr 
                          (literal 8))) , 
                      (argument 
                        (expr 
                          (literal 8)))))) \n) 
              (end_if_statement END IF)) \n) NEXT)) \n \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 14)) , 
          (expr 
            (literal 24)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "Dir: C:\qpaint\")))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 175)) , 
            (expr 
              (literal 113)) ) - 
          ( 
            (expr 
              (literal 309)) , 
            (expr 
              (literal 102)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 17)) , 
          (expr 
            (literal 25)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "File Name:")))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 180)) , 
            (expr 
              (literal 137)) ) - 
          ( 
            (expr 
              (literal 289)) , 
            (expr 
              (literal 126)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 19)) , 
          (expr 
            (literal 26)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "--------")))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 180)) , 
            (expr 
              (literal 153)) ) - 
          ( 
            (expr 
              (literal 289)) , 
            (expr 
              (literal 142)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 21)) , 
          (expr 
            (literal 27)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal ".pic")))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 205)) , 
            (expr 
              (literal 169)) ) - 
          ( 
            (expr 
              (literal 250)) , 
            (expr 
              (literal 158)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 5)) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 300)) , 
                  (expr 
                    (literal 113)) ) - 
                ( 
                  (expr 
                    (literal 300)) , 
                  (expr 
                    (expr 
                      (literal 113)) + 
                    (expr 
                      (variable_or_function_call x))) ) , 
                (expr 
                  (literal 10)))) \n 
            (statement 
              (for_next_statement FOR i = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (literal 500)) 
                (block :) NEXT)) \n) NEXT)) \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 125)) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 300)) , 
                  (expr 
                    (literal 118)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 300)) - 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (literal 118)) ) , 
                (expr 
                  (literal 10)))) \n 
            (statement 
              (for_next_statement FOR i = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (literal 500)) 
                (block :) NEXT)) \n) NEXT)) \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 13)) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 175)) , 
                  (expr 
                    (literal 118)) ) - 
                ( 
                  (expr 
                    (literal 175)) , 
                  (expr 
                    (expr 
                      (literal 118)) + 
                    (expr 
                      (variable_or_function_call x))) ) , 
                (expr 
                  (literal 10)))) \n 
            (statement 
              (for_next_statement FOR i = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (literal 500)) 
                (block :) NEXT)) \n) NEXT)) \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 5)) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 175)) , 
                  (expr 
                    (literal 131)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 175)) + 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (literal 131)) ) , 
                (expr 
                  (literal 10)))) \n 
            (statement 
              (for_next_statement FOR i = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (literal 500)) 
                (block :) NEXT)) \n) NEXT)) \n \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 11)) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 289)) , 
                  (expr 
                    (literal 131)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 289)) + 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (literal 131)) ) , 
                (expr 
                  (literal 10)))) \n 
            (statement 
              (for_next_statement FOR i = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (literal 500)) 
                (block :) NEXT)) \n) NEXT)) \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 16)) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 300)) , 
                  (expr 
                    (literal 131)) ) - 
                ( 
                  (expr 
                    (literal 300)) , 
                  (expr 
                    (expr 
                      (literal 131)) + 
                    (expr 
                      (variable_or_function_call x))) ) , 
                (expr 
                  (literal 10)))) \n 
            (statement 
              (for_next_statement FOR i = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (literal 500)) 
                (block :) NEXT)) \n) NEXT)) \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 11)) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 300)) , 
                  (expr 
                    (literal 147)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 300)) - 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (literal 147)) ) , 
                (expr 
                  (literal 10)))) \n 
            (statement 
              (for_next_statement FOR i = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (literal 500)) 
                (block :) NEXT)) \n) NEXT)) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call name$) = 
          (expr 
            (literal "")))) \n 
      (statement 
        (do_loop_statement DO 
          (block \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call temp$) = 
                (expr 
                  (builtin_function INPUT$ 
                    ( 
                      (expr 
                        (literal 1)) ))))) \n 
            (statement 
              (assignment_statement LET 
                (variable_or_function_call temp$) = 
                (expr 
                  (variable_or_function_call UCASE$ 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call temp$)))) ))))) \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  ( 
                    (expr 
                      (expr 
                        (expr 
                          (variable_or_function_call ASC 
                            ( 
                              (argument_list 
                                (argument 
                                  (expr 
                                    (variable_or_function_call temp$)))) ))) >= 
                        (expr 
                          (literal 48))) AND 
                      (expr 
                        (expr 
                          (variable_or_function_call ASC 
                            ( 
                              (argument_list 
                                (argument 
                                  (expr 
                                    (variable_or_function_call temp$)))) ))) <= 
                        (expr 
                          (literal 57)))) )) OR 
                (expr 
                  ( 
                    (expr 
                      (expr 
                        (expr 
                          (variable_or_function_call ASC 
                            ( 
                              (argument_list 
                                (argument 
                                  (expr 
                                    (variable_or_function_call temp$)))) ))) >= 
                        (expr 
                          (literal 65))) AND 
                      (expr 
                        (expr 
                          (variable_or_function_call ASC 
                            ( 
                              (argument_list 
                                (argument 
                                  (expr 
                                    (variable_or_function_call temp$)))) ))) <= 
                        (expr 
                          (literal 90)))) ))) THEN \n 
              (then_block 
                (if_block_statement IF 
                  (expr 
                    (expr 
                      (builtin_function LEN 
                        ( 
                          (expr 
                            (variable_or_function_call name$)) ))) < 
                    (expr 
                      (literal 8))) THEN \n 
                  (then_block 
                    (statement 
                      (assignment_statement LET 
                        (variable_or_function_call name$) = 
                        (expr 
                          (expr 
                            (variable_or_function_call name$)) + 
                          (expr 
                            (variable_or_function_call temp$))))) \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 19)) , 
                        (expr 
                          (literal 26)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (variable_or_function_call SPC 
                            ( 
                              (argument_list 
                                (argument 
                                  (expr 
                                    (literal 8)))) ))) ;)) \n 
                    (statement 
                      (locate_statement LOCATE 
                        (expr 
                          (literal 19)) , 
                        (expr 
                          (literal 26)))) \n 
                    (statement 
                      (print_statement PRINT 
                        (expr 
                          (variable_or_function_call name$)))) \n) 
                  (end_if_statement END IF)) \n) 
              (elseif_block_statement ELSEIF 
                (expr 
                  (expr 
                    (expr 
                      (variable_or_function_call temp$)) = 
                    (expr 
                      (variable_or_function_call CHR$ 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (literal 8)))) )))) AND 
                  (expr 
                    (expr 
                      (builtin_function LEN 
                        ( 
                          (expr 
                            (variable_or_function_call name$)) ))) > 
                    (expr 
                      (literal 0)))) THEN 
                (else_block \n 
                  (statement 
                    (assignment_statement LET 
                      (variable_or_function_call name$) = 
                      (expr 
                        (variable_or_function_call LEFT$ 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (variable_or_function_call name$))) , 
                              (argument 
                                (expr 
                                  (expr 
                                    (builtin_function LEN 
                                      ( 
                                        (expr 
                                          (variable_or_function_call name$)) ))) - 
                                  (expr 
                                    (literal 1))))) ))))) \n 
                  (statement 
                    (locate_statement LOCATE 
                      (expr 
                        (literal 19)) , 
                      (expr 
                        (literal 26)))) \n 
                  (statement 
                    (print_statement PRINT 
                      (expr 
                        (variable_or_function_call SPC 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (literal 8)))) ))) ;)) \n 
                  (statement 
                    (locate_statement LOCATE 
                      (expr 
                        (literal 19)) , 
                      (expr 
                        (literal 26)))) \n 
                  (statement 
                    (print_statement PRINT 
                      (expr 
                        (variable_or_function_call name$)))) \n)) 
              (end_if_statement END IF)) \n) LOOP 
          (loop_condition UNTIL 
            (expr 
              (expr 
                (expr 
                  (variable_or_function_call temp$)) = 
                (expr 
                  (variable_or_function_call CHR$ 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 13)))) )))) AND 
              (expr 
                (expr 
                  (builtin_function LEN 
                    ( 
                      (expr 
                        (variable_or_function_call name$)) ))) > 
                (expr 
                  (literal 0))))))) \n \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 7)) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 180)) , 
                  (expr 
                    (literal 147)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 180)) - 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (literal 147)) ))) \n 
            (statement 
              (for_next_statement FOR i = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (literal 500)) 
                (block :) NEXT)) \n) NEXT)) \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 16)) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 173)) , 
                  (expr 
                    (literal 147)) ) - 
                ( 
                  (expr 
                    (literal 173)) , 
                  (expr 
                    (expr 
                      (literal 147)) + 
                    (expr 
                      (variable_or_function_call x))) ))) \n 
            (statement 
              (for_next_statement FOR i = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (literal 500)) 
                (block :) NEXT)) \n) NEXT)) \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 32)) 
          (block \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 173)) , 
                  (expr 
                    (literal 163)) ) - 
                ( 
                  (expr 
                    (expr 
                      (literal 173)) + 
                    (expr 
                      (variable_or_function_call x))) , 
                  (expr 
                    (literal 163)) ))) \n 
            (statement 
              (for_next_statement FOR i = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (literal 500)) 
                (block :) NEXT)) \n) NEXT)) \n \n 
      (statement 
        (assignment_statement LET 
          (variable_or_function_call address$) = 
          (expr 
            (expr 
              (expr 
                (literal "c:\qpaint\")) + 
              (expr 
                (variable_or_function_call name$))) + 
            (expr 
              (literal ".pic"))))) \n 
      (statement 
        (open_statement OPEN 
          (expr 
            (variable_or_function_call address$)) FOR 
          (open_mode INPUT) AS 
          (expr 
            (literal 1)))) \n 
      (statement 
        (input_statement INPUT 
          (file_number # 
            (expr 
              (literal 1))) , 
          (variable_or_function_call a))) \n 
      (statement 
        (close_statement CLOSE)) \n \n 
      (if_block_statement IF 
        (expr 
          (expr 
            (variable_or_function_call overflag)) = 
          (expr 
            (variable_or_function_call true))) THEN \n 
        (then_block 
          (statement 
            (locate_statement LOCATE 
              (expr 
                (literal 23)) , 
              (expr 
                (literal 24)))) \n 
          (statement 
            (print_statement PRINT 
              (expr 
                (literal "Overwrite? Y/N")))) \n 
          (statement 
            (line_statement LINE 
              ( 
                (expr 
                  (literal 175)) , 
                (expr 
                  (literal 185)) ) - 
              ( 
                (expr 
                  (literal 309)) , 
                (expr 
                  (literal 174)) ) , 
              (expr 
                (literal 10)) , 
              (box_style B))) \n \n 
          (statement 
            (for_next_statement FOR x = 
              (expr 
                (literal 1)) TO 
              (expr 
                (literal 15)) 
              (block \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 250)) , 
                      (expr 
                        (literal 163)) ) - 
                    ( 
                      (expr 
                        (expr 
                          (literal 250)) + 
                        (expr 
                          (variable_or_function_call x))) , 
                      (expr 
                        (literal 163)) ) , 
                    (expr 
                      (literal 10)))) \n 
                (statement 
                  (for_next_statement FOR i = 
                    (expr 
                      (literal 1)) TO 
                    (expr 
                      (literal 1250)) 
                    (block :) NEXT)) \n) NEXT)) \n 
          (statement 
            (for_next_statement FOR x = 
              (expr 
                (literal 1)) TO 
              (expr 
                (literal 11)) 
              (block \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 265)) , 
                      (expr 
                        (literal 163)) ) - 
                    ( 
                      (expr 
                        (literal 265)) , 
                      (expr 
                        (expr 
                          (literal 163)) + 
                        (expr 
                          (variable_or_function_call x))) ) , 
                    (expr 
                      (literal 10)))) \n 
                (statement 
                  (for_next_statement FOR i = 
                    (expr 
                      (literal 1)) TO 
                    (expr 
                      (literal 1250)) 
                    (block :) NEXT)) \n) NEXT)) \n \n 
          (statement 
            (assignment_statement LET 
              (variable_or_function_call cont$) = 
              (expr 
                (literal "")))) \n 
          (statement 
            (do_loop_statement DO 
              (do_condition UNTIL 
                (expr 
                  (expr 
                    (expr 
                      (variable_or_function_call LCASE$ 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (variable_or_function_call cont$)))) ))) = 
                    (expr 
                      (literal "n"))) OR 
                  (expr 
                    (expr 
                      (variable_or_function_call LCASE$ 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (variable_or_function_call cont$)))) ))) = 
                    (expr 
                      (literal "y"))))) 
              (block \n 
                (statement 
                  (assignment_statement LET 
                    (variable_or_function_call cont$) = 
                    (expr 
                      (builtin_function INPUT$ 
                        ( 
                          (expr 
                            (literal 1)) ))))) \n) LOOP)) \n \n 
          (statement 
            (if_inline_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call LCASE$ 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call cont$)))) ))) = 
                (expr 
                  (literal "n"))) THEN 
              (if_inline_action 
                (statement 
                  (goto_statement GOTO 
                    (target 
                      (text_label 
                        (untyped_id endsave)))))))) \n \n 
          (statement 
            (assignment_statement LET 
              (variable_or_function_call x) = 
              (expr 
                (literal 175)))) \n 
          (statement 
            (do_loop_statement DO 
              (do_condition UNTIL 
                (expr 
                  (expr 
                    (variable_or_function_call x)) = 
                  (expr 
                    (literal 309)))) 
              (block \n 
                (statement 
                  (assignment_statement LET 
                    (variable_or_function_call x) = 
                    (expr 
                      (expr 
                        (variable_or_function_call x)) + 
                      (expr 
                        (literal 1))))) \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 175)) , 
                      (expr 
                        (literal 185)) ) - 
                    ( 
                      (expr 
                        (variable_or_function_call x)) , 
                      (expr 
                        (literal 174)) ) , 
                    (expr 
                      (literal 0)) , 
                    (box_style BF))) \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (variable_or_function_call x)) , 
                      (expr 
                        (literal 185)) ) - 
                    ( 
                      (expr 
                        (variable_or_function_call x)) , 
                      (expr 
                        (literal 174)) ) , 
                    (expr 
                      (literal 10)))) \n 
                (statement 
                  (line_statement LINE 
                    ( 
                      (expr 
                        (literal 175)) , 
                      (expr 
                        (literal 185)) ) - 
                    ( 
                      (expr 
                        (literal 309)) , 
                      (expr 
                        (literal 174)) ) , 
                    (expr 
                      (literal 10)) , 
                    (box_style B))) \n 
                (statement 
                  (call_statement 
                    (untyped_id WAIT) 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal &H3DA))) , 
                      (argument 
                        (expr 
                          (literal 8)))))) \n 
                (statement 
                  (call_statement 
                    (untyped_id WAIT) 
                    (argument_list 
                      (argument 
                        (expr 
                          (literal &H3DA))) , 
                      (argument 
                        (expr 
                          (literal 8))) , 
                      (argument 
                        (expr 
                          (literal 8)))))) \n) LOOP)) \n \n 
          (statement 
            (locate_statement LOCATE 
              (expr 
                (literal 23)) , 
              (expr 
                (literal 25)))) \n 
          (statement 
            (print_statement PRINT 
              (expr 
                (literal "Save Complete")))) \n 
          (statement 
            (line_statement LINE 
              ( 
                (expr 
                  (literal 175)) , 
                (expr 
                  (literal 185)) ) - 
              ( 
                (expr 
                  (literal 309)) , 
                (expr 
                  (literal 174)) ) , 
              (expr 
                (literal 10)) , 
              (box_style B))) \n 
          (statement 
            (for_next_statement FOR i = 
              (expr 
                (literal 1)) TO 
              (expr 
                (literal 2500)) 
              (block :) NEXT)) \n \n 
          (statement 
            (goto_statement GOTO 
              (target 
                (text_label 
                  (untyped_id contsave1))))) \n) 
        (else_block_statement ELSE 
          (else_block \n 
            (label 
              (text_label 
                (untyped_id contsave1)) :) \n 
            (statement 
              (def_seg_statement DEF SEG = 
                (expr 
                  (variable_or_function_call VARSEG 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call savefile 
                              ( 
                                (argument_list 
                                  (argument 
                                    (expr 
                                      (literal 0)))) ))))) ))))) \n 
            (statement 
              (call_statement 
                (untyped_id BSAVE) 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call address$))) , 
                  (argument 
                    (expr 
                      (literal 0))) , 
                  (argument 
                    (expr 
                      (literal 13140)))))) \n 
            (statement 
              (def_seg_statement DEF SEG)) \n \n 
            (statement 
              (locate_statement LOCATE 
                (expr 
                  (literal 23)) , 
                (expr 
                  (literal 25)))) \n 
            (statement 
              (print_statement PRINT 
                (expr 
                  (literal "Save Complete")))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 175)) , 
                  (expr 
                    (literal 185)) ) - 
                ( 
                  (expr 
                    (literal 309)) , 
                  (expr 
                    (literal 174)) ) , 
                (expr 
                  (literal 10)) , 
                (box_style B))) \n \n 
            (statement 
              (for_next_statement FOR x = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (literal 15)) 
                (block \n 
                  (statement 
                    (line_statement LINE 
                      ( 
                        (expr 
                          (literal 250)) , 
                        (expr 
                          (literal 163)) ) - 
                      ( 
                        (expr 
                          (expr 
                            (literal 250)) + 
                          (expr 
                            (variable_or_function_call x))) , 
                        (expr 
                          (literal 163)) ) , 
                      (expr 
                        (literal 10)))) \n 
                  (statement 
                    (for_next_statement FOR i = 
                      (expr 
                        (literal 1)) TO 
                      (expr 
                        (literal 1250)) 
                      (block :) NEXT)) \n) NEXT)) \n 
            (statement 
              (for_next_statement FOR x = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (literal 11)) 
                (block \n 
                  (statement 
                    (line_statement LINE 
                      ( 
                        (expr 
                          (literal 265)) , 
                        (expr 
                          (literal 163)) ) - 
                      ( 
                        (expr 
                          (literal 265)) , 
                        (expr 
                          (expr 
                            (literal 163)) + 
                          (expr 
                            (variable_or_function_call x))) ) , 
                      (expr 
                        (literal 10)))) \n 
                  (statement 
                    (for_next_statement FOR i = 
                      (expr 
                        (literal 1)) TO 
                      (expr 
                        (literal 1250)) 
                      (block :) NEXT)) \n) NEXT)) \n)) 
        (end_if_statement END IF)) \n \n 
      (label 
        (text_label 
          (untyped_id endsave)) :) \n 
      (statement 
        (call_statement CALL 
          (untyped_id restoremenu))) \n \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 1)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 2)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 3)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 15)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 16)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 17)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 18)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 19)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 20)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 21)) ) ON)) \n 
      (statement 
        (event_control_statement KEY 
          ( 
            (expr 
              (literal 22)) ) ON)) \n 
      (statement 
        (close_statement CLOSE)) \n \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (expr 
                (variable_or_function_call xpos)) + 
              (expr 
                (literal 1))) , 
            (expr 
              (variable_or_function_call ypos)) ) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (pset_statement PSET 
          ( 
            (expr 
              (variable_or_function_call xpos)) , 
            (expr 
              (expr 
                (variable_or_function_call ypos)) + 
              (expr 
                (literal 1))) ) , 
          (expr 
            (literal 0)))) \n \n) 
    (end_sub_statement END SUB)) \n \n 
  (sub_statement SUB 
    (untyped_id setup) 
    (block \n \n 
      (statement 
        (dim_statement DIM 
          (dim_variable txt 
            (dim_array_bounds 
              ( 
                (dim_subscript 
                  (expr 
                    (literal 1000))) ))))) \n 
      (statement 
        (color_statement COLOR 
          (expr 
            (literal 10)))) \n \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "Current:")))) \n 
      (statement 
        (get_graphics_statement GET 
          ( 
            (expr 
              (literal 0)) , 
            (expr 
              (literal 0)) ) - 
          ( 
            (expr 
              (literal 110)) , 
            (expr 
              (literal 7)) ) , 
          (variable_or_function_call txt))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (ESC)-Clear/New")))) \n 
      (statement 
        (get_graphics_statement GET 
          ( 
            (expr 
              (literal 0)) , 
            (expr 
              (literal 8)) ) - 
          ( 
            (expr 
              (literal 120)) , 
            (expr 
              (literal 15)) ) , 
          (variable_or_function_call cleartxt))) \n \n 
      (statement 
        (call_statement 
          (untyped_id CLS))) \n 
      (statement 
        (palette_statement PALETTE 
          (expr 
            (literal 0)) , 
          (expr 
            (expr 
              (expr 
                (literal 59)) + 
              (expr 
                ( 
                  (expr 
                    (expr 
                      (literal 256)) * 
                    (expr 
                      (literal 33))) ))) + 
            (expr 
              ( 
                (expr 
                  (expr 
                    (literal 65535)) * 
                  (expr 
                    (literal 35))) ))))) \n \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 7)) , 
            (expr 
              (literal 7)) ) - 
          ( 
            (expr 
              (literal 129)) , 
            (expr 
              (literal 145)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 1)) , 
            (expr 
              (literal 1)) ) - 
          ( 
            (expr 
              (literal 163)) , 
            (expr 
              (literal 176)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 170)) , 
            (expr 
              (literal 1)) ) - 
          ( 
            (expr 
              (literal 315)) , 
            (expr 
              (literal 90)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 170)) , 
            (expr 
              (literal 100)) ) - 
          ( 
            (expr 
              (literal 315)) , 
            (expr 
              (literal 197)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 1)) , 
            (expr 
              (literal 180)) ) - 
          ( 
            (expr 
              (literal 163)) , 
            (expr 
              (literal 197)) ) , 
          (expr 
            (literal 10)) , 
          (box_style B))) \n 
      (statement 
        (paint_statement PAINT 
          ( 
            (expr 
              (literal 0)) , 
            (expr 
              (literal 0)) ) , 
          (expr 
            (literal 7)) , 
          (expr 
            (literal 10)))) \n 
      (statement 
        (paint_statement PAINT 
          ( 
            (expr 
              (literal 8)) , 
            (expr 
              (literal 8)) ) , 
          (expr 
            (literal 7)) , 
          (expr 
            (literal 10)))) \n 
      (statement 
        (paint_statement PAINT 
          ( 
            (expr 
              (literal 171)) , 
            (expr 
              (literal 2)) ) , 
          (expr 
            (literal 255)) , 
          (expr 
            (literal 10)))) \n \n 
      (statement 
        (put_graphics_statement PUT 
          ( 
            (expr 
              (literal 10)) , 
            (expr 
              (literal 185)) ) , 
          (variable_or_function_call txt))) \n \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 14)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (C)-Change Color")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 15)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (D)-Draw")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 16)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (E)-Erase")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 17)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (L)-Line")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 18)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (Q)-Quit")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 19)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (F1)-Save")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 20)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (F2)-Load")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 21)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (F3)-Capture")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 22)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (F4)-Export")))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 23)) , 
          (expr 
            (literal 23)))) \n 
      (statement 
        (print_statement PRINT 
          (expr 
            (literal "
              (TAB)-Custom")))) \n 
      (statement 
        (put_graphics_statement PUT 
          ( 
            (expr 
              (literal 176)) , 
            (expr 
              (literal 184)) ) , 
          (variable_or_function_call cleartxt))) \n \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call yd) = 
          (expr 
            (literal 8)))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call xd) = 
          (expr 
            (literal 8)))) \n 
      (statement 
        (for_next_statement FOR T = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 17)) 
          (block \n 
            (statement 
              (for_next_statement FOR y = 
                (expr 
                  (expr 
                    (variable_or_function_call yd)) + 
                  (expr 
                    (literal 1))) TO 
                (expr 
                  (expr 
                    (variable_or_function_call yd)) + 
                  (expr 
                    (literal 7))) 
                (block \n 
                  (statement 
                    (for_next_statement FOR col = 
                      (expr 
                        (expr 
                          (variable_or_function_call cd)) + 
                        (expr 
                          (literal 1))) TO 
                      (expr 
                        (expr 
                          (variable_or_function_call cd)) + 
                        (expr 
                          (literal 15))) 
                      (block \n 
                        (statement 
                          (for_next_statement FOR x = 
                            (expr 
                              (expr 
                                (variable_or_function_call xd)) + 
                              (expr 
                                (literal 1))) TO 
                            (expr 
                              (expr 
                                (variable_or_function_call xd)) + 
                              (expr 
                                (literal 7))) 
                            (block \n 
                              (statement 
                                (pset_statement PSET 
                                  ( 
                                    (expr 
                                      (variable_or_function_call x)) , 
                                    (expr 
                                      (variable_or_function_call y)) ) , 
                                  (expr 
                                    (variable_or_function_call col)))) \n) NEXT)) \n 
                        (statement 
                          (assignment_statement 
                            (variable_or_function_call xd) = 
                            (expr 
                              (expr 
                                (variable_or_function_call xd)) + 
                              (expr 
                                (literal 8))))) \n) NEXT)) \n 
                  (statement 
                    (assignment_statement 
                      (variable_or_function_call xd) = 
                      (expr 
                        (literal 8)))) \n) NEXT)) \n 
            (statement 
              (assignment_statement 
                (variable_or_function_call yd) = 
                (expr 
                  (expr 
                    (variable_or_function_call yd)) + 
                  (expr 
                    (literal 8))))) \n 
            (statement 
              (assignment_statement 
                (variable_or_function_call cd) = 
                (expr 
                  (expr 
                    (variable_or_function_call cd)) + 
                  (expr 
                    (literal 15))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n 
            (statement 
              (call_statement 
                (untyped_id WAIT) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal &H3DA))) , 
                  (argument 
                    (expr 
                      (literal 8))) , 
                  (argument 
                    (expr 
                      (literal 8)))))) \n) NEXT)) \n \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 2)) TO 
          (expr 
            (literal 18)) 
          (block \n 
            (statement 
              (locate_statement LOCATE 
                (expr 
                  (variable_or_function_call x)) , 
                (expr 
                  (literal 19)))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (literal 129)) , 
                  (expr 
                    (expr 
                      (expr 
                        (variable_or_function_call x)) * 
                      (expr 
                        (literal 8))) - 
                    (expr 
                      (literal 4))) ) - 
                ( 
                  (expr 
                    (literal 135)) , 
                  (expr 
                    (expr 
                      (expr 
                        (variable_or_function_call x)) * 
                      (expr 
                        (literal 8))) - 
                    (expr 
                      (literal 4))) ) , 
                (expr 
                  (literal 10)))) \n 
            (statement 
              (print_statement PRINT 
                (expr 
                  (variable_or_function_call RIGHT$ 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call STR$ 
                              ( 
                                (argument_list 
                                  (argument 
                                    (expr 
                                      (expr 
                                        (variable_or_function_call x)) - 
                                      (expr 
                                        (literal 1))))) )))) , 
                        (argument 
                          (expr 
                            (expr 
                              (builtin_function LEN 
                                ( 
                                  (expr 
                                    (variable_or_function_call STR$ 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (expr 
                                                (variable_or_function_call x)) - 
                                              (expr 
                                                (literal 1))))) ))) ))) - 
                            (expr 
                              (literal 1))))) ))))) \n) NEXT)) \n \n 
      (statement 
        (get_graphics_statement GET 
          ( 
            (expr 
              (literal 143)) , 
            (expr 
              (literal 7)) ) - 
          ( 
            (expr 
              (literal 158)) , 
            (expr 
              (literal 145)) ) , 
          (variable_or_function_call txt))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 143)) , 
            (expr 
              (literal 7)) ) - 
          ( 
            (expr 
              (literal 158)) , 
            (expr 
              (literal 145)) ) , 
          (expr 
            (literal 0)) , 
          (box_style BF))) \n 
      (statement 
        (put_graphics_statement PUT 
          ( 
            (expr 
              (literal 138)) , 
            (expr 
              (literal 7)) ) , 
          (variable_or_function_call txt))) \n \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 15)) 
          (block \n 
            (statement 
              (locate_statement LOCATE 
                (expr 
                  (literal 20)) , 
                (expr 
                  (expr 
                    (variable_or_function_call x)) + 
                  (expr 
                    (literal 1))))) \n 
            (statement 
              (print_statement PRINT 
                (expr 
                  (builtin_function MID$ 
                    ( 
                      (expr 
                        (variable_or_function_call STR$ 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (variable_or_function_call x)))) ))) , 
                      (expr 
                        (literal 2)) , 
                      (expr 
                        (literal 1)) ))))) \n 
            (statement 
              (line_statement LINE 
                ( 
                  (expr 
                    (expr 
                      (expr 
                        (variable_or_function_call x)) * 
                      (expr 
                        (literal 8))) + 
                    (expr 
                      (literal 4))) , 
                  (expr 
                    (literal 145)) ) - 
                ( 
                  (expr 
                    (expr 
                      (expr 
                        (variable_or_function_call x)) * 
                      (expr 
                        (literal 8))) + 
                    (expr 
                      (literal 4))) , 
                  (expr 
                    (literal 150)) ) , 
                (expr 
                  (literal 10)))) \n) NEXT)) \n 
      (statement 
        (for_next_statement FOR x = 
          (expr 
            (literal 10)) TO 
          (expr 
            (literal 15)) 
          (block \n 
            (statement 
              (locate_statement LOCATE 
                (expr 
                  (literal 21)) , 
                (expr 
                  (expr 
                    (variable_or_function_call x)) + 
                  (expr 
                    (literal 1))))) \n 
            (statement 
              (print_statement PRINT 
                (expr 
                  (variable_or_function_call RIGHT$ 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call STR$ 
                              ( 
                                (argument_list 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call x)))) )))) , 
                        (argument 
                          (expr 
                            (literal 1)))) ))))) \n) NEXT)) \n \n 
      (statement 
        (get_graphics_statement GET 
          ( 
            (expr 
              (literal 7)) , 
            (expr 
              (literal 152)) ) - 
          ( 
            (expr 
              (literal 126)) , 
            (expr 
              (literal 167)) ) , 
          (variable_or_function_call txt))) \n 
      (statement 
        (line_statement LINE 
          ( 
            (expr 
              (literal 7)) , 
            (expr 
              (literal 152)) ) - 
          ( 
            (expr 
              (literal 126)) , 
            (expr 
              (literal 167)) ) , 
          (expr 
            (literal 0)) , 
          (box_style BF))) \n 
      (statement 
        (put_graphics_statement PUT 
          ( 
            (expr 
              (literal 9)) , 
            (expr 
              (literal 153)) ) , 
          (variable_or_function_call txt))) \n \n) 
    (end_sub_statement END SUB)) \n <EOF>)
