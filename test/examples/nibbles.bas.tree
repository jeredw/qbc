(program ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n \n ' \n 
  (statement 
    (deftype_statement DEFINT 
      (letter_range A - Z))) \n \n ' \n 
  (type_statement TYPE 
    (untyped_id snakeBody) \n 
    (type_element 
      (untyped_id row) AS 
      (type_name_for_type_element INTEGER) \n) 
    (type_element 
      (untyped_id col) AS 
      (type_name_for_type_element INTEGER) \n) END TYPE) \n \n ' \n 
  (type_statement TYPE 
    (untyped_id snaketype) \n 
    (type_element 
      (untyped_id head) AS 
      (type_name_for_type_element INTEGER) \n) 
    (type_element 
      (untyped_id length) AS 
      (type_name_for_type_element INTEGER) \n) 
    (type_element 
      (untyped_id row) AS 
      (type_name_for_type_element INTEGER) \n) 
    (type_element 
      (untyped_id col) AS 
      (type_name_for_type_element INTEGER) \n) 
    (type_element 
      (untyped_id direction) AS 
      (type_name_for_type_element INTEGER) \n) 
    (type_element 
      (untyped_id lives) AS 
      (type_name_for_type_element INTEGER) \n) 
    (type_element 
      (untyped_id score) AS 
      (type_name_for_type_element INTEGER) \n) 
    (type_element 
      (untyped_id scolor) AS 
      (type_name_for_type_element INTEGER) \n) 
    (type_element 
      (untyped_id alive) AS 
      (type_name_for_type_element INTEGER) \n) END TYPE) \n \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n ' \n 
  (type_statement TYPE 
    (untyped_id arenaType) \n 
    (type_element 
      (untyped_id realRow) AS 
      (type_name_for_type_element INTEGER) ' \n) 
    (type_element 
      (untyped_id acolor) AS 
      (type_name_for_type_element INTEGER) ' \n) 
    (type_element 
      (untyped_id sister) AS 
      (type_name_for_type_element INTEGER) ' \n) END TYPE) ' \n \n ' \n 
  (declare_statement DECLARE SUB 
    (untyped_id SpacePause) 
    ( 
      (declare_parameter_list 
        (declare_parameter text$)) )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id PrintScore) 
    ( 
      (declare_parameter_list 
        (declare_parameter NumPlayers%) , 
        (declare_parameter score1%) , 
        (declare_parameter score2%) , 
        (declare_parameter lives1%) , 
        (declare_parameter lives2%)) )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id Intro) 
    ( )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id GetInputs) 
    ( 
      (declare_parameter_list 
        (declare_parameter NumPlayers) , 
        (declare_parameter speed) , 
        (declare_parameter diff$) , 
        (declare_parameter monitor$)) )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id DrawScreen) 
    ( )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id PlayNibbles) 
    ( 
      (declare_parameter_list 
        (declare_parameter NumPlayers) , 
        (declare_parameter speed) , 
        (declare_parameter diff$)) )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id Set) 
    ( 
      (declare_parameter_list 
        (declare_parameter row) , 
        (declare_parameter col) , 
        (declare_parameter acolor)) )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id Center) 
    ( 
      (declare_parameter_list 
        (declare_parameter row) , 
        (declare_parameter text$)) )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id DoIntro) 
    ( )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id Initialize) 
    ( )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id SparklePause) 
    ( )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id Level) 
    ( 
      (declare_parameter_list 
        (declare_parameter WhatToDO) , 
        (declare_parameter 
          (untyped_id sammy) 
          (array_declaration 
            ( )) AS 
          (type_name_for_declare_parameter 
            (untyped_id snaketype)))) )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id InitColors) 
    ( )) \n 
  (declare_statement DECLARE SUB 
    (untyped_id EraseSnake) 
    ( 
      (declare_parameter_list 
        (declare_parameter 
          (untyped_id snake) 
          (array_declaration 
            ( )) AS 
          (type_name_for_declare_parameter ANY)) , 
        (declare_parameter 
          (untyped_id snakeBod) 
          (array_declaration 
            ( )) AS 
          (type_name_for_declare_parameter ANY)) , 
        (declare_parameter snakeNum%)) )) \n 
  (declare_statement DECLARE FUNCTION StillWantsToPlay 
    ( )) \n 
  (declare_statement DECLARE FUNCTION PointIsThere 
    ( 
      (declare_parameter_list 
        (declare_parameter row) , 
        (declare_parameter col) , 
        (declare_parameter backColor)) )) \n \n ' \n 
  (statement 
    (const_statement CONST 
      (const_assignment TRUE = 
        (const_expr 
          (expr - 
            (expr 
              (literal 1))))))) \n 
  (statement 
    (const_statement CONST 
      (const_assignment FALSE = 
        (const_expr 
          (expr NOT 
            (expr 
              (variable_or_function_call TRUE))))))) \n 
  (statement 
    (const_statement CONST 
      (const_assignment MAXSNAKELENGTH = 
        (const_expr 
          (expr 
            (literal 1000)))))) \n 
  (statement 
    (const_statement CONST 
      (const_assignment STARTOVER = 
        (const_expr 
          (expr 
            (literal 1)))))) ' \n 
  (statement 
    (const_statement CONST 
      (const_assignment SAMELEVEL = 
        (const_expr 
          (expr 
            (literal 2)))))) \n 
  (statement 
    (const_statement CONST 
      (const_assignment NEXTLEVEL = 
        (const_expr 
          (expr 
            (literal 3)))))) \n \n ' \n 
  (statement 
    (dim_statement DIM SHARED 
      (dim_variable 
        (untyped_id arena) 
        (dim_array_bounds 
          ( 
            (dim_subscript 
              (expr 
                (literal 1)) TO 
              (expr 
                (literal 50))) , 
            (dim_subscript 
              (expr 
                (literal 1)) TO 
              (expr 
                (literal 80))) )) AS 
        (type_name 
          (untyped_id arenaType))))) \n 
  (statement 
    (dim_statement DIM SHARED 
      (dim_variable curLevel) , 
      (dim_variable colorTable 
        (dim_array_bounds 
          ( 
            (dim_subscript 
              (expr 
                (literal 10))) ))))) \n \n 
  (statement 
    (randomize_statement RANDOMIZE 
      (expr 
        (builtin_function 
          (timer_function TIMER))))) \n 
  (statement 
    (gosub_statement GOSUB 
      (target 
        (text_label 
          (untyped_id ClearKeyLocks))))) \n 
  (statement 
    (call_statement 
      (untyped_id Intro))) \n 
  (statement 
    (call_statement 
      (untyped_id GetInputs) 
      (argument_list 
        (argument 
          (expr 
            (variable_or_function_call NumPlayers))) , 
        (argument 
          (expr 
            (variable_or_function_call speed))) , 
        (argument 
          (expr 
            (variable_or_function_call diff$))) , 
        (argument 
          (expr 
            (variable_or_function_call monitor$)))))) \n 
  (statement 
    (gosub_statement GOSUB 
      (target 
        (text_label 
          (untyped_id SetColors))))) \n 
  (statement 
    (call_statement 
      (untyped_id DrawScreen))) \n \n 
  (statement 
    (do_loop_statement DO 
      (block \n 
        (statement 
          (call_statement 
            (untyped_id PlayNibbles) 
            (argument_list 
              (argument 
                (expr 
                  (variable_or_function_call NumPlayers))) , 
              (argument 
                (expr 
                  (variable_or_function_call speed))) , 
              (argument 
                (expr 
                  (variable_or_function_call diff$)))))) \n) LOOP 
      (loop_condition WHILE 
        (expr 
          (variable_or_function_call StillWantsToPlay))))) \n \n 
  (statement 
    (gosub_statement GOSUB 
      (target 
        (text_label 
          (untyped_id RestoreKeyLocks))))) \n 
  (statement 
    (color_statement COLOR 
      (expr 
        (literal 15)) , 
      (expr 
        (literal 0)))) \n 
  (statement 
    (call_statement 
      (untyped_id CLS))) \n 
  (statement 
    (end_statement END)) \n \n 
  (label 
    (text_label 
      (untyped_id ClearKeyLocks)) :) \n 
  (statement 
    (def_seg_statement DEF SEG = 
      (expr 
        (literal 0)))) ' \n 
  (statement 
    (assignment_statement 
      (variable_or_function_call KeyFlags) = 
      (expr 
        (variable_or_function_call PEEK 
          ( 
            (argument_list 
              (argument 
                (expr 
                  (literal 1047)))) ))))) \n 
  (statement 
    (call_statement 
      (untyped_id POKE) 
      (argument_list 
        (argument 
          (expr 
            (literal 1047))) , 
        (argument 
          (expr 
            (literal &H0)))))) \n 
  (statement 
    (def_seg_statement DEF SEG)) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id RestoreKeyLocks)) :) \n 
  (statement 
    (def_seg_statement DEF SEG = 
      (expr 
        (literal 0)))) ' \n 
  (statement 
    (call_statement 
      (untyped_id POKE) 
      (argument_list 
        (argument 
          (expr 
            (literal 1047))) , 
        (argument 
          (expr 
            (variable_or_function_call KeyFlags)))))) \n 
  (statement 
    (def_seg_statement DEF SEG)) \n 
  (statement 
    (return_statement RETURN)) \n \n 
  (label 
    (text_label 
      (untyped_id SetColors)) :) \n 
  (if_block_statement IF 
    (expr 
      (expr 
        (variable_or_function_call monitor$)) = 
      (expr 
        (literal "M"))) THEN \n 
    (then_block 
      (statement 
        (restore_statement RESTORE 
          (target 
            (text_label 
              (untyped_id mono))))) \n) 
    (else_block_statement ELSE 
      (else_block \n 
        (statement 
          (restore_statement RESTORE 
            (target 
              (text_label 
                (untyped_id normal))))) \n)) 
    (end_if_statement END IF)) \n \n 
  (statement 
    (for_next_statement FOR a = 
      (expr 
        (literal 1)) TO 
      (expr 
        (literal 6)) 
      (block \n 
        (statement 
          (read_statement READ 
            (variable_or_function_call colorTable 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call a)))) )))) \n) NEXT a)) \n 
  (statement 
    (return_statement RETURN)) \n \n ' \n 
  (label 
    (text_label 
      (untyped_id mono)) :) 
  (statement 
    (data_statement DATA 
      (data_item 15) , 
      (data_item 7) , 
      (data_item 7) , 
      (data_item 0) , 
      (data_item 15) , 
      (data_item 0))) \n 
  (label 
    (text_label 
      (untyped_id normal)) :) 
  (statement 
    (data_statement DATA 
      (data_item 14) , 
      (data_item 13) , 
      (data_item 12) , 
      (data_item 1) , 
      (data_item 15) , 
      (data_item 4))) \n 
  (statement 
    (end_statement END)) \n \n ' \n ' \n 
  (sub_statement SUB 
    (untyped_id Center) 
    ( 
      (parameter_list 
        (parameter row) , 
        (parameter text$)) ) 
    (block \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (variable_or_function_call row)) , 
          (expr 
            (expr 
              (literal 41)) - 
            (expr 
              (expr 
                (builtin_function 
                  (len_function LEN 
                    ( 
                      (expr 
                        (variable_or_function_call text$)) )))) / 
              (expr 
                (literal 2)))))) \n 
      (statement 
        (print_statement PRINT 
          (print_argument 
            (expr 
              (variable_or_function_call text$)) ;))) \n) 
    (end_sub_statement END SUB)) \n \n ' \n ' \n 
  (sub_statement SUB 
    (untyped_id DrawScreen) 
    (block \n \n ' \n 
      (statement 
        (view_print_statement VIEW PRINT)) \n 
      (statement 
        (color_statement COLOR 
          (expr 
            (variable_or_function_call colorTable 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 1)))) ))) , 
          (expr 
            (variable_or_function_call colorTable 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 4)))) ))))) \n 
      (statement 
        (call_statement 
          (untyped_id CLS))) \n \n ' \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 1))) , 
            (argument 
              (expr 
                (literal "Nibbles!")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 11))) , 
            (argument 
              (expr 
                (literal "Initializing Playing Field...")))))) \n \n ' \n 
      (statement 
        (for_next_statement FOR row = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 50)) 
          (block \n 
            (statement 
              (for_next_statement FOR col = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (literal 80)) 
                (block \n 
                  (statement 
                    (assignment_statement 
                      (variable_or_function_call arena 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (variable_or_function_call row))) , 
                            (argument 
                              (expr 
                                (variable_or_function_call col)))) ) . realRow) = 
                      (expr 
                        (variable_or_function_call INT 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (expr 
                                    ( 
                                      (expr 
                                        (expr 
                                          (variable_or_function_call row)) + 
                                        (expr 
                                          (literal 1))) )) / 
                                  (expr 
                                    (literal 2))))) ))))) \n 
                  (statement 
                    (assignment_statement 
                      (variable_or_function_call arena 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (variable_or_function_call row))) , 
                            (argument 
                              (expr 
                                (variable_or_function_call col)))) ) . sister) = 
                      (expr 
                        (expr 
                          (expr 
                            ( 
                              (expr 
                                (expr 
                                  (variable_or_function_call row)) MOD 
                                (expr 
                                  (literal 2))) )) * 
                          (expr 
                            (literal 2))) - 
                        (expr 
                          (literal 1))))) \n) NEXT col)) \n) NEXT row)) \n) 
    (end_sub_statement END SUB)) \n \n ' \n ' \n 
  (sub_statement SUB 
    (untyped_id EraseSnake) 
    ( 
      (parameter_list 
        (parameter 
          (untyped_id snake) 
          (array_declaration 
            ( )) AS 
          (type_name_for_parameter 
            (untyped_id snaketype))) , 
        (parameter 
          (untyped_id snakeBod) 
          (array_declaration 
            ( )) AS 
          (type_name_for_parameter 
            (untyped_id snakeBody))) , 
        (parameter snakeNum)) ) 
    (block \n \n 
      (statement 
        (for_next_statement FOR c = 
          (expr 
            (literal 0)) TO 
          (expr 
            (literal 9)) 
          (block \n 
            (statement 
              (for_next_statement FOR b = 
                (expr 
                  (expr 
                    (variable_or_function_call snake 
                      ( 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call snakeNum)))) ) . length)) - 
                  (expr 
                    (variable_or_function_call c))) TO 
                (expr 
                  (literal 0)) STEP 
                (expr - 
                  (expr 
                    (literal 10))) 
                (block \n 
                  (statement 
                    (assignment_statement 
                      (variable_or_function_call tail) = 
                      (expr 
                        (expr 
                          ( 
                            (expr 
                              (expr 
                                (expr 
                                  (variable_or_function_call snake 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call snakeNum)))) ) . head)) + 
                                (expr 
                                  (variable_or_function_call MAXSNAKELENGTH))) - 
                              (expr 
                                (variable_or_function_call b))) )) MOD 
                        (expr 
                          (variable_or_function_call MAXSNAKELENGTH))))) \n 
                  (statement 
                    (call_statement 
                      (untyped_id Set) 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call snakeBod 
                              ( 
                                (argument_list 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call tail))) , 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call snakeNum)))) ) . row))) , 
                        (argument 
                          (expr 
                            (variable_or_function_call snakeBod 
                              ( 
                                (argument_list 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call tail))) , 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call snakeNum)))) ) . col))) , 
                        (argument 
                          (expr 
                            (variable_or_function_call colorTable 
                              ( 
                                (argument_list 
                                  (argument 
                                    (expr 
                                      (literal 4)))) ))))))) \n) NEXT b)) \n) NEXT c)) \n \n) 
    (end_sub_statement END SUB)) \n \n ' \n ' \n 
  (sub_statement SUB 
    (untyped_id GetInputs) 
    ( 
      (parameter_list 
        (parameter NumPlayers) , 
        (parameter speed) , 
        (parameter diff$) , 
        (parameter monitor$)) ) 
    (block \n \n 
      (statement 
        (color_statement COLOR 
          (expr 
            (literal 7)) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (call_statement 
          (untyped_id CLS))) \n \n 
      (statement 
        (do_loop_statement DO 
          (block \n 
            (statement 
              (locate_statement LOCATE 
                (expr 
                  (literal 5)) , 
                (expr 
                  (literal 47)))) : 
            (statement 
              (print_statement PRINT 
                (print_argument 
                  (expr 
                    (variable_or_function_call SPACE$ 
                      ( 
                        (argument_list 
                          (argument 
                            (expr 
                              (literal 34)))) ))) ;))) \n 
            (statement 
              (locate_statement LOCATE 
                (expr 
                  (literal 5)) , 
                (expr 
                  (literal 20)))) \n 
            (statement 
              (input_statement INPUT "How many players 
                (1 or 2)" ; 
                (variable_or_function_call num$))) \n) LOOP 
          (loop_condition UNTIL 
            (expr 
              (expr 
                (expr 
                  (variable_or_function_call VAL 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call num$)))) ))) = 
                (expr 
                  (literal 1))) OR 
              (expr 
                (expr 
                  (variable_or_function_call VAL 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call num$)))) ))) = 
                (expr 
                  (literal 2))))))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call NumPlayers) = 
          (expr 
            (variable_or_function_call VAL 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call num$)))) ))))) \n \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 8)) , 
          (expr 
            (literal 21)))) : 
      (statement 
        (print_statement PRINT 
          (print_argument 
            (expr 
              (literal "Skill level 
                (1 to 100)"))))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 9)) , 
          (expr 
            (literal 22)))) : 
      (statement 
        (print_statement PRINT 
          (print_argument 
            (expr 
              (literal "1   = Novice"))))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 10)) , 
          (expr 
            (literal 22)))) : 
      (statement 
        (print_statement PRINT 
          (print_argument 
            (expr 
              (literal "90  = Expert"))))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 11)) , 
          (expr 
            (literal 22)))) : 
      (statement 
        (print_statement PRINT 
          (print_argument 
            (expr 
              (literal "100 = Twiddle Fingers"))))) \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 12)) , 
          (expr 
            (literal 15)))) : 
      (statement 
        (print_statement PRINT 
          (print_argument 
            (expr 
              (literal "
                (Computer speed may affect your skill level)"))))) \n 
      (statement 
        (do_loop_statement DO 
          (block \n 
            (statement 
              (locate_statement LOCATE 
                (expr 
                  (literal 8)) , 
                (expr 
                  (literal 44)))) : 
            (statement 
              (print_statement PRINT 
                (print_argument 
                  (expr 
                    (variable_or_function_call SPACE$ 
                      ( 
                        (argument_list 
                          (argument 
                            (expr 
                              (literal 35)))) ))) ;))) \n 
            (statement 
              (locate_statement LOCATE 
                (expr 
                  (literal 8)) , 
                (expr 
                  (literal 43)))) \n 
            (statement 
              (input_statement INPUT 
                (variable_or_function_call gamespeed$))) \n) LOOP 
          (loop_condition UNTIL 
            (expr 
              (expr 
                (expr 
                  (variable_or_function_call VAL 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call gamespeed$)))) ))) >= 
                (expr 
                  (literal 1))) AND 
              (expr 
                (expr 
                  (variable_or_function_call VAL 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call gamespeed$)))) ))) <= 
                (expr 
                  (literal 100))))))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call speed) = 
          (expr 
            (variable_or_function_call VAL 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call gamespeed$)))) ))))) \n \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call speed) = 
          (expr 
            (expr 
              (expr 
                ( 
                  (expr 
                    (expr 
                      (literal 100)) - 
                    (expr 
                      (variable_or_function_call speed))) )) * 
              (expr 
                (literal 2))) + 
            (expr 
              (literal 1))))) \n \n 
      (statement 
        (do_loop_statement DO 
          (block \n 
            (statement 
              (locate_statement LOCATE 
                (expr 
                  (literal 15)) , 
                (expr 
                  (literal 56)))) : 
            (statement 
              (print_statement PRINT 
                (print_argument 
                  (expr 
                    (variable_or_function_call SPACE$ 
                      ( 
                        (argument_list 
                          (argument 
                            (expr 
                              (literal 25)))) ))) ;))) \n 
            (statement 
              (locate_statement LOCATE 
                (expr 
                  (literal 15)) , 
                (expr 
                  (literal 15)))) \n 
            (statement 
              (input_statement INPUT "Increase game speed during play 
                (Y or N)" ; 
                (variable_or_function_call diff$))) \n 
            (statement 
              (assignment_statement 
                (variable_or_function_call diff$) = 
                (expr 
                  (variable_or_function_call UCASE$ 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call diff$)))) ))))) \n) LOOP 
          (loop_condition UNTIL 
            (expr 
              (expr 
                (expr 
                  (variable_or_function_call diff$)) = 
                (expr 
                  (literal "Y"))) OR 
              (expr 
                (expr 
                  (variable_or_function_call diff$)) = 
                (expr 
                  (literal "N"))))))) \n \n 
      (statement 
        (do_loop_statement DO 
          (block \n 
            (statement 
              (locate_statement LOCATE 
                (expr 
                  (literal 17)) , 
                (expr 
                  (literal 46)))) : 
            (statement 
              (print_statement PRINT 
                (print_argument 
                  (expr 
                    (variable_or_function_call SPACE$ 
                      ( 
                        (argument_list 
                          (argument 
                            (expr 
                              (literal 34)))) ))) ;))) \n 
            (statement 
              (locate_statement LOCATE 
                (expr 
                  (literal 17)) , 
                (expr 
                  (literal 17)))) \n 
            (statement 
              (input_statement INPUT "Monochrome or color monitor 
                (M or C)" ; 
                (variable_or_function_call monitor$))) \n 
            (statement 
              (assignment_statement 
                (variable_or_function_call monitor$) = 
                (expr 
                  (variable_or_function_call UCASE$ 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call monitor$)))) ))))) \n) LOOP 
          (loop_condition UNTIL 
            (expr 
              (expr 
                (expr 
                  (variable_or_function_call monitor$)) = 
                (expr 
                  (literal "M"))) OR 
              (expr 
                (expr 
                  (variable_or_function_call monitor$)) = 
                (expr 
                  (literal "C"))))))) \n \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call startTime#) = 
          (expr 
            (builtin_function 
              (timer_function TIMER))))) ' \n 
      (statement 
        (for_next_statement FOR i# = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 1000)) 
          (block :) NEXT i#)) ' \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call stopTime#) = 
          (expr 
            (builtin_function 
              (timer_function TIMER))))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call speed) = 
          (expr 
            (expr 
              (expr 
                (variable_or_function_call speed)) * 
              (expr 
                (literal .5))) / 
            (expr 
              ( 
                (expr 
                  (expr 
                    (variable_or_function_call stopTime#)) - 
                  (expr 
                    (variable_or_function_call startTime#))) ))))) \n \n) 
    (end_sub_statement END SUB)) \n \n ' \n ' \n 
  (sub_statement SUB 
    (untyped_id InitColors) 
    (block \n \n 
      (statement 
        (for_next_statement FOR row = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 50)) 
          (block \n 
            (statement 
              (for_next_statement FOR col = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (literal 80)) 
                (block \n 
                  (statement 
                    (assignment_statement 
                      (variable_or_function_call arena 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (variable_or_function_call row))) , 
                            (argument 
                              (expr 
                                (variable_or_function_call col)))) ) . acolor) = 
                      (expr 
                        (variable_or_function_call colorTable 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (literal 4)))) ))))) \n) NEXT col)) \n) NEXT row)) \n \n 
      (statement 
        (call_statement 
          (untyped_id CLS))) \n \n ' \n 
      (statement 
        (for_next_statement FOR col = 
          (expr 
            (literal 1)) TO 
          (expr 
            (literal 80)) 
          (block \n 
            (statement 
              (call_statement 
                (untyped_id Set) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 3))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call col))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call colorTable 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (literal 3)))) ))))))) \n 
            (statement 
              (call_statement 
                (untyped_id Set) 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 50))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call col))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call colorTable 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (literal 3)))) ))))))) \n) NEXT col)) \n \n 
      (statement 
        (for_next_statement FOR row = 
          (expr 
            (literal 4)) TO 
          (expr 
            (literal 49)) 
          (block \n 
            (statement 
              (call_statement 
                (untyped_id Set) 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call row))) , 
                  (argument 
                    (expr 
                      (literal 1))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call colorTable 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (literal 3)))) ))))))) \n 
            (statement 
              (call_statement 
                (untyped_id Set) 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call row))) , 
                  (argument 
                    (expr 
                      (literal 80))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call colorTable 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (literal 3)))) ))))))) \n) NEXT row)) \n \n) 
    (end_sub_statement END SUB)) \n \n ' \n ' \n 
  (sub_statement SUB 
    (untyped_id Intro) 
    (block \n 
      (statement 
        (screen_statement SCREEN 
          (expr 
            (literal 0)))) \n 
      (statement 
        (width_statement WIDTH 
          (expr 
            (literal 80)) , 
          (expr 
            (literal 25)))) \n 
      (statement 
        (color_statement COLOR 
          (expr 
            (literal 15)) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (call_statement 
          (untyped_id CLS))) \n \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 4))) , 
            (argument 
              (expr 
                (literal "Q B a s i c   N i b b l e s")))))) \n 
      (statement 
        (color_statement COLOR 
          (expr 
            (literal 7)))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 6))) , 
            (argument 
              (expr 
                (literal "Copyright 
                  (C) Microsoft Corporation 1990")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 8))) , 
            (argument 
              (expr 
                (literal "Nibbles is a game for one or two players.  Navigate your snakes")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 9))) , 
            (argument 
              (expr 
                (literal "around the game board trying to eat up numbers while avoiding")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 10))) , 
            (argument 
              (expr 
                (literal "running into walls or other snakes.  The more numbers you eat up,")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 11))) , 
            (argument 
              (expr 
                (literal "the more points you gain and the longer your snake becomes.")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 13))) , 
            (argument 
              (expr 
                (literal " Game Controls ")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 15))) , 
            (argument 
              (expr 
                (literal "  General             Player 1               Player 2    ")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 16))) , 
            (argument 
              (expr 
                (literal "                        
                  (Up)                   
                  (Up)      ")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 17))) , 
            (argument 
              (expr 
                (expr 
                  (expr 
                    (literal "P - Pause                ")) + 
                  (expr 
                    (variable_or_function_call CHR$ 
                      ( 
                        (argument_list 
                          (argument 
                            (expr 
                              (literal 24)))) )))) + 
                (expr 
                  (literal "                      W       "))))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 18))) , 
            (argument 
              (expr 
                (expr 
                  (expr 
                    (expr 
                      (expr 
                        (literal "                     
                          (Left) ")) + 
                      (expr 
                        (variable_or_function_call CHR$ 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (literal 27)))) )))) + 
                    (expr 
                      (literal "   "))) + 
                  (expr 
                    (variable_or_function_call CHR$ 
                      ( 
                        (argument_list 
                          (argument 
                            (expr 
                              (literal 26)))) )))) + 
                (expr 
                  (literal " 
                    (Right)   
                    (Left) A   D 
                    (Right)  "))))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 19))) , 
            (argument 
              (expr 
                (expr 
                  (expr 
                    (literal "                         ")) + 
                  (expr 
                    (variable_or_function_call CHR$ 
                      ( 
                        (argument_list 
                          (argument 
                            (expr 
                              (literal 25)))) )))) + 
                (expr 
                  (literal "                      S       "))))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 20))) , 
            (argument 
              (expr 
                (literal "                       
                  (Down)                 
                  (Down)     ")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 24))) , 
            (argument 
              (expr 
                (literal "Press any key to continue")))))) \n \n 
      (statement 
        (play_statement PLAY 
          (expr 
            (literal "MBT160O1L8CDEDCDL4ECC")))) \n 
      (statement 
        (call_statement 
          (untyped_id SparklePause))) \n \n) 
    (end_sub_statement END SUB)) \n \n ' \n ' \n 
  (sub_statement SUB 
    (untyped_id Level) 
    ( 
      (parameter_list 
        (parameter WhatToDO) , 
        (parameter 
          (untyped_id sammy) 
          (array_declaration 
            ( )) AS 
          (type_name_for_parameter 
            (untyped_id snaketype)))) ) STATIC 
    (block \n \n 
      (statement 
        (select_case_statement SELECT CASE 
          (expr 
            ( 
              (expr 
                (variable_or_function_call WhatToDO)) )) 
          (before_first_case \n \n) 
          (case_block 
            (case_statement CASE 
              (case_expr 
                (expr 
                  (variable_or_function_call STARTOVER)))) 
            (block \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call curLevel) = 
                  (expr 
                    (literal 1)))) \n)) 
          (case_block 
            (case_statement CASE 
              (case_expr 
                (expr 
                  (variable_or_function_call NEXTLEVEL)))) 
            (block \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call curLevel) = 
                  (expr 
                    (expr 
                      (variable_or_function_call curLevel)) + 
                    (expr 
                      (literal 1))))) \n)) 
          (end_select_statement END SELECT))) \n \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call sammy 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 1)))) ) . head) = 
          (expr 
            (literal 1)))) ' \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call sammy 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 1)))) ) . length) = 
          (expr 
            (literal 2)))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call sammy 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 1)))) ) . alive) = 
          (expr 
            (variable_or_function_call TRUE)))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call sammy 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 2)))) ) . head) = 
          (expr 
            (literal 1)))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call sammy 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 2)))) ) . length) = 
          (expr 
            (literal 2)))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call sammy 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 2)))) ) . alive) = 
          (expr 
            (variable_or_function_call TRUE)))) \n \n 
      (statement 
        (call_statement 
          (untyped_id InitColors))) \n \n 
      (statement 
        (select_case_statement SELECT CASE 
          (expr 
            (variable_or_function_call curLevel)) 
          (before_first_case \n) 
          (case_block 
            (case_statement CASE 
              (case_expr 
                (expr 
                  (literal 1)))) 
            (block \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . row) = 
                  (expr 
                    (literal 25)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . row) = 
                  (expr 
                    (literal 25)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . col) = 
                  (expr 
                    (literal 50)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . col) = 
                  (expr 
                    (literal 30)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . direction) = 
                  (expr 
                    (literal 4)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . direction) = 
                  (expr 
                    (literal 3)))) \n \n \n)) 
          (case_block 
            (case_statement CASE 
              (case_expr 
                (expr 
                  (literal 2)))) 
            (block \n 
              (statement 
                (for_next_statement FOR i = 
                  (expr 
                    (literal 20)) TO 
                  (expr 
                    (literal 60)) 
                  (block \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (literal 25))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n) NEXT i)) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . row) = 
                  (expr 
                    (literal 7)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . row) = 
                  (expr 
                    (literal 43)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . col) = 
                  (expr 
                    (literal 60)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . col) = 
                  (expr 
                    (literal 20)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . direction) = 
                  (expr 
                    (literal 3)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . direction) = 
                  (expr 
                    (literal 4)))) \n \n)) 
          (case_block 
            (case_statement CASE 
              (case_expr 
                (expr 
                  (literal 3)))) 
            (block \n 
              (statement 
                (for_next_statement FOR i = 
                  (expr 
                    (literal 10)) TO 
                  (expr 
                    (literal 40)) 
                  (block \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (literal 20))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (literal 60))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n) NEXT i)) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . row) = 
                  (expr 
                    (literal 25)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . row) = 
                  (expr 
                    (literal 25)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . col) = 
                  (expr 
                    (literal 50)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . col) = 
                  (expr 
                    (literal 30)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . direction) = 
                  (expr 
                    (literal 1)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . direction) = 
                  (expr 
                    (literal 2)))) \n \n)) 
          (case_block 
            (case_statement CASE 
              (case_expr 
                (expr 
                  (literal 4)))) 
            (block \n 
              (statement 
                (for_next_statement FOR i = 
                  (expr 
                    (literal 4)) TO 
                  (expr 
                    (literal 30)) 
                  (block \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (literal 20))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (expr 
                                (literal 53)) - 
                              (expr 
                                (variable_or_function_call i)))) , 
                          (argument 
                            (expr 
                              (literal 60))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n) NEXT i)) \n 
              (statement 
                (for_next_statement FOR i = 
                  (expr 
                    (literal 2)) TO 
                  (expr 
                    (literal 40)) 
                  (block \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (literal 38))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (literal 15))) , 
                          (argument 
                            (expr 
                              (expr 
                                (literal 81)) - 
                              (expr 
                                (variable_or_function_call i)))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n) NEXT i)) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . row) = 
                  (expr 
                    (literal 7)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . row) = 
                  (expr 
                    (literal 43)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . col) = 
                  (expr 
                    (literal 60)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . col) = 
                  (expr 
                    (literal 20)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . direction) = 
                  (expr 
                    (literal 3)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . direction) = 
                  (expr 
                    (literal 4)))) \n \n)) 
          (case_block 
            (case_statement CASE 
              (case_expr 
                (expr 
                  (literal 5)))) 
            (block \n 
              (statement 
                (for_next_statement FOR i = 
                  (expr 
                    (literal 13)) TO 
                  (expr 
                    (literal 39)) 
                  (block \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (literal 21))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (literal 59))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n) NEXT i)) \n 
              (statement 
                (for_next_statement FOR i = 
                  (expr 
                    (literal 23)) TO 
                  (expr 
                    (literal 57)) 
                  (block \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (literal 11))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (literal 41))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n) NEXT i)) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . row) = 
                  (expr 
                    (literal 25)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . row) = 
                  (expr 
                    (literal 25)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . col) = 
                  (expr 
                    (literal 50)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . col) = 
                  (expr 
                    (literal 30)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . direction) = 
                  (expr 
                    (literal 1)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . direction) = 
                  (expr 
                    (literal 2)))) \n \n)) 
          (case_block 
            (case_statement CASE 
              (case_expr 
                (expr 
                  (literal 6)))) 
            (block \n 
              (statement 
                (for_next_statement FOR i = 
                  (expr 
                    (literal 4)) TO 
                  (expr 
                    (literal 49)) 
                  (block \n 
                    (if_block_statement IF 
                      (expr 
                        (expr 
                          (expr 
                            (variable_or_function_call i)) > 
                          (expr 
                            (literal 30))) OR 
                        (expr 
                          (expr 
                            (variable_or_function_call i)) < 
                          (expr 
                            (literal 23)))) THEN \n 
                      (then_block 
                        (statement 
                          (call_statement 
                            (untyped_id Set) 
                            (argument_list 
                              (argument 
                                (expr 
                                  (variable_or_function_call i))) , 
                              (argument 
                                (expr 
                                  (literal 10))) , 
                              (argument 
                                (expr 
                                  (variable_or_function_call colorTable 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 3)))) ))))))) \n 
                        (statement 
                          (call_statement 
                            (untyped_id Set) 
                            (argument_list 
                              (argument 
                                (expr 
                                  (variable_or_function_call i))) , 
                              (argument 
                                (expr 
                                  (literal 20))) , 
                              (argument 
                                (expr 
                                  (variable_or_function_call colorTable 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 3)))) ))))))) \n 
                        (statement 
                          (call_statement 
                            (untyped_id Set) 
                            (argument_list 
                              (argument 
                                (expr 
                                  (variable_or_function_call i))) , 
                              (argument 
                                (expr 
                                  (literal 30))) , 
                              (argument 
                                (expr 
                                  (variable_or_function_call colorTable 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 3)))) ))))))) \n 
                        (statement 
                          (call_statement 
                            (untyped_id Set) 
                            (argument_list 
                              (argument 
                                (expr 
                                  (variable_or_function_call i))) , 
                              (argument 
                                (expr 
                                  (literal 40))) , 
                              (argument 
                                (expr 
                                  (variable_or_function_call colorTable 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 3)))) ))))))) \n 
                        (statement 
                          (call_statement 
                            (untyped_id Set) 
                            (argument_list 
                              (argument 
                                (expr 
                                  (variable_or_function_call i))) , 
                              (argument 
                                (expr 
                                  (literal 50))) , 
                              (argument 
                                (expr 
                                  (variable_or_function_call colorTable 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 3)))) ))))))) \n 
                        (statement 
                          (call_statement 
                            (untyped_id Set) 
                            (argument_list 
                              (argument 
                                (expr 
                                  (variable_or_function_call i))) , 
                              (argument 
                                (expr 
                                  (literal 60))) , 
                              (argument 
                                (expr 
                                  (variable_or_function_call colorTable 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 3)))) ))))))) \n 
                        (statement 
                          (call_statement 
                            (untyped_id Set) 
                            (argument_list 
                              (argument 
                                (expr 
                                  (variable_or_function_call i))) , 
                              (argument 
                                (expr 
                                  (literal 70))) , 
                              (argument 
                                (expr 
                                  (variable_or_function_call colorTable 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 3)))) ))))))) \n) 
                      (end_if_statement END IF)) \n) NEXT i)) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . row) = 
                  (expr 
                    (literal 7)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . row) = 
                  (expr 
                    (literal 43)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . col) = 
                  (expr 
                    (literal 65)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . col) = 
                  (expr 
                    (literal 15)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . direction) = 
                  (expr 
                    (literal 2)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . direction) = 
                  (expr 
                    (literal 1)))) \n \n)) 
          (case_block 
            (case_statement CASE 
              (case_expr 
                (expr 
                  (literal 7)))) 
            (block \n 
              (statement 
                (for_next_statement FOR i = 
                  (expr 
                    (literal 4)) TO 
                  (expr 
                    (literal 49)) STEP 
                  (expr 
                    (literal 2)) 
                  (block \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (literal 40))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n) NEXT i)) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . row) = 
                  (expr 
                    (literal 7)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . row) = 
                  (expr 
                    (literal 43)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . col) = 
                  (expr 
                    (literal 65)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . col) = 
                  (expr 
                    (literal 15)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . direction) = 
                  (expr 
                    (literal 2)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . direction) = 
                  (expr 
                    (literal 1)))) \n \n)) 
          (case_block 
            (case_statement CASE 
              (case_expr 
                (expr 
                  (literal 8)))) 
            (block \n 
              (statement 
                (for_next_statement FOR i = 
                  (expr 
                    (literal 4)) TO 
                  (expr 
                    (literal 40)) 
                  (block \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (literal 10))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (expr 
                                (literal 53)) - 
                              (expr 
                                (variable_or_function_call i)))) , 
                          (argument 
                            (expr 
                              (literal 20))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (literal 30))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (expr 
                                (literal 53)) - 
                              (expr 
                                (variable_or_function_call i)))) , 
                          (argument 
                            (expr 
                              (literal 40))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (literal 50))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (expr 
                                (literal 53)) - 
                              (expr 
                                (variable_or_function_call i)))) , 
                          (argument 
                            (expr 
                              (literal 60))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (literal 70))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n) NEXT i)) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . row) = 
                  (expr 
                    (literal 7)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . row) = 
                  (expr 
                    (literal 43)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . col) = 
                  (expr 
                    (literal 65)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . col) = 
                  (expr 
                    (literal 15)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . direction) = 
                  (expr 
                    (literal 2)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . direction) = 
                  (expr 
                    (literal 1)))) \n \n)) 
          (case_block 
            (case_statement CASE 
              (case_expr 
                (expr 
                  (literal 9)))) 
            (block \n 
              (statement 
                (for_next_statement FOR i = 
                  (expr 
                    (literal 6)) TO 
                  (expr 
                    (literal 47)) 
                  (block \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (expr 
                                (variable_or_function_call i)) + 
                              (expr 
                                (literal 28)))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n) NEXT i)) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . row) = 
                  (expr 
                    (literal 40)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . row) = 
                  (expr 
                    (literal 15)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . col) = 
                  (expr 
                    (literal 75)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . col) = 
                  (expr 
                    (literal 5)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . direction) = 
                  (expr 
                    (literal 1)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . direction) = 
                  (expr 
                    (literal 2)))) \n \n)) 
          (case_block 
            (case_statement CASE ELSE) 
            (block \n 
              (statement 
                (for_next_statement FOR i = 
                  (expr 
                    (literal 4)) TO 
                  (expr 
                    (literal 49)) STEP 
                  (expr 
                    (literal 2)) 
                  (block \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (literal 10))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (expr 
                                (variable_or_function_call i)) + 
                              (expr 
                                (literal 1)))) , 
                          (argument 
                            (expr 
                              (literal 20))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (literal 30))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (expr 
                                (variable_or_function_call i)) + 
                              (expr 
                                (literal 1)))) , 
                          (argument 
                            (expr 
                              (literal 40))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (literal 50))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (expr 
                                (variable_or_function_call i)) + 
                              (expr 
                                (literal 1)))) , 
                          (argument 
                            (expr 
                              (literal 60))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n 
                    (statement 
                      (call_statement 
                        (untyped_id Set) 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call i))) , 
                          (argument 
                            (expr 
                              (literal 70))) , 
                          (argument 
                            (expr 
                              (variable_or_function_call colorTable 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (literal 3)))) ))))))) \n) NEXT i)) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . row) = 
                  (expr 
                    (literal 7)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . row) = 
                  (expr 
                    (literal 43)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . col) = 
                  (expr 
                    (literal 65)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . col) = 
                  (expr 
                    (literal 15)))) \n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . direction) = 
                  (expr 
                    (literal 2)))) : 
              (statement 
                (assignment_statement 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . direction) = 
                  (expr 
                    (literal 1)))) \n \n)) 
          (end_select_statement END SELECT))) \n) 
    (end_sub_statement END SUB)) \n \n ' \n ' \n 
  (sub_statement SUB 
    (untyped_id PlayNibbles) 
    ( 
      (parameter_list 
        (parameter NumPlayers) , 
        (parameter speed) , 
        (parameter diff$)) ) 
    (block \n \n ' \n 
      (statement 
        (dim_statement DIM 
          (dim_variable 
            (untyped_id sammyBody) 
            (dim_array_bounds 
              ( 
                (dim_subscript 
                  (expr 
                    (expr 
                      (variable_or_function_call MAXSNAKELENGTH)) - 
                    (expr 
                      (literal 1)))) , 
                (dim_subscript 
                  (expr 
                    (literal 1)) TO 
                  (expr 
                    (literal 2))) )) AS 
            (type_name 
              (untyped_id snakeBody))))) \n 
      (statement 
        (dim_statement DIM 
          (dim_variable 
            (untyped_id sammy) 
            (dim_array_bounds 
              ( 
                (dim_subscript 
                  (expr 
                    (literal 1)) TO 
                  (expr 
                    (literal 2))) )) AS 
            (type_name 
              (untyped_id snaketype))))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call sammy 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 1)))) ) . lives) = 
          (expr 
            (literal 5)))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call sammy 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 1)))) ) . score) = 
          (expr 
            (literal 0)))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call sammy 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 1)))) ) . scolor) = 
          (expr 
            (variable_or_function_call colorTable 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 1)))) ))))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call sammy 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 2)))) ) . lives) = 
          (expr 
            (literal 5)))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call sammy 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 2)))) ) . score) = 
          (expr 
            (literal 0)))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call sammy 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 2)))) ) . scolor) = 
          (expr 
            (variable_or_function_call colorTable 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 2)))) ))))) \n \n 
      (statement 
        (call_statement 
          (untyped_id Level) 
          (argument_list 
            (argument 
              (expr 
                (variable_or_function_call STARTOVER))) , 
            (argument sammy 
              ( ))))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call startRow1) = 
          (expr 
            (variable_or_function_call sammy 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 1)))) ) . row)))) : 
      (statement 
        (assignment_statement 
          (variable_or_function_call startCol1) = 
          (expr 
            (variable_or_function_call sammy 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 1)))) ) . col)))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call startRow2) = 
          (expr 
            (variable_or_function_call sammy 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 2)))) ) . row)))) : 
      (statement 
        (assignment_statement 
          (variable_or_function_call startCol2) = 
          (expr 
            (variable_or_function_call sammy 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 2)))) ) . col)))) \n \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call curSpeed) = 
          (expr 
            (variable_or_function_call speed)))) \n \n ' \n \n 
      (statement 
        (call_statement 
          (untyped_id SpacePause) 
          (argument_list 
            (argument 
              (expr 
                (expr 
                  (expr 
                    (literal "     Level")) + 
                  (expr 
                    (variable_or_function_call STR$ 
                      ( 
                        (argument_list 
                          (argument 
                            (expr 
                              (variable_or_function_call curLevel)))) )))) + 
                (expr 
                  (literal ",  Push Space"))))))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call gameOver) = 
          (expr 
            (variable_or_function_call FALSE)))) \n 
      (statement 
        (do_loop_statement DO 
          (block \n 
            (if_block_statement IF 
              (expr 
                (expr 
                  (variable_or_function_call NumPlayers)) = 
                (expr 
                  (literal 1))) THEN \n 
              (then_block 
                (statement 
                  (assignment_statement 
                    (variable_or_function_call sammy 
                      ( 
                        (argument_list 
                          (argument 
                            (expr 
                              (literal 2)))) ) . row) = 
                    (expr 
                      (literal 0)))) \n) 
              (end_if_statement END IF)) \n \n 
            (statement 
              (assignment_statement 
                (variable_or_function_call number) = 
                (expr 
                  (literal 1)))) ' \n 
            (statement 
              (assignment_statement 
                (variable_or_function_call nonum) = 
                (expr 
                  (variable_or_function_call TRUE)))) ' \n \n 
            (statement 
              (assignment_statement 
                (variable_or_function_call playerDied) = 
                (expr 
                  (variable_or_function_call FALSE)))) \n 
            (statement 
              (call_statement 
                (untyped_id PrintScore) 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call NumPlayers))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call sammy 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (literal 1)))) ) . score))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call sammy 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (literal 2)))) ) . score))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call sammy 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (literal 1)))) ) . lives))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call sammy 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (literal 2)))) ) . lives)))))) \n 
            (statement 
              (play_statement PLAY 
                (expr 
                  (literal "T160O1>L20CDEDCDL10ECC")))) \n \n 
            (statement 
              (do_loop_statement DO 
                (block \n ' \n 
                  (if_block_statement IF 
                    (expr 
                      (expr 
                        (variable_or_function_call nonum)) = 
                      (expr 
                        (variable_or_function_call TRUE))) THEN \n 
                    (then_block 
                      (statement 
                        (do_loop_statement DO 
                          (block \n 
                            (statement 
                              (assignment_statement 
                                (variable_or_function_call numberRow) = 
                                (expr 
                                  (variable_or_function_call INT 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (expr 
                                              (expr 
                                                (variable_or_function_call RND 
                                                  ( 
                                                    (argument_list 
                                                      (argument 
                                                        (expr 
                                                          (literal 1)))) ))) * 
                                              (expr 
                                                (literal 47))) + 
                                            (expr 
                                              (literal 3))))) ))))) \n 
                            (statement 
                              (assignment_statement 
                                (variable_or_function_call NumberCol) = 
                                (expr 
                                  (variable_or_function_call INT 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (expr 
                                              (expr 
                                                (variable_or_function_call RND 
                                                  ( 
                                                    (argument_list 
                                                      (argument 
                                                        (expr 
                                                          (literal 1)))) ))) * 
                                              (expr 
                                                (literal 78))) + 
                                            (expr 
                                              (literal 2))))) ))))) \n 
                            (statement 
                              (assignment_statement 
                                (variable_or_function_call sisterRow) = 
                                (expr 
                                  (expr 
                                    (variable_or_function_call numberRow)) + 
                                  (expr 
                                    (variable_or_function_call arena 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (variable_or_function_call numberRow))) , 
                                          (argument 
                                            (expr 
                                              (variable_or_function_call NumberCol)))) ) . sister))))) \n) LOOP 
                          (loop_condition UNTIL 
                            (expr 
                              (expr NOT 
                                (expr 
                                  (variable_or_function_call PointIsThere 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call numberRow))) , 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call NumberCol))) , 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call colorTable 
                                              ( 
                                                (argument_list 
                                                  (argument 
                                                    (expr 
                                                      (literal 4)))) ))))) )))) AND 
                              (expr NOT 
                                (expr 
                                  (variable_or_function_call PointIsThere 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call sisterRow))) , 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call NumberCol))) , 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call colorTable 
                                              ( 
                                                (argument_list 
                                                  (argument 
                                                    (expr 
                                                      (literal 4)))) ))))) )))))))) \n 
                      (statement 
                        (assignment_statement 
                          (variable_or_function_call numberRow) = 
                          (expr 
                            (variable_or_function_call arena 
                              ( 
                                (argument_list 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call numberRow))) , 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call NumberCol)))) ) . realRow)))) \n 
                      (statement 
                        (assignment_statement 
                          (variable_or_function_call nonum) = 
                          (expr 
                            (variable_or_function_call FALSE)))) \n 
                      (statement 
                        (color_statement COLOR 
                          (expr 
                            (variable_or_function_call colorTable 
                              ( 
                                (argument_list 
                                  (argument 
                                    (expr 
                                      (literal 1)))) ))) , 
                          (expr 
                            (variable_or_function_call colorTable 
                              ( 
                                (argument_list 
                                  (argument 
                                    (expr 
                                      (literal 4)))) ))))) \n 
                      (statement 
                        (locate_statement LOCATE 
                          (expr 
                            (variable_or_function_call numberRow)) , 
                          (expr 
                            (variable_or_function_call NumberCol)))) \n 
                      (statement 
                        (print_statement PRINT 
                          (print_argument 
                            (expr 
                              (variable_or_function_call RIGHT$ 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call STR$ 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (variable_or_function_call number)))) )))) , 
                                    (argument 
                                      (expr 
                                        (literal 1)))) ))) ;))) \n 
                      (statement 
                        (assignment_statement 
                          (variable_or_function_call count) = 
                          (expr 
                            (literal 0)))) \n) 
                    (end_if_statement END IF)) \n \n ' \n 
                  (statement 
                    (for_next_statement FOR a# = 
                      (expr 
                        (literal 1)) TO 
                      (expr 
                        (variable_or_function_call curSpeed)) 
                      (block :) NEXT a#)) \n \n ' \n 
                  (statement 
                    (assignment_statement 
                      (variable_or_function_call kbd$) = 
                      (expr 
                        (variable_or_function_call INKEY$)))) \n 
                  (statement 
                    (select_case_statement SELECT CASE 
                      (expr 
                        (variable_or_function_call kbd$)) 
                      (before_first_case \n) 
                      (case_block 
                        (case_statement CASE 
                          (case_expr 
                            (expr 
                              (literal "w"))) , 
                          (case_expr 
                            (expr 
                              (literal "W")))) 
                        (block : 
                          (statement 
                            (if_inline_statement IF 
                              (expr 
                                (expr 
                                  (variable_or_function_call sammy 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 2)))) ) . direction)) <> 
                                (expr 
                                  (literal 2))) THEN 
                              (if_inline_action 
                                (statement 
                                  (assignment_statement 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (literal 2)))) ) . direction) = 
                                    (expr 
                                      (literal 1))))))) \n)) 
                      (case_block 
                        (case_statement CASE 
                          (case_expr 
                            (expr 
                              (literal "s"))) , 
                          (case_expr 
                            (expr 
                              (literal "S")))) 
                        (block : 
                          (statement 
                            (if_inline_statement IF 
                              (expr 
                                (expr 
                                  (variable_or_function_call sammy 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 2)))) ) . direction)) <> 
                                (expr 
                                  (literal 1))) THEN 
                              (if_inline_action 
                                (statement 
                                  (assignment_statement 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (literal 2)))) ) . direction) = 
                                    (expr 
                                      (literal 2))))))) \n)) 
                      (case_block 
                        (case_statement CASE 
                          (case_expr 
                            (expr 
                              (literal "a"))) , 
                          (case_expr 
                            (expr 
                              (literal "A")))) 
                        (block : 
                          (statement 
                            (if_inline_statement IF 
                              (expr 
                                (expr 
                                  (variable_or_function_call sammy 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 2)))) ) . direction)) <> 
                                (expr 
                                  (literal 4))) THEN 
                              (if_inline_action 
                                (statement 
                                  (assignment_statement 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (literal 2)))) ) . direction) = 
                                    (expr 
                                      (literal 3))))))) \n)) 
                      (case_block 
                        (case_statement CASE 
                          (case_expr 
                            (expr 
                              (literal "d"))) , 
                          (case_expr 
                            (expr 
                              (literal "D")))) 
                        (block : 
                          (statement 
                            (if_inline_statement IF 
                              (expr 
                                (expr 
                                  (variable_or_function_call sammy 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 2)))) ) . direction)) <> 
                                (expr 
                                  (literal 3))) THEN 
                              (if_inline_action 
                                (statement 
                                  (assignment_statement 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (literal 2)))) ) . direction) = 
                                    (expr 
                                      (literal 4))))))) \n)) 
                      (case_block 
                        (case_statement CASE 
                          (case_expr 
                            (expr 
                              (expr 
                                (variable_or_function_call CHR$ 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (literal 0)))) ))) + 
                              (expr 
                                (literal "H"))))) 
                        (block : 
                          (statement 
                            (if_inline_statement IF 
                              (expr 
                                (expr 
                                  (variable_or_function_call sammy 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 1)))) ) . direction)) <> 
                                (expr 
                                  (literal 2))) THEN 
                              (if_inline_action 
                                (statement 
                                  (assignment_statement 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (literal 1)))) ) . direction) = 
                                    (expr 
                                      (literal 1))))))) \n)) 
                      (case_block 
                        (case_statement CASE 
                          (case_expr 
                            (expr 
                              (expr 
                                (variable_or_function_call CHR$ 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (literal 0)))) ))) + 
                              (expr 
                                (literal "P"))))) 
                        (block : 
                          (statement 
                            (if_inline_statement IF 
                              (expr 
                                (expr 
                                  (variable_or_function_call sammy 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 1)))) ) . direction)) <> 
                                (expr 
                                  (literal 1))) THEN 
                              (if_inline_action 
                                (statement 
                                  (assignment_statement 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (literal 1)))) ) . direction) = 
                                    (expr 
                                      (literal 2))))))) \n)) 
                      (case_block 
                        (case_statement CASE 
                          (case_expr 
                            (expr 
                              (expr 
                                (variable_or_function_call CHR$ 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (literal 0)))) ))) + 
                              (expr 
                                (literal "K"))))) 
                        (block : 
                          (statement 
                            (if_inline_statement IF 
                              (expr 
                                (expr 
                                  (variable_or_function_call sammy 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 1)))) ) . direction)) <> 
                                (expr 
                                  (literal 4))) THEN 
                              (if_inline_action 
                                (statement 
                                  (assignment_statement 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (literal 1)))) ) . direction) = 
                                    (expr 
                                      (literal 3))))))) \n)) 
                      (case_block 
                        (case_statement CASE 
                          (case_expr 
                            (expr 
                              (expr 
                                (variable_or_function_call CHR$ 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (literal 0)))) ))) + 
                              (expr 
                                (literal "M"))))) 
                        (block : 
                          (statement 
                            (if_inline_statement IF 
                              (expr 
                                (expr 
                                  (variable_or_function_call sammy 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 1)))) ) . direction)) <> 
                                (expr 
                                  (literal 3))) THEN 
                              (if_inline_action 
                                (statement 
                                  (assignment_statement 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (literal 1)))) ) . direction) = 
                                    (expr 
                                      (literal 4))))))) \n)) 
                      (case_block 
                        (case_statement CASE 
                          (case_expr 
                            (expr 
                              (literal "p"))) , 
                          (case_expr 
                            (expr 
                              (literal "P")))) 
                        (block : 
                          (statement 
                            (call_statement 
                              (untyped_id SpacePause) 
                              (argument_list 
                                (argument 
                                  (expr 
                                    (literal " Game Paused ... Push Space  ")))))) \n)) 
                      (case_block 
                        (case_statement CASE ELSE) 
                        (block \n)) 
                      (end_select_statement END SELECT))) \n \n 
                  (statement 
                    (for_next_statement FOR a = 
                      (expr 
                        (literal 1)) TO 
                      (expr 
                        (variable_or_function_call NumPlayers)) 
                      (block \n ' \n 
                        (statement 
                          (select_case_statement SELECT CASE 
                            (expr 
                              (variable_or_function_call sammy 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call a)))) ) . direction)) 
                            (before_first_case \n) 
                            (case_block 
                              (case_statement CASE 
                                (case_expr 
                                  (expr 
                                    (literal 1)))) 
                              (block : 
                                (statement 
                                  (assignment_statement 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (variable_or_function_call a)))) ) . row) = 
                                    (expr 
                                      (expr 
                                        (variable_or_function_call sammy 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (variable_or_function_call a)))) ) . row)) - 
                                      (expr 
                                        (literal 1))))) \n)) 
                            (case_block 
                              (case_statement CASE 
                                (case_expr 
                                  (expr 
                                    (literal 2)))) 
                              (block : 
                                (statement 
                                  (assignment_statement 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (variable_or_function_call a)))) ) . row) = 
                                    (expr 
                                      (expr 
                                        (variable_or_function_call sammy 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (variable_or_function_call a)))) ) . row)) + 
                                      (expr 
                                        (literal 1))))) \n)) 
                            (case_block 
                              (case_statement CASE 
                                (case_expr 
                                  (expr 
                                    (literal 3)))) 
                              (block : 
                                (statement 
                                  (assignment_statement 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (variable_or_function_call a)))) ) . col) = 
                                    (expr 
                                      (expr 
                                        (variable_or_function_call sammy 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (variable_or_function_call a)))) ) . col)) - 
                                      (expr 
                                        (literal 1))))) \n)) 
                            (case_block 
                              (case_statement CASE 
                                (case_expr 
                                  (expr 
                                    (literal 4)))) 
                              (block : 
                                (statement 
                                  (assignment_statement 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (variable_or_function_call a)))) ) . col) = 
                                    (expr 
                                      (expr 
                                        (variable_or_function_call sammy 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (variable_or_function_call a)))) ) . col)) + 
                                      (expr 
                                        (literal 1))))) \n)) 
                            (end_select_statement END SELECT))) \n \n ' \n 
                        (if_block_statement IF 
                          (expr 
                            (expr 
                              (expr 
                                (variable_or_function_call numberRow)) = 
                              (expr 
                                (variable_or_function_call INT 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (expr 
                                            ( 
                                              (expr 
                                                (expr 
                                                  (variable_or_function_call sammy 
                                                    ( 
                                                      (argument_list 
                                                        (argument 
                                                          (expr 
                                                            (variable_or_function_call a)))) ) . row)) + 
                                                (expr 
                                                  (literal 1))) )) / 
                                          (expr 
                                            (literal 2))))) )))) AND 
                            (expr 
                              (expr 
                                (variable_or_function_call NumberCol)) = 
                              (expr 
                                (variable_or_function_call sammy 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call a)))) ) . col)))) THEN \n 
                          (then_block 
                            (statement 
                              (play_statement PLAY 
                                (expr 
                                  (literal "MBO0L16>CCCE")))) \n 
                            (if_block_statement IF 
                              (expr 
                                (expr 
                                  (variable_or_function_call sammy 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call a)))) ) . length)) < 
                                (expr 
                                  ( 
                                    (expr 
                                      (expr 
                                        (variable_or_function_call MAXSNAKELENGTH)) - 
                                      (expr 
                                        (literal 30))) ))) THEN \n 
                              (then_block 
                                (statement 
                                  (assignment_statement 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (variable_or_function_call a)))) ) . length) = 
                                    (expr 
                                      (expr 
                                        (variable_or_function_call sammy 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (variable_or_function_call a)))) ) . length)) + 
                                      (expr 
                                        (expr 
                                          (variable_or_function_call number)) * 
                                        (expr 
                                          (literal 4)))))) \n) 
                              (end_if_statement END IF)) \n 
                            (statement 
                              (assignment_statement 
                                (variable_or_function_call sammy 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call a)))) ) . score) = 
                                (expr 
                                  (expr 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (variable_or_function_call a)))) ) . score)) + 
                                  (expr 
                                    (variable_or_function_call number))))) \n 
                            (statement 
                              (call_statement 
                                (untyped_id PrintScore) 
                                (argument_list 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call NumPlayers))) , 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call sammy 
                                        ( 
                                          (argument_list 
                                            (argument 
                                              (expr 
                                                (literal 1)))) ) . score))) , 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call sammy 
                                        ( 
                                          (argument_list 
                                            (argument 
                                              (expr 
                                                (literal 2)))) ) . score))) , 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call sammy 
                                        ( 
                                          (argument_list 
                                            (argument 
                                              (expr 
                                                (literal 1)))) ) . lives))) , 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call sammy 
                                        ( 
                                          (argument_list 
                                            (argument 
                                              (expr 
                                                (literal 2)))) ) . lives)))))) \n 
                            (statement 
                              (assignment_statement 
                                (variable_or_function_call number) = 
                                (expr 
                                  (expr 
                                    (variable_or_function_call number)) + 
                                  (expr 
                                    (literal 1))))) \n 
                            (if_block_statement IF 
                              (expr 
                                (expr 
                                  (variable_or_function_call number)) = 
                                (expr 
                                  (literal 10))) THEN \n 
                              (then_block 
                                (statement 
                                  (call_statement 
                                    (untyped_id EraseSnake) 
                                    (argument_list 
                                      (argument sammy 
                                        ( )) , 
                                      (argument sammyBody 
                                        ( )) , 
                                      (argument 
                                        (expr 
                                          (literal 1)))))) \n 
                                (statement 
                                  (call_statement 
                                    (untyped_id EraseSnake) 
                                    (argument_list 
                                      (argument sammy 
                                        ( )) , 
                                      (argument sammyBody 
                                        ( )) , 
                                      (argument 
                                        (expr 
                                          (literal 2)))))) \n 
                                (statement 
                                  (locate_statement LOCATE 
                                    (expr 
                                      (variable_or_function_call numberRow)) , 
                                    (expr 
                                      (variable_or_function_call NumberCol)))) : 
                                (statement 
                                  (print_statement PRINT 
                                    (print_argument 
                                      (expr 
                                        (literal " "))))) \n 
                                (statement 
                                  (call_statement 
                                    (untyped_id Level) 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call NEXTLEVEL))) , 
                                      (argument sammy 
                                        ( ))))) \n 
                                (statement 
                                  (call_statement 
                                    (untyped_id PrintScore) 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call NumPlayers))) , 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call sammy 
                                            ( 
                                              (argument_list 
                                                (argument 
                                                  (expr 
                                                    (literal 1)))) ) . score))) , 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call sammy 
                                            ( 
                                              (argument_list 
                                                (argument 
                                                  (expr 
                                                    (literal 2)))) ) . score))) , 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call sammy 
                                            ( 
                                              (argument_list 
                                                (argument 
                                                  (expr 
                                                    (literal 1)))) ) . lives))) , 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call sammy 
                                            ( 
                                              (argument_list 
                                                (argument 
                                                  (expr 
                                                    (literal 2)))) ) . lives)))))) \n 
                                (statement 
                                  (call_statement 
                                    (untyped_id SpacePause) 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (expr 
                                            (expr 
                                              (literal "     Level")) + 
                                            (expr 
                                              (variable_or_function_call STR$ 
                                                ( 
                                                  (argument_list 
                                                    (argument 
                                                      (expr 
                                                        (variable_or_function_call curLevel)))) )))) + 
                                          (expr 
                                            (literal ",  Push Space"))))))) \n 
                                (statement 
                                  (if_inline_statement IF 
                                    (expr 
                                      (expr 
                                        (variable_or_function_call NumPlayers)) = 
                                      (expr 
                                        (literal 1))) THEN 
                                    (if_inline_action 
                                      (statement 
                                        (assignment_statement 
                                          (variable_or_function_call sammy 
                                            ( 
                                              (argument_list 
                                                (argument 
                                                  (expr 
                                                    (literal 2)))) ) . row) = 
                                          (expr 
                                            (literal 0))))))) \n 
                                (statement 
                                  (assignment_statement 
                                    (variable_or_function_call number) = 
                                    (expr 
                                      (literal 1)))) \n 
                                (statement 
                                  (if_inline_statement IF 
                                    (expr 
                                      (expr 
                                        (variable_or_function_call diff$)) = 
                                      (expr 
                                        (literal "P"))) THEN 
                                    (if_inline_action 
                                      (statement 
                                        (assignment_statement 
                                          (variable_or_function_call speed) = 
                                          (expr 
                                            (expr 
                                              (variable_or_function_call speed)) - 
                                            (expr 
                                              (literal 10))))) : 
                                      (statement 
                                        (assignment_statement 
                                          (variable_or_function_call curSpeed) = 
                                          (expr 
                                            (variable_or_function_call speed))))))) \n) 
                              (end_if_statement END IF)) \n 
                            (statement 
                              (assignment_statement 
                                (variable_or_function_call nonum) = 
                                (expr 
                                  (variable_or_function_call TRUE)))) \n 
                            (statement 
                              (if_inline_statement IF 
                                (expr 
                                  (expr 
                                    (variable_or_function_call curSpeed)) < 
                                  (expr 
                                    (literal 1))) THEN 
                                (if_inline_action 
                                  (statement 
                                    (assignment_statement 
                                      (variable_or_function_call curSpeed) = 
                                      (expr 
                                        (literal 1))))))) \n) 
                          (end_if_statement END IF)) \n) NEXT a)) \n \n 
                  (statement 
                    (for_next_statement FOR a = 
                      (expr 
                        (literal 1)) TO 
                      (expr 
                        (variable_or_function_call NumPlayers)) 
                      (block \n ' \n 
                        (if_block_statement IF 
                          (expr 
                            (expr 
                              (variable_or_function_call PointIsThere 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call sammy 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (variable_or_function_call a)))) ) . row))) , 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call sammy 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (variable_or_function_call a)))) ) . col))) , 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call colorTable 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (literal 4)))) ))))) ))) OR 
                            (expr 
                              ( 
                                (expr 
                                  (expr 
                                    (expr 
                                      (variable_or_function_call sammy 
                                        ( 
                                          (argument_list 
                                            (argument 
                                              (expr 
                                                (literal 1)))) ) . row)) = 
                                    (expr 
                                      (variable_or_function_call sammy 
                                        ( 
                                          (argument_list 
                                            (argument 
                                              (expr 
                                                (literal 2)))) ) . row))) AND 
                                  (expr 
                                    (expr 
                                      (variable_or_function_call sammy 
                                        ( 
                                          (argument_list 
                                            (argument 
                                              (expr 
                                                (literal 1)))) ) . col)) = 
                                    (expr 
                                      (variable_or_function_call sammy 
                                        ( 
                                          (argument_list 
                                            (argument 
                                              (expr 
                                                (literal 2)))) ) . col)))) ))) THEN \n 
                          (then_block 
                            (statement 
                              (play_statement PLAY 
                                (expr 
                                  (literal "MBO0L32EFGEFDC")))) \n 
                            (statement 
                              (color_statement COLOR , 
                                (expr 
                                  (variable_or_function_call colorTable 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 4)))) ))))) \n 
                            (statement 
                              (locate_statement LOCATE 
                                (expr 
                                  (variable_or_function_call numberRow)) , 
                                (expr 
                                  (variable_or_function_call NumberCol)))) \n 
                            (statement 
                              (print_statement PRINT 
                                (print_argument 
                                  (expr 
                                    (literal " "))))) \n \n 
                            (statement 
                              (assignment_statement 
                                (variable_or_function_call playerDied) = 
                                (expr 
                                  (variable_or_function_call TRUE)))) \n 
                            (statement 
                              (assignment_statement 
                                (variable_or_function_call sammy 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call a)))) ) . alive) = 
                                (expr 
                                  (variable_or_function_call FALSE)))) \n 
                            (statement 
                              (assignment_statement 
                                (variable_or_function_call sammy 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (variable_or_function_call a)))) ) . lives) = 
                                (expr 
                                  (expr 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (variable_or_function_call a)))) ) . lives)) - 
                                  (expr 
                                    (literal 1))))) \n \n ' \n) 
                          (else_block_statement ELSE 
                            (else_block \n 
                              (statement 
                                (assignment_statement 
                                  (variable_or_function_call sammy 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call a)))) ) . head) = 
                                  (expr 
                                    (expr 
                                      ( 
                                        (expr 
                                          (expr 
                                            (variable_or_function_call sammy 
                                              ( 
                                                (argument_list 
                                                  (argument 
                                                    (expr 
                                                      (variable_or_function_call a)))) ) . head)) + 
                                          (expr 
                                            (literal 1))) )) MOD 
                                    (expr 
                                      (variable_or_function_call MAXSNAKELENGTH))))) \n 
                              (statement 
                                (assignment_statement 
                                  (variable_or_function_call sammyBody 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call sammy 
                                              ( 
                                                (argument_list 
                                                  (argument 
                                                    (expr 
                                                      (variable_or_function_call a)))) ) . head))) , 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call a)))) ) . row) = 
                                  (expr 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (variable_or_function_call a)))) ) . row)))) \n 
                              (statement 
                                (assignment_statement 
                                  (variable_or_function_call sammyBody 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call sammy 
                                              ( 
                                                (argument_list 
                                                  (argument 
                                                    (expr 
                                                      (variable_or_function_call a)))) ) . head))) , 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call a)))) ) . col) = 
                                  (expr 
                                    (variable_or_function_call sammy 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (variable_or_function_call a)))) ) . col)))) \n 
                              (statement 
                                (assignment_statement 
                                  (variable_or_function_call tail) = 
                                  (expr 
                                    (expr 
                                      ( 
                                        (expr 
                                          (expr 
                                            (expr 
                                              (variable_or_function_call sammy 
                                                ( 
                                                  (argument_list 
                                                    (argument 
                                                      (expr 
                                                        (variable_or_function_call a)))) ) . head)) + 
                                            (expr 
                                              (variable_or_function_call MAXSNAKELENGTH))) - 
                                          (expr 
                                            (variable_or_function_call sammy 
                                              ( 
                                                (argument_list 
                                                  (argument 
                                                    (expr 
                                                      (variable_or_function_call a)))) ) . length))) )) MOD 
                                    (expr 
                                      (variable_or_function_call MAXSNAKELENGTH))))) \n 
                              (statement 
                                (call_statement 
                                  (untyped_id Set) 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call sammyBody 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (variable_or_function_call tail))) , 
                                              (argument 
                                                (expr 
                                                  (variable_or_function_call a)))) ) . row))) , 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call sammyBody 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (variable_or_function_call tail))) , 
                                              (argument 
                                                (expr 
                                                  (variable_or_function_call a)))) ) . col))) , 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call colorTable 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (literal 4)))) ))))))) \n 
                              (statement 
                                (assignment_statement 
                                  (variable_or_function_call sammyBody 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call tail))) , 
                                        (argument 
                                          (expr 
                                            (variable_or_function_call a)))) ) . row) = 
                                  (expr 
                                    (literal 0)))) \n 
                              (statement 
                                (call_statement 
                                  (untyped_id Set) 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call sammy 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (variable_or_function_call a)))) ) . row))) , 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call sammy 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (variable_or_function_call a)))) ) . col))) , 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call sammy 
                                          ( 
                                            (argument_list 
                                              (argument 
                                                (expr 
                                                  (variable_or_function_call a)))) ) . scolor)))))) \n)) 
                          (end_if_statement END IF)) \n) NEXT a)) \n \n) LOOP 
                (loop_condition UNTIL 
                  (expr 
                    (variable_or_function_call playerDied))))) \n \n 
            (statement 
              (assignment_statement 
                (variable_or_function_call curSpeed) = 
                (expr 
                  (variable_or_function_call speed)))) ' \n \n 
            (statement 
              (for_next_statement FOR a = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (variable_or_function_call NumPlayers)) 
                (block \n 
                  (statement 
                    (call_statement 
                      (untyped_id EraseSnake) 
                      (argument_list 
                        (argument sammy 
                          ( )) , 
                        (argument sammyBody 
                          ( )) , 
                        (argument 
                          (expr 
                            (variable_or_function_call a)))))) \n \n ' \n 
                  (if_block_statement IF 
                    (expr 
                      (expr 
                        (variable_or_function_call sammy 
                          ( 
                            (argument_list 
                              (argument 
                                (expr 
                                  (variable_or_function_call a)))) ) . alive)) = 
                      (expr 
                        (variable_or_function_call FALSE))) THEN \n 
                    (then_block ' \n 
                      (statement 
                        (assignment_statement 
                          (variable_or_function_call sammy 
                            ( 
                              (argument_list 
                                (argument 
                                  (expr 
                                    (variable_or_function_call a)))) ) . score) = 
                          (expr 
                            (expr 
                              (variable_or_function_call sammy 
                                ( 
                                  (argument_list 
                                    (argument 
                                      (expr 
                                        (variable_or_function_call a)))) ) . score)) - 
                            (expr 
                              (literal 10))))) \n 
                      (statement 
                        (call_statement 
                          (untyped_id PrintScore) 
                          (argument_list 
                            (argument 
                              (expr 
                                (variable_or_function_call NumPlayers))) , 
                            (argument 
                              (expr 
                                (variable_or_function_call sammy 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (literal 1)))) ) . score))) , 
                            (argument 
                              (expr 
                                (variable_or_function_call sammy 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (literal 2)))) ) . score))) , 
                            (argument 
                              (expr 
                                (variable_or_function_call sammy 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (literal 1)))) ) . lives))) , 
                            (argument 
                              (expr 
                                (variable_or_function_call sammy 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (literal 2)))) ) . lives)))))) \n \n 
                      (if_block_statement IF 
                        (expr 
                          (expr 
                            (variable_or_function_call a)) = 
                          (expr 
                            (literal 1))) THEN \n 
                        (then_block 
                          (statement 
                            (call_statement 
                              (untyped_id SpacePause) 
                              (argument_list 
                                (argument 
                                  (expr 
                                    (literal " Sammy Dies! Push Space! --->")))))) \n) 
                        (else_block_statement ELSE 
                          (else_block \n 
                            (statement 
                              (call_statement 
                                (untyped_id SpacePause) 
                                (argument_list 
                                  (argument 
                                    (expr 
                                      (literal " <---- Jake Dies! Push Space ")))))) \n)) 
                        (end_if_statement END IF)) \n) 
                    (end_if_statement END IF)) \n) NEXT a)) \n \n 
            (statement 
              (call_statement 
                (untyped_id Level) 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call SAMELEVEL))) , 
                  (argument sammy 
                    ( ))))) \n 
            (statement 
              (call_statement 
                (untyped_id PrintScore) 
                (argument_list 
                  (argument 
                    (expr 
                      (variable_or_function_call NumPlayers))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call sammy 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (literal 1)))) ) . score))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call sammy 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (literal 2)))) ) . score))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call sammy 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (literal 1)))) ) . lives))) , 
                  (argument 
                    (expr 
                      (variable_or_function_call sammy 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (literal 2)))) ) . lives)))))) \n \n ' \n) LOOP 
          (loop_condition UNTIL 
            (expr 
              (expr 
                (expr 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 1)))) ) . lives)) = 
                (expr 
                  (literal 0))) OR 
              (expr 
                (expr 
                  (variable_or_function_call sammy 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (literal 2)))) ) . lives)) = 
                (expr 
                  (literal 0))))))) \n \n) 
    (end_sub_statement END SUB)) \n \n ' \n ' \n 
  (function_statement FUNCTION PointIsThere 
    ( 
      (parameter_list 
        (parameter row) , 
        (parameter col) , 
        (parameter acolor)) ) 
    (block \n 
      (if_block_statement IF 
        (expr 
          (expr 
            (variable_or_function_call row)) <> 
          (expr 
            (literal 0))) THEN \n 
        (then_block 
          (if_block_statement IF 
            (expr 
              (expr 
                (variable_or_function_call arena 
                  ( 
                    (argument_list 
                      (argument 
                        (expr 
                          (variable_or_function_call row))) , 
                      (argument 
                        (expr 
                          (variable_or_function_call col)))) ) . acolor)) <> 
              (expr 
                (variable_or_function_call acolor))) THEN \n 
            (then_block 
              (statement 
                (assignment_statement 
                  (variable_or_function_call PointIsThere) = 
                  (expr 
                    (variable_or_function_call TRUE)))) \n) 
            (else_block_statement ELSE 
              (else_block \n 
                (statement 
                  (assignment_statement 
                    (variable_or_function_call PointIsThere) = 
                    (expr 
                      (variable_or_function_call FALSE)))) \n)) 
            (end_if_statement END IF)) \n) 
        (end_if_statement END IF)) \n) 
    (end_function_statement END FUNCTION)) \n \n ' \n ' \n 
  (sub_statement SUB 
    (untyped_id PrintScore) 
    ( 
      (parameter_list 
        (parameter NumPlayers) , 
        (parameter score1) , 
        (parameter score2) , 
        (parameter lives1) , 
        (parameter lives2)) ) 
    (block \n 
      (statement 
        (color_statement COLOR 
          (expr 
            (literal 15)) , 
          (expr 
            (variable_or_function_call colorTable 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 4)))) ))))) \n \n 
      (if_block_statement IF 
        (expr 
          (expr 
            (variable_or_function_call NumPlayers)) = 
          (expr 
            (literal 2))) THEN \n 
        (then_block 
          (statement 
            (locate_statement LOCATE 
              (expr 
                (literal 1)) , 
              (expr 
                (literal 1)))) \n 
          (statement 
            (print_using_statement PRINT USING 
              (expr 
                (literal "#,###,#00  Lives: #  <--JAKE")) ; 
              (print_argument 
                (expr 
                  (variable_or_function_call score2)) ;) 
              (print_argument 
                (expr 
                  (variable_or_function_call lives2))))) \n) 
        (end_if_statement END IF)) \n \n 
      (statement 
        (locate_statement LOCATE 
          (expr 
            (literal 1)) , 
          (expr 
            (literal 49)))) \n 
      (statement 
        (print_using_statement PRINT USING 
          (expr 
            (literal "SAMMY-->  Lives: #     #,###,#00")) ; 
          (print_argument 
            (expr 
              (variable_or_function_call lives1)) ;) 
          (print_argument 
            (expr 
              (variable_or_function_call score1))))) \n) 
    (end_sub_statement END SUB)) \n \n ' \n ' \n ' \n 
  (sub_statement SUB 
    (untyped_id Set) 
    ( 
      (parameter_list 
        (parameter row) , 
        (parameter col) , 
        (parameter acolor)) ) 
    (block \n 
      (if_block_statement IF 
        (expr 
          (expr 
            (variable_or_function_call row)) <> 
          (expr 
            (literal 0))) THEN \n 
        (then_block 
          (statement 
            (assignment_statement 
              (variable_or_function_call arena 
                ( 
                  (argument_list 
                    (argument 
                      (expr 
                        (variable_or_function_call row))) , 
                    (argument 
                      (expr 
                        (variable_or_function_call col)))) ) . acolor) = 
              (expr 
                (variable_or_function_call acolor)))) ' \n 
          (statement 
            (assignment_statement 
              (variable_or_function_call realRow) = 
              (expr 
                (variable_or_function_call arena 
                  ( 
                    (argument_list 
                      (argument 
                        (expr 
                          (variable_or_function_call row))) , 
                      (argument 
                        (expr 
                          (variable_or_function_call col)))) ) . realRow)))) ' \n 
          (statement 
            (assignment_statement 
              (variable_or_function_call topFlag) = 
              (expr 
                (expr 
                  (variable_or_function_call arena 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call row))) , 
                        (argument 
                          (expr 
                            (variable_or_function_call col)))) ) . sister)) + 
                (expr 
                  (expr 
                    (literal 1)) / 
                  (expr 
                    (literal 2)))))) ' \n ' \n 
          (statement 
            (assignment_statement 
              (variable_or_function_call sisterRow) = 
              (expr 
                (expr 
                  (variable_or_function_call row)) + 
                (expr 
                  (variable_or_function_call arena 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call row))) , 
                        (argument 
                          (expr 
                            (variable_or_function_call col)))) ) . sister))))) ' \n 
          (statement 
            (assignment_statement 
              (variable_or_function_call sisterColor) = 
              (expr 
                (variable_or_function_call arena 
                  ( 
                    (argument_list 
                      (argument 
                        (expr 
                          (variable_or_function_call sisterRow))) , 
                      (argument 
                        (expr 
                          (variable_or_function_call col)))) ) . acolor)))) ' \n \n 
          (statement 
            (locate_statement LOCATE 
              (expr 
                (variable_or_function_call realRow)) , 
              (expr 
                (variable_or_function_call col)))) \n \n 
          (if_block_statement IF 
            (expr 
              (expr 
                (variable_or_function_call acolor)) = 
              (expr 
                (variable_or_function_call sisterColor))) THEN ' 
            (then_block \n 
              (statement 
                (color_statement COLOR 
                  (expr 
                    (variable_or_function_call acolor)) , 
                  (expr 
                    (variable_or_function_call acolor)))) ' \n 
              (statement 
                (print_statement PRINT 
                  (print_argument 
                    (expr 
                      (variable_or_function_call CHR$ 
                        ( 
                          (argument_list 
                            (argument 
                              (expr 
                                (literal 219)))) ))) ;))) \n) 
            (else_block_statement ELSE 
              (else_block \n 
                (if_block_statement IF 
                  (expr 
                    (variable_or_function_call topFlag)) THEN ' 
                  (then_block \n 
                    (if_block_statement IF 
                      (expr 
                        (expr 
                          (variable_or_function_call acolor)) > 
                        (expr 
                          (literal 7))) THEN ' 
                      (then_block \n 
                        (statement 
                          (color_statement COLOR 
                            (expr 
                              (variable_or_function_call acolor)) , 
                            (expr 
                              (variable_or_function_call sisterColor)))) ' \n 
                        (statement 
                          (print_statement PRINT 
                            (print_argument 
                              (expr 
                                (variable_or_function_call CHR$ 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (literal 223)))) ))) ;))) ' \n) 
                      (else_block_statement ELSE 
                        (else_block \n 
                          (statement 
                            (color_statement COLOR 
                              (expr 
                                (variable_or_function_call sisterColor)) , 
                              (expr 
                                (variable_or_function_call acolor)))) \n 
                          (statement 
                            (print_statement PRINT 
                              (print_argument 
                                (expr 
                                  (variable_or_function_call CHR$ 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 220)))) ))) ;))) \n)) 
                      (end_if_statement END IF)) \n) 
                  (else_block_statement ELSE 
                    (else_block \n 
                      (if_block_statement IF 
                        (expr 
                          (expr 
                            (variable_or_function_call acolor)) > 
                          (expr 
                            (literal 7))) THEN \n 
                        (then_block 
                          (statement 
                            (color_statement COLOR 
                              (expr 
                                (variable_or_function_call acolor)) , 
                              (expr 
                                (variable_or_function_call sisterColor)))) \n 
                          (statement 
                            (print_statement PRINT 
                              (print_argument 
                                (expr 
                                  (variable_or_function_call CHR$ 
                                    ( 
                                      (argument_list 
                                        (argument 
                                          (expr 
                                            (literal 220)))) ))) ;))) \n) 
                        (else_block_statement ELSE 
                          (else_block \n 
                            (statement 
                              (color_statement COLOR 
                                (expr 
                                  (variable_or_function_call sisterColor)) , 
                                (expr 
                                  (variable_or_function_call acolor)))) \n 
                            (statement 
                              (print_statement PRINT 
                                (print_argument 
                                  (expr 
                                    (variable_or_function_call CHR$ 
                                      ( 
                                        (argument_list 
                                          (argument 
                                            (expr 
                                              (literal 223)))) ))) ;))) \n)) 
                        (end_if_statement END IF)) \n)) 
                  (end_if_statement END IF)) \n)) 
            (end_if_statement END IF)) \n) 
        (end_if_statement END IF)) \n) 
    (end_sub_statement END SUB)) \n \n ' \n ' \n 
  (sub_statement SUB 
    (untyped_id SpacePause) 
    ( 
      (parameter_list 
        (parameter text$)) ) 
    (block \n \n 
      (statement 
        (color_statement COLOR 
          (expr 
            (variable_or_function_call colorTable 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 5)))) ))) , 
          (expr 
            (variable_or_function_call colorTable 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 6)))) ))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 11))) , 
            (argument 
              (expr 
                (literal "ÛßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßÛ")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 12))) , 
            (argument 
              (expr 
                (expr 
                  (expr 
                    (literal "Û ")) + 
                  (expr 
                    (variable_or_function_call LEFT$ 
                      ( 
                        (argument_list 
                          (argument 
                            (expr 
                              (expr 
                                (variable_or_function_call text$)) + 
                              (expr 
                                (variable_or_function_call SPACE$ 
                                  ( 
                                    (argument_list 
                                      (argument 
                                        (expr 
                                          (literal 29)))) ))))) , 
                          (argument 
                            (expr 
                              (literal 29)))) )))) + 
                (expr 
                  (literal " Û"))))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 13))) , 
            (argument 
              (expr 
                (literal "ÛÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÛ")))))) \n 
      (statement 
        (while_wend_statement WHILE 
          (expr 
            (expr 
              (variable_or_function_call INKEY$)) <> 
            (expr 
              (literal ""))) 
          (block :) WEND)) \n 
      (statement 
        (while_wend_statement WHILE 
          (expr 
            (expr 
              (variable_or_function_call INKEY$)) <> 
            (expr 
              (literal " "))) 
          (block :) WEND)) \n 
      (statement 
        (color_statement COLOR 
          (expr 
            (literal 15)) , 
          (expr 
            (variable_or_function_call colorTable 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 4)))) ))))) \n \n 
      (statement 
        (for_next_statement FOR i = 
          (expr 
            (literal 21)) TO 
          (expr 
            (literal 26)) 
          (block ' \n 
            (statement 
              (for_next_statement FOR j = 
                (expr 
                  (literal 24)) TO 
                (expr 
                  (literal 56)) 
                (block \n 
                  (statement 
                    (call_statement 
                      (untyped_id Set) 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call i))) , 
                        (argument 
                          (expr 
                            (variable_or_function_call j))) , 
                        (argument 
                          (expr 
                            (variable_or_function_call arena 
                              ( 
                                (argument_list 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call i))) , 
                                  (argument 
                                    (expr 
                                      (variable_or_function_call j)))) ) . acolor)))))) \n) NEXT j)) \n) NEXT i)) \n \n) 
    (end_sub_statement END SUB)) \n \n ' \n ' \n 
  (sub_statement SUB 
    (untyped_id SparklePause) 
    (block \n \n 
      (statement 
        (color_statement COLOR 
          (expr 
            (literal 4)) , 
          (expr 
            (literal 0)))) \n 
      (statement 
        (assignment_statement 
          (variable_or_function_call a$) = 
          (expr 
            (literal "*    *    *    *    *    *    *    *    *    *    *    *    *    *    *    *    *    ")))) \n 
      (statement 
        (while_wend_statement WHILE 
          (expr 
            (expr 
              (variable_or_function_call INKEY$)) <> 
            (expr 
              (literal ""))) 
          (block :) WEND)) ' \n \n 
      (statement 
        (while_wend_statement WHILE 
          (expr 
            (expr 
              (variable_or_function_call INKEY$)) = 
            (expr 
              (literal ""))) 
          (block \n 
            (statement 
              (for_next_statement FOR a = 
                (expr 
                  (literal 1)) TO 
                (expr 
                  (literal 5)) 
                (block \n 
                  (statement 
                    (locate_statement LOCATE 
                      (expr 
                        (literal 1)) , 
                      (expr 
                        (literal 1)))) ' \n 
                  (statement 
                    (print_statement PRINT 
                      (print_argument 
                        (expr 
                          (builtin_function 
                            (mid_function MID$ 
                              ( 
                                (expr 
                                  (variable_or_function_call a$)) , 
                                (expr 
                                  (variable_or_function_call a)) , 
                                (expr 
                                  (literal 80)) )))) ;))) \n 
                  (statement 
                    (locate_statement LOCATE 
                      (expr 
                        (literal 22)) , 
                      (expr 
                        (literal 1)))) \n 
                  (statement 
                    (print_statement PRINT 
                      (print_argument 
                        (expr 
                          (builtin_function 
                            (mid_function MID$ 
                              ( 
                                (expr 
                                  (variable_or_function_call a$)) , 
                                (expr 
                                  (expr 
                                    (literal 6)) - 
                                  (expr 
                                    (variable_or_function_call a))) , 
                                (expr 
                                  (literal 80)) )))) ;))) \n \n 
                  (statement 
                    (for_next_statement FOR b = 
                      (expr 
                        (literal 2)) TO 
                      (expr 
                        (literal 21)) 
                      (block ' \n 
                        (statement 
                          (assignment_statement 
                            (variable_or_function_call c) = 
                            (expr 
                              (expr 
                                ( 
                                  (expr 
                                    (expr 
                                      (variable_or_function_call a)) + 
                                    (expr 
                                      (variable_or_function_call b))) )) MOD 
                              (expr 
                                (literal 5))))) \n 
                        (if_block_statement IF 
                          (expr 
                            (expr 
                              (variable_or_function_call c)) = 
                            (expr 
                              (literal 1))) THEN \n 
                          (then_block 
                            (statement 
                              (locate_statement LOCATE 
                                (expr 
                                  (variable_or_function_call b)) , 
                                (expr 
                                  (literal 80)))) \n 
                            (statement 
                              (print_statement PRINT 
                                (print_argument 
                                  (expr 
                                    (literal "*")) ;))) \n 
                            (statement 
                              (locate_statement LOCATE 
                                (expr 
                                  (expr 
                                    (literal 23)) - 
                                  (expr 
                                    (variable_or_function_call b))) , 
                                (expr 
                                  (literal 1)))) \n 
                            (statement 
                              (print_statement PRINT 
                                (print_argument 
                                  (expr 
                                    (literal "*")) ;))) \n) 
                          (else_block_statement ELSE 
                            (else_block \n 
                              (statement 
                                (locate_statement LOCATE 
                                  (expr 
                                    (variable_or_function_call b)) , 
                                  (expr 
                                    (literal 80)))) \n 
                              (statement 
                                (print_statement PRINT 
                                  (print_argument 
                                    (expr 
                                      (literal " ")) ;))) \n 
                              (statement 
                                (locate_statement LOCATE 
                                  (expr 
                                    (expr 
                                      (literal 23)) - 
                                    (expr 
                                      (variable_or_function_call b))) , 
                                  (expr 
                                    (literal 1)))) \n 
                              (statement 
                                (print_statement PRINT 
                                  (print_argument 
                                    (expr 
                                      (literal " ")) ;))) \n)) 
                          (end_if_statement END IF)) \n) NEXT b)) \n) NEXT a)) \n) WEND)) \n \n) 
    (end_sub_statement END SUB)) \n \n ' \n ' \n 
  (function_statement FUNCTION StillWantsToPlay 
    (block \n \n 
      (statement 
        (color_statement COLOR 
          (expr 
            (variable_or_function_call colorTable 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 5)))) ))) , 
          (expr 
            (variable_or_function_call colorTable 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 6)))) ))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 10))) , 
            (argument 
              (expr 
                (literal "ÛßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßÛ")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 11))) , 
            (argument 
              (expr 
                (literal "Û       G A M E   O V E R       Û")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 12))) , 
            (argument 
              (expr 
                (literal "Û                               Û")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 13))) , 
            (argument 
              (expr 
                (literal "Û      Play Again?   
                  (Y/N)      Û")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 14))) , 
            (argument 
              (expr 
                (literal "ÛÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÛ")))))) \n \n 
      (statement 
        (while_wend_statement WHILE 
          (expr 
            (expr 
              (variable_or_function_call INKEY$)) <> 
            (expr 
              (literal ""))) 
          (block :) WEND)) \n 
      (statement 
        (do_loop_statement DO 
          (block \n 
            (statement 
              (assignment_statement 
                (variable_or_function_call kbd$) = 
                (expr 
                  (variable_or_function_call UCASE$ 
                    ( 
                      (argument_list 
                        (argument 
                          (expr 
                            (variable_or_function_call INKEY$)))) ))))) \n) LOOP 
          (loop_condition UNTIL 
            (expr 
              (expr 
                (expr 
                  (variable_or_function_call kbd$)) = 
                (expr 
                  (literal "Y"))) OR 
              (expr 
                (expr 
                  (variable_or_function_call kbd$)) = 
                (expr 
                  (literal "N"))))))) \n \n 
      (statement 
        (color_statement COLOR 
          (expr 
            (literal 15)) , 
          (expr 
            (variable_or_function_call colorTable 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 4)))) ))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 10))) , 
            (argument 
              (expr 
                (literal "                                 ")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 11))) , 
            (argument 
              (expr 
                (literal "                                 ")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 12))) , 
            (argument 
              (expr 
                (literal "                                 ")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 13))) , 
            (argument 
              (expr 
                (literal "                                 ")))))) \n 
      (statement 
        (call_statement 
          (untyped_id Center) 
          (argument_list 
            (argument 
              (expr 
                (literal 14))) , 
            (argument 
              (expr 
                (literal "                                 ")))))) \n \n 
      (if_block_statement IF 
        (expr 
          (expr 
            (variable_or_function_call kbd$)) = 
          (expr 
            (literal "Y"))) THEN \n 
        (then_block 
          (statement 
            (assignment_statement 
              (variable_or_function_call StillWantsToPlay) = 
              (expr 
                (variable_or_function_call TRUE)))) \n) 
        (else_block_statement ELSE 
          (else_block \n 
            (statement 
              (assignment_statement 
                (variable_or_function_call StillWantsToPlay) = 
                (expr 
                  (variable_or_function_call FALSE)))) \n 
            (statement 
              (color_statement COLOR 
                (expr 
                  (literal 7)) , 
                (expr 
                  (literal 0)))) \n 
            (statement 
              (call_statement 
                (untyped_id CLS))) \n)) 
        (end_if_statement END IF)) \n \n) 
    (end_function_statement END FUNCTION)) \n <EOF>)
