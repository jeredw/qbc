(program 
  (declare_statement DECLARE FUNCTION GetArraySize 
    ( 
      (declare_parameter_list 
        (declare_parameter WLeft) , 
        (declare_parameter WRight) , 
        (declare_parameter WTop) , 
        (declare_parameter WBottom)) )) \r\n \r\n 
  (statement 
    (screen_statement SCREEN 
      (expr 
        (literal 2)))) \r\n 
  (statement 
    (call_statement 
      (untyped_id CLS))) \r\n \r\n \r\n 
  (statement 
    (view_statement VIEW 
      ( 
        (expr 
          (literal 20)) , 
        (expr 
          (literal 10)) ) - 
      ( 
        (expr 
          (literal 620)) , 
        (expr 
          (literal 190)) ) , , 
      (expr 
        (literal 1)))) \r\n \r\n 
  (statement 
    (const_statement CONST 
      (const_assignment PI = 
        (const_expr 
          (expr 
            (literal 3.141592653589#)))))) \r\n \r\n \r\n \r\n 
  (statement 
    (window_statement WINDOW 
      ( 
        (expr - 
          (expr 
            (literal 3.15))) , 
        (expr - 
          (expr 
            (literal .14))) ) - 
      ( 
        (expr 
          (literal 3.56)) , 
        (expr 
          (literal 1.01)) ))) \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n 
  (statement 
    (assignment_statement 
      (variable_or_function_call WLeft) = 
      (expr - 
        (expr 
          (literal .21))))) \r\n 
  (statement 
    (assignment_statement 
      (variable_or_function_call WRight) = 
      (expr 
        (literal .21)))) \r\n 
  (statement 
    (assignment_statement 
      (variable_or_function_call WTop) = 
      (expr 
        (literal .07)))) \r\n 
  (statement 
    (assignment_statement 
      (variable_or_function_call WBottom) = 
      (expr - 
        (expr 
          (literal .07))))) \r\n \r\n \r\n \r\n 
  (statement 
    (assignment_statement 
      (variable_or_function_call ArraySize%) = 
      (expr 
        (variable_or_function_call GetArraySize 
          (args_or_indices 
            ( 
              (expr 
                (variable_or_function_call WLeft)) , 
              (expr 
                (variable_or_function_call WRight)) , 
              (expr 
                (variable_or_function_call WTop)) , 
              (expr 
                (variable_or_function_call WBottom)) )))))) \r\n \r\n 
  (statement 
    (dim_statement DIM 
      (dim_variable 
        (untyped_id Array) 
        (dim_array_bounds 
          ( 
            (dim_subscript 
              (expr 
                (literal 1)) TO 
              (expr 
                (variable_or_function_call ArraySize%))) )) AS 
        (type_name INTEGER)))) \r\n \r\n \r\n 
  (statement 
    (circle_statement CIRCLE 
      ( 
        (expr 
          (literal 0)) , 
        (expr 
          (literal 0)) ) , 
      (expr 
        (literal .18)))) \r\n 
  (statement 
    (paint_statement PAINT 
      ( 
        (expr 
          (literal 0)) , 
        (expr 
          (literal 0)) ))) \r\n \r\n \r\n 
  (statement 
    (get_graphics_statement GET 
      ( 
        (expr 
          (variable_or_function_call WLeft)) , 
        (expr 
          (variable_or_function_call WTop)) ) - 
      ( 
        (expr 
          (variable_or_function_call WRight)) , 
        (expr 
          (variable_or_function_call WBottom)) ) , 
      (variable_or_function_call Array))) \r\n 
  (statement 
    (call_statement 
      (untyped_id CLS))) \r\n \r\n \r\n 
  (statement 
    (line_statement LINE 
      ( 
        (expr - 
          (expr 
            (literal 3))) , 
        (expr 
          (literal .8)) ) - 
      ( 
        (expr 
          (literal 3.4)) , 
        (expr 
          (literal .2)) ) , , 
      (box_style B))) \r\n 
  (statement 
    (assignment_statement 
      (variable_or_function_call Pattern$) = 
      (expr 
        (expr 
          (expr 
            (expr 
              (variable_or_function_call CHR$ 
                (args_or_indices 
                  ( 
                    (expr 
                      (literal 126)) )))) + 
            (expr 
              (variable_or_function_call CHR$ 
                (args_or_indices 
                  ( 
                    (expr 
                      (literal 0)) ))))) + 
          (expr 
            (variable_or_function_call CHR$ 
              (args_or_indices 
                ( 
                  (expr 
                    (literal 126)) ))))) + 
        (expr 
          (variable_or_function_call CHR$ 
            (args_or_indices 
              ( 
                (expr 
                  (literal 126)) ))))))) \r\n 
  (statement 
    (paint_statement PAINT 
      ( 
        (expr 
          (literal 0)) , 
        (expr 
          (literal .5)) ) , 
      (expr 
        (variable_or_function_call Pattern$)))) \r\n \r\n 
  (statement 
    (locate_statement LOCATE 
      (expr 
        (literal 21)) , 
      (expr 
        (literal 29)))) \r\n 
  (statement 
    (print_statement PRINT 
      (expr 
        (literal "Press any key to end")))) \r\n \r\n \r\n 
  (statement 
    (assignment_statement 
      (variable_or_function_call StepSize) = 
      (expr 
        (literal .02)))) \r\n 
  (statement 
    (assignment_statement 
      (variable_or_function_call StartLoop) = 
      (expr - 
        (expr 
          (variable_or_function_call PI))))) \r\n 
  (statement 
    (assignment_statement 
      (variable_or_function_call Decay) = 
      (expr 
        (literal 1)))) \r\n \r\n 
  (statement 
    (do_loop_statement DO 
      (block \r\n 
        (statement 
          (assignment_statement 
            (variable_or_function_call EndLoop) = 
            (expr - 
              (expr 
                (variable_or_function_call StartLoop))))) \r\n 
        (statement 
          (for_next_statement FOR X = 
            (expr 
              (variable_or_function_call StartLoop)) TO 
            (expr 
              (variable_or_function_call EndLoop)) STEP 
            (expr 
              (variable_or_function_call StepSize)) 
            (block \r\n \r\n \r\n \r\n \r\n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call Y) = 
                  (expr 
                    (expr 
                      (expr 
                        (variable_or_function_call ABS 
                          (args_or_indices 
                            ( 
                              (expr 
                                (variable_or_function_call COS 
                                  (args_or_indices 
                                    ( 
                                      (expr 
                                        (variable_or_function_call X)) )))) )))) * 
                      (expr 
                        (variable_or_function_call Decay))) - 
                    (expr 
                      (literal .14))))) \r\n 
              (statement 
                (if_inline_statement IF 
                  (expr 
                    (expr 
                      (variable_or_function_call Y)) < 
                    (expr - 
                      (expr 
                        (literal .13)))) THEN 
                  (if_inline_action 
                    (statement 
                      (assignment_statement 
                        (variable_or_function_call Decay) = 
                        (expr 
                          (expr 
                            (variable_or_function_call Decay)) * 
                          (expr 
                            (literal .9)))))))) \r\n \r\n \r\n 
              (statement 
                (assignment_statement 
                  (variable_or_function_call Esc$) = 
                  (expr 
                    (variable_or_function_call INKEY$)))) \r\n 
              (statement 
                (if_inline_statement IF 
                  (expr 
                    (expr 
                      (expr 
                        (variable_or_function_call Esc$)) <> 
                      (expr 
                        (literal ""))) OR 
                    (expr 
                      (expr 
                        (variable_or_function_call Decay)) < 
                      (expr 
                        (literal .01)))) THEN 
                  (if_inline_action 
                    (statement 
                      (exit_statement EXIT FOR))))) \r\n \r\n \r\n \r\n \r\n \r\n \r\n 
              (statement 
                (put_graphics_statement PUT 
                  ( 
                    (expr 
                      (variable_or_function_call X)) , 
                    (expr 
                      (variable_or_function_call Y)) ) , 
                  (variable_or_function_call Array) , PSET)) \r\n) NEXT X)) \r\n \r\n \r\n 
        (statement 
          (assignment_statement 
            (variable_or_function_call StepSize) = 
            (expr - 
              (expr 
                (variable_or_function_call StepSize))))) \r\n 
        (statement 
          (assignment_statement 
            (variable_or_function_call StartLoop) = 
            (expr - 
              (expr 
                (variable_or_function_call StartLoop))))) \r\n) LOOP 
      (do_condition UNTIL 
        (expr 
          (expr 
            (expr 
              (variable_or_function_call Esc$)) <> 
            (expr 
              (literal ""))) OR 
          (expr 
            (expr 
              (variable_or_function_call Decay)) < 
            (expr 
              (literal .01))))))) \r\n \r\n 
  (statement 
    (assignment_statement 
      (variable_or_function_call Pause$) = 
      (expr 
        (builtin_function INPUT$ 
          ( 
            (expr 
              (literal 1)) ))))) \r\n 
  (statement 
    (end_statement END)) \r\n 
  (statement 
    (rem_statement REM)) \r\n 
  (statement 
    (rem_statement REM)) \r\n 
  (function_statement FUNCTION GetArraySize 
    ( 
      (parameter_list 
        (parameter WLeft) , 
        (parameter WRight) , 
        (parameter WTop) , 
        (parameter WBottom)) ) STATIC 
    (block \r\n \r\n \r\n \r\n 
      (statement 
        (assignment_statement 
          (variable_or_function_call VLeft) = 
          (expr 
            (variable_or_function_call PMAP 
              (args_or_indices 
                ( 
                  (expr 
                    (variable_or_function_call WLeft)) , 
                  (expr 
                    (literal 0)) )))))) \r\n 
      (statement 
        (assignment_statement 
          (variable_or_function_call VRight) = 
          (expr 
            (variable_or_function_call PMAP 
              (args_or_indices 
                ( 
                  (expr 
                    (variable_or_function_call WRight)) , 
                  (expr 
                    (literal 0)) )))))) \r\n 
      (statement 
        (assignment_statement 
          (variable_or_function_call VTop) = 
          (expr 
            (variable_or_function_call PMAP 
              (args_or_indices 
                ( 
                  (expr 
                    (variable_or_function_call WTop)) , 
                  (expr 
                    (literal 1)) )))))) \r\n 
      (statement 
        (assignment_statement 
          (variable_or_function_call VBottom) = 
          (expr 
            (variable_or_function_call PMAP 
              (args_or_indices 
                ( 
                  (expr 
                    (variable_or_function_call WBottom)) , 
                  (expr 
                    (literal 1)) )))))) \r\n \r\n \r\n \r\n 
      (statement 
        (assignment_statement 
          (variable_or_function_call RectHeight) = 
          (expr 
            (expr 
              (variable_or_function_call ABS 
                (args_or_indices 
                  ( 
                    (expr 
                      (expr 
                        (variable_or_function_call VBottom)) - 
                      (expr 
                        (variable_or_function_call VTop))) )))) + 
            (expr 
              (literal 1))))) \r\n 
      (statement 
        (assignment_statement 
          (variable_or_function_call RectWidth) = 
          (expr 
            (expr 
              (variable_or_function_call ABS 
                (args_or_indices 
                  ( 
                    (expr 
                      (expr 
                        (variable_or_function_call VRight)) - 
                      (expr 
                        (variable_or_function_call VLeft))) )))) + 
            (expr 
              (literal 1))))) \r\n \r\n \r\n 
      (statement 
        (assignment_statement 
          (variable_or_function_call ByteSize) = 
          (expr 
            (expr 
              (literal 4)) + 
            (expr 
              (expr 
                (variable_or_function_call RectHeight)) * 
              (expr 
                (variable_or_function_call INT 
                  (args_or_indices 
                    ( 
                      (expr 
                        (expr 
                          ( 
                            (expr 
                              (expr 
                                (variable_or_function_call RectWidth)) + 
                              (expr 
                                (literal 7))) )) / 
                        (expr 
                          (literal 8))) )))))))) \r\n \r\n \r\n 
      (statement 
        (assignment_statement 
          (variable_or_function_call GetArraySize) = 
          (expr 
            (expr 
              (expr 
                (variable_or_function_call ByteSize)) \ 
              (expr 
                (literal 2))) + 
            (expr 
              (literal 1))))) \r\n) 
    (end_function_statement END FUNCTION)) \r\n <EOF>)
