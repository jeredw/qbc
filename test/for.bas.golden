(program 
  (line (statement (for_next_statement (for_assignment for (variable i) = (expr (literal 1)) to (expr (literal 20))) \n 
  (line (statement (print_statement print (print_args (expr (literal "hi"))))) \n) (next_line next (variable i)))) \n) 
  (line (statement (for_next_statement (for_assignment for (variable i) = (expr (literal 10)) to (expr (literal 1)) step (expr (literal - 1))) \n (next_line next))) \n) 
  (line (statement (for_next_statement (for_assignment for (variable a) = (expr (literal 1)) to (expr (literal 5))) \n 
  (line (statement (for_next_statement (for_assignment for (variable b) = (expr (literal 1)) to (expr (literal 5))) \n (next_line next (variable b)))) \n) (next_line next (variable a)))) \n) 
  (line (statement (print_statement print (print_args (expr (literal "hi"))))) : (statement (for_next_statement (for_assignment for (variable i) = (expr (literal 1)) to (expr (literal 2))) : (statement (print_statement print (print_args (expr (literal "hi"))))) \n (next_line (statement (print_statement print (print_args (expr (literal "foo"))))) : next))) \n) 
  (line (statement (for_next_statement (for_assignment for (variable i) = (expr (literal 1)) to (expr (literal 10))) : (statement (for_next_statement (for_assignment for (variable j) = (expr (literal 1)) to (expr (literal 10))) : (statement (print_statement print (print_args (expr (variable i)) , (print_args (expr (variable j)))))) : next (variable j))) : next (variable i))) \n) <EOF>)
