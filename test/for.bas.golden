(program 
  (statement 
    (for_next_statement for i = 
      (expr 
        (literal 1)) to 
      (expr 
        (literal 20)) 
      (block \n 
        (statement 
          (print_statement print 
            (expr 
              (literal "hi")))) \n statement) next i)) \n 
  (statement 
    (for_next_statement for i = 
      (expr 
        (literal 10)) to 
      (expr 
        (literal 1)) step 
      (expr - 
        (expr 
          (literal 1))) 
      (block \n statement) next)) \n 
  (statement 
    (for_next_statement for a = 
      (expr 
        (literal 1)) to 
      (expr 
        (literal 5)) 
      (block \n 
        (statement 
          (for_next_statement for b = 
            (expr 
              (literal 1)) to 
            (expr 
              (literal 5)) 
            (block \n statement) next b)) \n statement) next a)) \n 
  (statement 
    (for_next_statement for a = 
      (expr 
        (literal 1)) to 
      (expr 
        (literal 5)) 
      (block \n 
        (statement 
          (for_next_statement for b = 
            (expr 
              (literal 1)) to 
            (expr 
              (literal 5)) 
            (block \n statement) next b))) , a)) \n 
  (statement 
    (print_statement print 
      (expr 
        (literal "hi")))) : 
  (statement 
    (for_next_statement for i = 
      (expr 
        (literal 1)) to 
      (expr 
        (literal 2)) 
      (block : 
        (statement 
          (print_statement print 
            (expr 
              (literal "hi")))) \n 
        (statement 
          (print_statement print 
            (expr 
              (literal "foo")))) : statement) next)) \n 
  (statement 
    (for_next_statement for i = 
      (expr 
        (literal 1)) to 
      (expr 
        (literal 10)) 
      (block : 
        (statement 
          (for_next_statement for j = 
            (expr 
              (literal 1)) to 
            (expr 
              (literal 10)) 
            (block : 
              (statement 
                (print_statement print 
                  (expr 
                    (variable_or_function_call i)) , 
                  (expr 
                    (variable_or_function_call j)))) :) next j)) :) next i)) \n 
  (statement 
    (for_next_statement for i = 
      (expr 
        (literal 1)) to 
      (expr 
        (literal 42)) 
      (block :) next)) : 
  (statement 
    (print_statement print 
      (expr 
        (literal "statement")))) \n 
  (statement 
    (for_next_statement for i = 
      (expr 
        (literal 1)) to 
      (expr 
        (literal 42)) 
      (block :) next)) \n)
