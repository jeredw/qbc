(program 
  (statement 
    (open_statement open 
      (expr 
        (literal "test.txt")) for 
      (open_mode random) as # 
      (expr 
        (literal 1)))) \n 
  (statement 
    (field_statement field # 
      (expr 
        (literal 1)) , 
      (field_assignment 
        (expr 
          (literal 10)) as 
        (variable_or_function_call entire$)))) \n 
  (statement 
    (field_statement field # 
      (expr 
        (literal 1)) , 
      (field_assignment 
        (expr 
          (literal 5)) as 
        (variable_or_function_call lpart$)) , 
      (field_assignment 
        (expr 
          (literal 5)) as 
        (variable_or_function_call rpart$)))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (builtin_function 
            (len_function len 
              ( 
                (expr 
                  (variable_or_function_call entire$)) )))) ,) 
      (print_argument 
        (expr 
          (builtin_function 
            (len_function len 
              ( 
                (expr 
                  (variable_or_function_call lpart$)) )))) ,) 
      (print_argument 
        (expr 
          (builtin_function 
            (len_function len 
              ( 
                (expr 
                  (variable_or_function_call rpart$)) ))))))) \n 
  (statement 
    (lset_statement lset 
      (variable_or_function_call entire$) = 
      (expr 
        (literal "hello world")))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (literal "lset")) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call entire$)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call lpart$)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call rpart$))))) \n 
  (statement 
    (mid_statement mid$ 
      ( 
        (variable_or_function_call lpart$) , 
        (expr 
          (literal 1)) , 
        (expr 
          (literal 1)) ) = 
      (expr 
        (literal "y")))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (literal "mid")) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call entire$)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call lpart$)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call rpart$))))) \n 
  (statement 
    (rset_statement rset 
      (variable_or_function_call rpart$) = 
      (expr 
        (literal "mom")))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (literal "rset")) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call entire$)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call lpart$)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call rpart$))))) \n 
  (statement 
    (put_io_statement put # 
      (expr 
        (literal 1)) , 
      (expr 
        (literal 1)))) \n 
  (statement 
    (lset_statement lset 
      (variable_or_function_call entire$) = 
      (expr 
        (literal "")))) \n 
  (statement 
    (lset_statement lset 
      (variable_or_function_call lpart$) = 
      (expr 
        (literal "")))) \n 
  (statement 
    (lset_statement lset 
      (variable_or_function_call rpart$) = 
      (expr 
        (literal "")))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (literal "lset")) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call entire$)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call lpart$)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call rpart$))))) \n 
  (statement 
    (get_io_statement get # 
      (expr 
        (literal 1)) , 
      (expr 
        (literal 1)))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (literal "get")) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call entire$)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call lpart$)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call rpart$))))) \n 
  (statement 
    (close_statement close # 
      (expr 
        (literal 1)))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (literal "post-close")) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call entire$)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call lpart$)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call rpart$))))) \n <EOF>)
