(program 
  (type_statement type 
    (untyped_id apple) \n 
    (type_element 
      (untyped_id x) as 
      (type_name_for_type_element integer) \n) 
    (type_element 
      (untyped_id y) as 
      (type_name_for_type_element integer) \n) end type) \n \n 
  (type_statement type 
    (untyped_id orange) \n 
    (type_element 
      (untyped_id x) as 
      (type_name_for_type_element integer) \n) end type) \n \n 
  (statement 
    (dim_statement dim 
      (dim_variable 
        (untyped_id a) as 
        (type_name 
          (untyped_id apple))) , 
      (dim_variable 
        (untyped_id o) as 
        (type_name 
          (untyped_id orange))))) \n 
  (statement 
    (assignment_statement 
      (variable_or_function_call a.x) = 
      (expr 
        (literal 0)))) \n 
  (statement 
    (assignment_statement 
      (variable_or_function_call a.y) = 
      (expr 
        (literal 1)))) \n 
  (statement 
    (assignment_statement 
      (variable_or_function_call o.x) = 
      (expr 
        (literal 42)))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (variable_or_function_call a.x)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call a.y)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call o.x))))) \n 
  (statement 
    (lset_statement lset 
      (variable_or_function_call a) = 
      (expr 
        (variable_or_function_call o)))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (variable_or_function_call a.x)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call a.y)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call o.x))))) \n <EOF>)
