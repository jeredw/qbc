(program 
  (statement 
    (assignment_statement 
      (variable_or_function_call a) = 
      (expr 
        (literal 42)))) \n 
  (statement 
    (assignment_statement 
      (variable_or_function_call b) = 
      (expr 
        (literal 1)))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (variable_or_function_call a)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call b))))) \n 
  (statement 
    (swap_statement swap 
      (variable_or_function_call a) , 
      (variable_or_function_call b))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (variable_or_function_call a)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call b))))) \n 
  (statement 
    (assignment_statement 
      (variable_or_function_call a$) = 
      (expr 
        (literal "hi")))) \n 
  (statement 
    (assignment_statement 
      (variable_or_function_call b$) = 
      (expr 
        (literal "yo")))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (variable_or_function_call a$)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call b$))))) \n 
  (statement 
    (swap_statement swap 
      (variable_or_function_call a$) , 
      (variable_or_function_call b$))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (variable_or_function_call a$)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call b$))))) \n 
  (statement 
    (assignment_statement 
      (variable_or_function_call a 
        ( 
          (argument_list 
            (argument 
              (expr 
                (literal 1)))) )) = 
      (expr 
        (literal 2)))) \n 
  (statement 
    (assignment_statement 
      (variable_or_function_call b 
        ( 
          (argument_list 
            (argument 
              (expr 
                (literal 1)))) )) = 
      (expr 
        (literal 1)))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (variable_or_function_call a 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 1)))) ))) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call b 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 1)))) )))))) \n 
  (statement 
    (swap_statement swap 
      (variable_or_function_call a 
        ( 
          (argument_list 
            (argument 
              (expr 
                (literal 1)))) )) , 
      (variable_or_function_call b 
        ( 
          (argument_list 
            (argument 
              (expr 
                (literal 1)))) )))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (variable_or_function_call a 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 1)))) ))) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call b 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 1)))) )))))) \n 
  (type_statement type 
    (untyped_id foo) \n 
    (type_element 
      (untyped_id x) as 
      (type_name_for_type_element integer) \n) end type) \n 
  (statement 
    (dim_statement dim 
      (dim_variable 
        (untyped_id var1) 
        (dim_array_bounds 
          ( 
            (dim_subscript 
              (expr 
                (literal 5))) )) as 
        (type_name 
          (untyped_id foo))) , 
      (dim_variable 
        (untyped_id var2) 
        (dim_array_bounds 
          ( 
            (dim_subscript 
              (expr 
                (literal 5))) )) as 
        (type_name 
          (untyped_id foo))))) \n 
  (statement 
    (assignment_statement 
      (variable_or_function_call var1 
        ( 
          (argument_list 
            (argument 
              (expr 
                (literal 1)))) ) . x) = 
      (expr 
        (literal 5)))) \n 
  (statement 
    (assignment_statement 
      (variable_or_function_call var2 
        ( 
          (argument_list 
            (argument 
              (expr 
                (literal 1)))) ) . x) = 
      (expr 
        (literal 7)))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (variable_or_function_call var1 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 1)))) ) . x)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call var2 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 1)))) ) . x))))) \n 
  (statement 
    (swap_statement swap 
      (variable_or_function_call var1 
        ( 
          (argument_list 
            (argument 
              (expr 
                (literal 1)))) ) . x) , 
      (variable_or_function_call var2 
        ( 
          (argument_list 
            (argument 
              (expr 
                (literal 1)))) ) . x))) \n 
  (statement 
    (print_statement print 
      (print_argument 
        (expr 
          (variable_or_function_call var1 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 1)))) ) . x)) ,) 
      (print_argument 
        (expr 
          (variable_or_function_call var2 
            ( 
              (argument_list 
                (argument 
                  (expr 
                    (literal 1)))) ) . x))))) \n <EOF>)
