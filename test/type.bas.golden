(program statement 
  (type_statement type thing \n \n \n 
    (type_element x as 
      (type_name_for_type_element 
        (fixed_string string * 40)) \n) 
    (rem_statement rem this is sure a great variable) \n 
    (type_element y as 
      (type_name_for_type_element double) \n) 
    (type_element z as 
      (type_name_for_type_element anotherthing) \n) end type) \n statement 
  (type_statement type foo : 
    (type_element a as 
      (type_name_for_type_element 
        (fixed_string string * 2)) :) end type) : statement 
  (type_statement type bar : 
    (type_element a as 
      (type_name_for_type_element 
        (fixed_string string * 4)) :) end type) \n statement 
  (type_statement type baz : : 
    (type_element a as 
      (type_name_for_type_element integer) :) end type) \n statement 
  (type_statement type whoa \n 
    (type_element a as 
      (type_name_for_type_element integer) :) 
    (type_element b as 
      (type_name_for_type_element integer) \n) end type) \n statement 
  (type_statement type yep \n 
    (type_element a as 
      (type_name_for_type_element integer) :) 
    (rem_statement rem what a great type) \n 
    (type_element b as 
      (type_name_for_type_element integer) :) 
    (rem_statement rem this is really rad) \n end type) \n)
