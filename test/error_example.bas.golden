(program statement \n 
  (statement 
    (on_error_statement ON ERROR GOTO 
      (target 
        (text_label 
          (untyped_id Handler))))) \n 
  (label 
    (line_number 10)) 
  (statement 
    (call_statement 
      (untyped_id CHDIR) 
      (call_argument_list 
        (call_argument 
          (expr 
            (literal "a:\")))))) \n statement \n 
  (label 
    (line_number 20)) 
  (statement 
    (assignment_statement 
      (variable_or_function_call y%) = 
      (expr 
        (literal 0)))) \n 
  (label 
    (line_number 30)) 
  (statement 
    (assignment_statement 
      (variable_or_function_call x%) = 
      (expr 
        (expr 
          (literal 5)) / 
        (expr 
          (variable_or_function_call y%))))) \n 
  (label 
    (line_number 40)) 
  (statement 
    (print_statement PRINT 
      (print_args 
        (expr 
          (literal "x% =")) ; 
        (print_args 
          (expr 
            (variable_or_function_call x%)))))) \n 
  (label 
    (line_number 50)) 
  (statement 
    (error_statement ERROR 
      (expr 
        (literal 57)))) \n statement \n 
  (label 
    (text_label 
      (untyped_id Handler)) :) statement \n 
  (statement 
    (print_statement PRINT print_args)) \n 
  (statement 
    (print_statement PRINT 
      (print_args 
        (expr 
          (literal "Error ")) ; 
        (print_args 
          (expr 
            (variable_or_function_call ERR)) ; 
          (print_args 
            (expr 
              (literal " on line ")) ; 
            (print_args 
              (expr 
                (variable_or_function_call ERL)))))))) \n 
  (statement 
    (select_case_statement SELECT CASE 
      (expr 
        (variable_or_function_call ERR)) 
      (before_first_case \n) 
      (case_block 
        (case_statement CASE 
          (case_expr 
            (expr 
              (literal 71)))) 
        (block \n 
          (statement 
            (print_statement PRINT 
              (print_args 
                (expr 
                  (literal "Using device ")) ; 
                (print_args 
                  (expr 
                    (variable_or_function_call ERDEV$)) ; 
                  (print_args 
                    (expr 
                      (literal " device error code = ")) ; 
                    (print_args 
                      (expr 
                        (variable_or_function_call ERDEV)))))))) \n 
          (statement 
            (resume_statement RESUME NEXT)) \n statement)) 
      (case_block 
        (case_statement CASE 
          (case_expr 
            (expr 
              (literal 11)))) 
        (block \n statement \n 
          (statement 
            (resume_statement RESUME)) \n statement)) 
      (case_block 
        (case_statement CASE ELSE) 
        (block \n 
          (statement 
            (print_statement PRINT 
              (print_args 
                (expr 
                  (literal "Unexpected error, ending program."))))) \n 
          (statement 
            (end_statement END)) \n statement)) 
      (end_select_statement END SELECT))) \n)
