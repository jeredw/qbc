(program statement 
  (def_fn_statement def 
    (typed_fnid fnfoo) = 
    (expr 
      (literal 1))) \n statement 
  (def_fn_statement def fn 
    (typed_id bar) = 
    (expr 
      (literal 1))) \n statement 
  (def_fn_statement def 
    (typed_fnid fnbaz) 
    (block \n 
      (statement 
        (assignment_statement 
          (typed_fnid fnbaz) = 
          (expr 
            (literal 4)))) \n statement) end def) \n statement 
  (def_fn_statement def 
    (typed_fnid fna) 
    (block : 
      (statement 
        (assignment_statement 
          (typed_fnid fna) = 
          (expr 
            (literal 1)))) :) end def) : statement 
  (def_fn_statement def 
    (typed_fnid fnb) = 
    (expr 
      (literal 2))) : statement 
  (def_fn_statement def 
    (typed_fnid fnc) 
    (block : 
      (statement 
        (assignment_statement 
          (typed_fnid fnc) = 
          (expr 
            (literal 5)))) :) end def) \n statement 
  (def_fn_statement def 
    (typed_fnid fnlet) 
    (block \n 
      (statement 
        (assignment_statement let 
          (typed_fnid fnlet) = 
          (expr 
            (literal 42)))) \n statement) end def) \n statement 
  (def_fn_statement def 
    (typed_fnid fnexit) 
    (block \n 
      (statement 
        (exit_statement exit def)) \n statement) end def) \n statement 
  (def_fn_statement def 
    (typed_fnid fnq) 
    ( 
      (def_fn_parameter_list 
        (def_fn_parameter 
          (typed_id a %)) , 
        (def_fn_parameter 
          (typed_id b %))) ) 
    (block \n statement) end def) \n statement 
  (def_fn_statement def 
    (typed_fnid fnq) 
    ( 
      (def_fn_parameter_list 
        (def_fn_parameter 
          (typed_id a %)) , 
        (def_fn_parameter b as 
          (type_name_for_def_fn_parameter string)) , 
        (def_fn_parameter c as 
          (type_name_for_def_fn_parameter double))) ) 
    (block \n statement) end def) \n statement 
  (def_fn_statement def 
    (typed_fnid fnz) 
    ( ) 
    (block :) end def) \n statement 
  (def_fn_statement def 
    (typed_fnid fnchoo $) 
    (block : 
      (statement 
        (assignment_statement 
          (typed_fnid fnchoo $) = 
          (expr 
            (literal "hi")))) :) end def) \n)
