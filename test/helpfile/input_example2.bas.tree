(program ' \n ' \n \n 
  (statement 
    (deftype_statement DEFINT 
      (letter_range A - Z))) \n 
  (statement 
    (call_statement 
      (untyped_id CLS))) ' \n 
  (statement 
    (open_statement OPEN 
      (expr 
        (literal "class.dat")) FOR 
      (open_mode INPUT) AS # 
      (expr 
        (literal 1)))) \n \n 
  (statement 
    (do_loop_statement DO 
      (do_condition WHILE 
        (expr NOT 
          (expr 
            (variable_or_function_call EOF 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (literal 1)))) ))))) 
      (block \n 
        (statement 
          (assignment_statement 
            (variable_or_function_call Count) = 
            (expr 
              (expr 
                (variable_or_function_call Count)) + 
              (expr 
                (literal 1))))) \n 
        (statement 
          (input_file_statement INPUT 
            (file_number # 
              (expr 
                (literal 1))) , 
            (variable_or_function_call Score))) \n 
        (statement 
          (assignment_statement 
            (variable_or_function_call Total) = 
            (expr 
              (expr 
                (variable_or_function_call Total)) + 
              (expr 
                (variable_or_function_call Score))))) \n 
        (statement 
          (print_statement PRINT 
            (print_argument 
              (expr 
                (variable_or_function_call Count)) ;) 
            (print_argument 
              (expr 
                (variable_or_function_call Score))))) \n) LOOP)) \n 
  (statement 
    (print_statement PRINT)) \n 
  (statement 
    (print_statement PRINT 
      (print_argument 
        (expr 
          (literal "Total students:")) ;) 
      (print_argument 
        (expr 
          (variable_or_function_call Count)) ;) 
      (print_argument 
        (expr 
          (literal " Average score:")) ;) 
      (print_argument 
        (expr 
          (expr 
            (variable_or_function_call Total)) / 
          (expr 
            (variable_or_function_call Count)))))) \n <EOF>)
