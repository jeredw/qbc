(program ' \r\n ' \r\n ' \r\n 
  (statement 
    (const_statement CONST 
      (const_assignment WHOLE = 
        (const_expr 
          (expr 
            (literal 5000!)))) , 
      (const_assignment QRTR = 
        (const_expr 
          (expr 
            (expr 
              (variable_or_function_call WHOLE)) / 
            (expr 
              (literal 4.))))))) \r\n 
  (statement 
    (const_statement CONST 
      (const_assignment C = 
        (const_expr 
          (expr 
            (literal 523.0)))) , 
      (const_assignment D = 
        (const_expr 
          (expr 
            (literal 587.33)))) , 
      (const_assignment E = 
        (const_expr 
          (expr 
            (literal 659.26)))) , 
      (const_assignment F = 
        (const_expr 
          (expr 
            (literal 698.46)))) , 
      (const_assignment G = 
        (const_expr 
          (expr 
            (literal 783.99)))) , 
      (const_assignment A = 
        (const_expr 
          (expr 
            (literal 880.00)))))) \r\n 
  (statement 
    (const_statement CONST 
      (const_assignment B = 
        (const_expr 
          (expr 
            (literal 987.77)))) , 
      (const_assignment C1 = 
        (const_expr 
          (expr 
            (literal 1046.50)))))) \r\n 
  (statement 
    (call_statement CALL 
      (untyped_id Sounds) 
      ( 
        (argument_list 
          (argument 
            (expr 
              (variable_or_function_call C))) , 
          (argument 
            (expr 
              (variable_or_function_call QRTR)))) ))) : 
  (statement 
    (call_statement CALL 
      (untyped_id Sounds) 
      ( 
        (argument_list 
          (argument 
            (expr 
              (variable_or_function_call D))) , 
          (argument 
            (expr 
              (variable_or_function_call QRTR)))) ))) \r\n 
  (statement 
    (call_statement CALL 
      (untyped_id Sounds) 
      ( 
        (argument_list 
          (argument 
            (expr 
              (variable_or_function_call E))) , 
          (argument 
            (expr 
              (variable_or_function_call QRTR)))) ))) : 
  (statement 
    (call_statement CALL 
      (untyped_id Sounds) 
      ( 
        (argument_list 
          (argument 
            (expr 
              (variable_or_function_call F))) , 
          (argument 
            (expr 
              (variable_or_function_call QRTR)))) ))) \r\n 
  (statement 
    (call_statement CALL 
      (untyped_id Sounds) 
      ( 
        (argument_list 
          (argument 
            (expr 
              (variable_or_function_call G))) , 
          (argument 
            (expr 
              (variable_or_function_call QRTR)))) ))) : 
  (statement 
    (call_statement CALL 
      (untyped_id Sounds) 
      ( 
        (argument_list 
          (argument 
            (expr 
              (variable_or_function_call A))) , 
          (argument 
            (expr 
              (variable_or_function_call QRTR)))) ))) \r\n 
  (statement 
    (call_statement CALL 
      (untyped_id Sounds) 
      ( 
        (argument_list 
          (argument 
            (expr 
              (variable_or_function_call B))) , 
          (argument 
            (expr 
              (variable_or_function_call QRTR)))) ))) : 
  (statement 
    (call_statement CALL 
      (untyped_id Sounds) 
      ( 
        (argument_list 
          (argument 
            (expr 
              (variable_or_function_call C1))) , 
          (argument 
            (expr 
              (variable_or_function_call WHOLE)))) ))) \r\n \r\n 
  (sub_statement SUB 
    (untyped_id Sounds) 
    ( 
      (parameter_list 
        (parameter Freq!) , 
        (parameter Length!)) ) STATIC 
    (block \r\n ' \r\n ' \r\n ' \r\n ' \r\n 
      (statement 
        (assignment_statement 
          (variable_or_function_call Clicks%) = 
          (expr 
            (variable_or_function_call CINT 
              ( 
                (argument_list 
                  (argument 
                    (expr 
                      (expr 
                        (literal 1193280!)) / 
                      (expr 
                        (variable_or_function_call Freq!))))) ))))) \r\n 
      (statement 
        (assignment_statement 
          (variable_or_function_call LoByte%) = 
          (expr 
            (expr 
              (variable_or_function_call Clicks%)) AND 
            (expr 
              (literal &H00FF))))) \r\n 
      (statement 
        (assignment_statement 
          (variable_or_function_call HiByte%) = 
          (expr 
            (expr 
              (variable_or_function_call Clicks%)) \ 
            (expr 
              (literal 256))))) \r\n ' \r\n 
      (statement 
        (call_statement 
          (untyped_id OUT) 
          (argument_list 
            (argument 
              (expr 
                (literal 67))) , 
            (argument 
              (expr 
                (literal 182)))))) \r\n ' \r\n 
      (statement 
        (call_statement 
          (untyped_id OUT) 
          (argument_list 
            (argument 
              (expr 
                (literal 66))) , 
            (argument 
              (expr 
                (variable_or_function_call LoByte%)))))) \r\n 
      (statement 
        (call_statement 
          (untyped_id OUT) 
          (argument_list 
            (argument 
              (expr 
                (literal 66))) , 
            (argument 
              (expr 
                (variable_or_function_call HiByte%)))))) \r\n ' \r\n 
      (statement 
        (assignment_statement 
          (variable_or_function_call SpkrOn%) = 
          (expr 
            (expr 
              (variable_or_function_call INP 
                ( 
                  (argument_list 
                    (argument 
                      (expr 
                        (literal 97)))) ))) OR 
            (expr 
              (literal &H03))))) \r\n 
      (statement 
        (call_statement 
          (untyped_id OUT) 
          (argument_list 
            (argument 
              (expr 
                (literal 97))) , 
            (argument 
              (expr 
                (variable_or_function_call SpkrOn%)))))) \r\n ' \r\n 
      (statement 
        (for_next_statement FOR I! = 
          (expr 
            (literal 1)) TO 
          (expr 
            (variable_or_function_call Length!)) 
          (block :) NEXT I!)) \r\n ' \r\n 
      (statement 
        (assignment_statement 
          (variable_or_function_call SpkrOff%) = 
          (expr 
            (expr 
              (variable_or_function_call INP 
                ( 
                  (argument_list 
                    (argument 
                      (expr 
                        (literal 97)))) ))) AND 
            (expr 
              (literal &HFC))))) \r\n 
      (statement 
        (call_statement 
          (untyped_id OUT) 
          (argument_list 
            (argument 
              (expr 
                (literal 97))) , 
            (argument 
              (expr 
                (variable_or_function_call SpkrOff%)))))) \r\n) 
    (end_sub_statement END SUB)) \r\n \n <EOF>)
