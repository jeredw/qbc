(program 
  (type_statement type 
    (untyped_id thing) \n \n \n 
    (type_element 
      (untyped_id x) as 
      (type_name_for_type_element 
        (fixed_string string * 40)) \n) 
    (rem_statement rem) \n 
    (type_element 
      (untyped_id y) as 
      (type_name_for_type_element double) \n) 
    (type_element 
      (untyped_id z) as 
      (type_name_for_type_element 
        (untyped_id anotherthing)) \n) end type) \n 
  (type_statement type 
    (untyped_id foo) : 
    (type_element 
      (untyped_id a) as 
      (type_name_for_type_element 
        (fixed_string string * 2)) :) end type) : 
  (type_statement type 
    (untyped_id bar) : 
    (type_element 
      (untyped_id a) as 
      (type_name_for_type_element 
        (fixed_string string * 4)) :) end type) \n 
  (type_statement type 
    (untyped_id baz) : : 
    (type_element 
      (untyped_id a) as 
      (type_name_for_type_element integer) :) end type) \n 
  (type_statement type 
    (untyped_id whoa) \n 
    (type_element 
      (untyped_id a) as 
      (type_name_for_type_element integer) :) 
    (type_element 
      (untyped_id b) as 
      (type_name_for_type_element integer) \n) end type) \n 
  (type_statement type 
    (untyped_id yep) \n 
    (type_element 
      (untyped_id a) as 
      (type_name_for_type_element integer) :) 
    (rem_statement rem) \n 
    (type_element 
      (untyped_id b) as 
      (type_name_for_type_element integer) :) 
    (rem_statement rem) \n end type) \n 
  (type_statement type 
    (untyped_id ok) \n 
    (type_element 
      (untyped_id x) as 
      (type_name_for_type_element 
        (fixed_string string * &h20)) \n) 
    (type_element 
      (untyped_id y) as 
      (type_name_for_type_element 
        (fixed_string string * 40 %)) \n) 
    (type_element 
      (untyped_id z) as 
      (type_name_for_type_element 
        (fixed_string string * k)) \n) end type) \n <EOF>)
