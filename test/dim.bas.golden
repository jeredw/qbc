(program 
  (statement 
    (dim_statement dim 
      (dim_variable sigil$))) \n 
  (statement 
    (dim_statement redim shared 
      (dim_variable ssh%))) \n 
  (statement 
    (dim_statement dim 
      (dim_variable 
        (untyped_id s) as 
        (type_name string)))) \n 
  (statement 
    (dim_statement dim shared 
      (dim_variable 
        (untyped_id foo) as 
        (type_name 
          (fixed_string string * 42))))) \n 
  (statement 
    (dim_statement redim 
      (dim_variable 
        (untyped_id q) as 
        (type_name double)))) \n 
  (statement 
    (dim_statement dim 
      (dim_variable 
        (untyped_id x) as 
        (type_name single)))) \n 
  (statement 
    (dim_statement dim 
      (dim_variable 
        (untyped_id lo) as 
        (type_name long)))) \n 
  (statement 
    (dim_statement dim 
      (dim_variable 
        (untyped_id bar) as 
        (type_name 
          (untyped_id sometype))))) \n 
  (statement 
    (dim_statement dim 
      (dim_variable 
        (untyped_id the.thing) as 
        (type_name integer)))) \n 
  (statement 
    (dim_statement redim shared 
      (dim_variable 
        (untyped_id q2) as 
        (type_name single)))) \n 
  (statement 
    (dim_statement dim 
      (dim_variable foo$) , 
      (dim_variable bar%) , 
      (dim_variable 
        (untyped_id baz) as 
        (type_name long)) , 
      (dim_variable quux!))) \n 
  (statement 
    (dim_statement dim 
      (dim_variable a) , 
      (dim_variable b) , 
      (dim_variable c))) \n 
  (statement 
    (dim_statement dim 
      (dim_variable arq$ 
        (dim_array_bounds 
          ( 
            (dim_subscript 
              (expr 
                (literal 40))) ))))) \n 
  (statement 
    (dim_statement dim 
      (dim_variable ar 
        (dim_array_bounds 
          ( 
            (dim_subscript 
              (expr - 
                (expr 
                  (literal 2))) to 
              (expr - 
                (expr 
                  (literal 1)))) ))))) \n 
  (statement 
    (dim_statement dim 
      (dim_variable arz 
        (dim_array_bounds 
          ( 
            (dim_subscript 
              (expr 
                (literal 0))) ))))) \n 
  (statement 
    (dim_statement dim 
      (dim_variable boo 
        (dim_array_bounds 
          ( 
            (dim_subscript 
              (expr 
                (variable_or_function_call k%))) ))))) \n 
  (statement 
    (dim_statement dim 
      (dim_variable multi 
        (dim_array_bounds 
          ( 
            (dim_subscript 
              (expr 
                (variable_or_function_call xxx))) , 
            (dim_subscript 
              (expr 
                (literal 0)) to 
              (expr 
                (literal 20))) , 
            (dim_subscript 
              (expr 
                (literal 30)) to 
              (expr 
                (literal 35))) , 
            (dim_subscript 
              (expr 
                (variable_or_function_call yyy))) ))) , 
      (dim_variable 
        (untyped_id wowzas) 
        (dim_array_bounds 
          ( 
            (dim_subscript 
              (expr 
                (variable_or_function_call hi))) , 
            (dim_subscript 
              (expr - 
                (expr 
                  (literal 5))) to 
              (expr 
                (literal 30))) )) as 
        (type_name string)))) \n 
  (statement 
    (dim_statement dim 
      (dim_variable 
        (untyped_id foo) as 
        (type_name 
          (fixed_string string * maxsize%))))) \n <EOF>)
