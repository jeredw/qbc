(program 
  (line (statement (dim_statement dim (dim_variable (variable sigil $)))) \n) 
  (line (statement (dim_statement redim shared (dim_variable (variable ssh %)))) \n) 
  (line (statement (dim_statement dim (dim_variable s as (type_name string)))) \n) 
  (line (statement (dim_statement dim shared (dim_variable foo as (type_name string * 42)))) \n) 
  (line (statement (dim_statement redim (dim_variable q as (type_name double)))) \n) 
  (line (statement (dim_statement dim (dim_variable x as (type_name single)))) \n) 
  (line (statement (dim_statement dim (dim_variable lo as (type_name long)))) \n) 
  (line (statement (dim_statement dim (dim_variable bar as (type_name sometype)))) \n) 
  (line (statement (dim_statement dim (dim_variable the.thing as (type_name integer)))) \n) 
  (line (statement (dim_statement redim shared (dim_variable q2 as (type_name single)))) \n) 
  (line (statement (dim_statement dim (dim_variable (variable foo $)) , (dim_variable (variable bar %)) , (dim_variable baz as (type_name long)) , (dim_variable (variable quux !)))) \n) 
  (line (statement (dim_statement dim (dim_variable (variable a)) , (dim_variable (variable b)) , (dim_variable (variable c)))) \n) 
  (line (statement (dim_statement dim (dim_variable (variable arq $) (dim_array_bounds ( (dim_subscript (expr (literal 40))) ))))) \n) 
  (line (statement (dim_statement dim (dim_variable (variable ar) (dim_array_bounds ( (dim_subscript (expr (literal - 2)) to (expr (literal - 1))) ))))) \n) 
  (line (statement (dim_statement dim (dim_variable (variable arz) (dim_array_bounds ( (dim_subscript (expr (literal 0))) ))))) \n) 
  (line (statement (dim_statement dim (dim_variable (variable boo) (dim_array_bounds ( (dim_subscript (expr (variable k %))) ))))) \n) 
  (line (statement (dim_statement dim (dim_variable (variable multi) (dim_array_bounds ( (dim_subscript (expr (variable xxx))) , (dim_subscript (expr (literal 0)) to (expr (literal 20))) , (dim_subscript (expr (literal 30)) to (expr (literal 35))) , (dim_subscript (expr (variable yyy))) ))) , (dim_variable wowzas (dim_array_bounds ( (dim_subscript (expr (variable hi))) , (dim_subscript (expr (literal - 5)) to (expr (literal 30))) )) as (type_name string)))) \n) <EOF>)
